(()=>{var __webpack_modules__=[(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(1);\n/* harmony import */ var _babel_runtime_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(2);\n/* harmony import */ var _tsbackendscript_login__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(8);\n/* harmony import */ var _url__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(16);\n/* harmony import */ var _miscellaneous__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(15);\n/* harmony import */ var _lithtmlscript__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(17);\n/* harmony import */ var _tsbackendscript_ajaxfunctioncall__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(11);\n/* harmony import */ var _register__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(18);\n/* harmony import */ var _user__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(19);\n/* harmony import */ var _product__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(20);\n/* harmony import */ var _coupon__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(21);\n/* harmony import */ var _tables__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(22);\n\n\n\nvar _this = undefined;\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === "undefined" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it["return"] != null) it["return"](); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0,_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0__.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n// import expect "" quotes  in typescript\n//declare var ajaxcall:any;\n// import * \'../dist/mylanguages/\'\n// remember to remove create create  link \n\n\n\n\n\n\n\n\n\n\ntoastr.options = {\n  // toast and notification\n  "closeButton": true,\n  "debug": false,\n  "newestOnTop": false,\n  "progressBar": true,\n  "positionClass": "toast-top-right",\n  "preventDuplicates": false,\n  "onclick": null,\n  "showDuration": "2500",\n  "hideDuration": "200",\n  "timeOut": "3000",\n  "showEasing": "swing",\n  "hideEasing": "linear",\n  "showMethod": "fadeIn",\n  "hideMethod": "fadeOut"\n}; // I had to  add export {}  below to make it  an an isolated modules.\n// i also commented out the  isloated  modules to output a  single js file without compiling  other other ts script\n// I intalled babel js transform to  be a  able  to compile tsx with jsx code.\n// when  you dont  set rootDir , typescript  make use  of  the default rootdir\n// which is better. \n//logic goes  as  thus \n//form submit for login\n\nconsole.log(\'on load here ........\');\n$(\'#login\').on(\'click\', function (e) {\n  e.preventDefault();\n  var loginobj = new _tsbackendscript_login__WEBPACK_IMPORTED_MODULE_2__.login();\n  var myform = $(\'form\')[0];\n  console.log(\'id \', $(_this).id);\n  var htmlform = document.getElementById(\'submitLogin\');\n  var username = htmlform.username.value;\n  var password = htmlform.password.value;\n  console.log(username, \' and \', password);\n  var form = new FormData(); // just note  this\n\n  form.append(\'username\', username);\n  form.append(\'password\', password); // alert(\'login\');\n\n  loginobj.loginaction(form, "");\n}); //process page load \n\nvar urlpages = ["".concat(_url__WEBPACK_IMPORTED_MODULE_3__.loginurl, "/adminindex"), "".concat(_url__WEBPACK_IMPORTED_MODULE_3__.loginurl, "/category"), "".concat(_url__WEBPACK_IMPORTED_MODULE_3__.loginurl, "/categorysub"), "".concat(_url__WEBPACK_IMPORTED_MODULE_3__.loginurl, "/categorysubdigital"), "".concat(_url__WEBPACK_IMPORTED_MODULE_3__.loginurl, "/productlistdetails"), "".concat(_url__WEBPACK_IMPORTED_MODULE_3__.loginurl, "/addprod"), "".concat(_url__WEBPACK_IMPORTED_MODULE_3__.loginurl, "/categorydigital"), "".concat(_url__WEBPACK_IMPORTED_MODULE_3__.loginurl, "/categorysub"), "".concat(_url__WEBPACK_IMPORTED_MODULE_3__.loginurl, "/productlistdigital"), "".concat(_url__WEBPACK_IMPORTED_MODULE_3__.loginurl, "/order"), "".concat(_url__WEBPACK_IMPORTED_MODULE_3__.loginurl, "/transactions"), "".concat(_url__WEBPACK_IMPORTED_MODULE_3__.loginurl, "/couponlist"), "".concat(_url__WEBPACK_IMPORTED_MODULE_3__.loginurl, "/couponcreate"), "".concat(_url__WEBPACK_IMPORTED_MODULE_3__.loginurl, "/pagelist"), "".concat(_url__WEBPACK_IMPORTED_MODULE_3__.loginurl, "/pagecreate"), "".concat(_url__WEBPACK_IMPORTED_MODULE_3__.loginurl, "/menulist"), "".concat(_url__WEBPACK_IMPORTED_MODULE_3__.loginurl, "/menulist"), "".concat(_url__WEBPACK_IMPORTED_MODULE_3__.loginurl, "/userlist"), "".concat(_url__WEBPACK_IMPORTED_MODULE_3__.loginurl, "/createuser"), "".concat(_url__WEBPACK_IMPORTED_MODULE_3__.loginurl, "/createvendors"), "".concat(_url__WEBPACK_IMPORTED_MODULE_3__.loginurl, "/translations"), "".concat(_url__WEBPACK_IMPORTED_MODULE_3__.loginurl, "/currencyrates"), "".concat(_url__WEBPACK_IMPORTED_MODULE_3__.loginurl, "/taxes"), "".concat(_url__WEBPACK_IMPORTED_MODULE_3__.loginurl, "/reports"), "".concat(_url__WEBPACK_IMPORTED_MODULE_3__.loginurl, "/profile"), "".concat(_url__WEBPACK_IMPORTED_MODULE_3__.loginurl, "/invoice")]; //add digital product \n\n$(\'#adddigitalprod\').on(\'click\', function (e) {\n  e.preventDefault();\n  Swal.fire({\n    icon: \'question\',\n    // title: \'Multi-Vendor Owner\',\n    text: \'Do you want to add this Product ?\',\n    showCancelButton: true,\n    allowOutsideClick: false\n  }).then(function (result) {\n    if (result.isConfirmed) {\n      var formdata = new FormData();\n      var ptitle = document.getElementsByName(\'productname\')[0];\n      formdata.append("title", ptitle.value);\n      console.log(\'title\', ptitle.value);\n      var sku = document.getElementsByName(\'sku\')[0];\n      formdata.append("sku", sku.value);\n      console.log(\'sku\', sku.value);\n      var productquantity = document.getElementsByName(\'productquantity\')[0];\n      formdata.append("productquantity", productquantity.value);\n      console.log(\'productquantity\', productquantity.value);\n      var productcode = document.getElementsByName(\'productcode\')[0];\n      formdata.append("productcode", productcode.value);\n      console.log(\'productcode\', productcode.value);\n      var expirydate = document.getElementsByName(\'expirydate\')[0];\n      formdata.append("expirydate", expirydate.value);\n      console.log(\'expirydate\', expirydate.value);\n      var state = document.getElementsByName(\'state\')[0];\n      formdata.append("state", state.value);\n      var productstatus = document.getElementsByName(\'productstatus\')[0];\n      console.log(\'productstatus\', productstatus.value);\n      var productprice = document.getElementsByName(\'productprice\')[0];\n      formdata.append("productprice", productprice.value);\n      console.log(\'productprice\', productprice.value);\n      var imageurl = document.getElementsByName(\'imageurl\')[0];\n      formdata.append("imageurl", imageurl.value);\n      console.log(\'imageurl\', imageurl.value);\n      var proddescription = document.getElementsByName(\'proddescription\')[0];\n      formdata.append("proddescription", proddescription.value);\n      console.log(\'proddescription\', proddescription.value); //let proddes:any  =  document.getElementById(\'editor1\') ;\n      // let proddes:any= document.getElementById(\'editor1\') ;\n      // formdata.append("proddes",proddes.value) ;\n      // console.log(\'proddes\',proddes.value) ;\n\n      var metatitle = document.getElementsByName(\'metatitle\')[0];\n      formdata.append("metatitle", metatitle.value);\n      console.log(\'metatitle\', metatitle.value);\n      var metadescription = document.getElementsByName(\'metadescription\')[0];\n      formdata.append("metadescription", metadescription.value);\n      console.log(\'metadescription\', metadescription.value);\n      var productsta = document.getElementsByName(\'productstatus\');\n      var itemstate = document.getElementsByName(\'state\');\n\n      var _Array$from = Array.from(itemstate),\n          _Array$from2 = (0,_babel_runtime_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_1__.default)(_Array$from, 2),\n          enable = _Array$from2[0],\n          disable = _Array$from2[1];\n\n      console.log(\'enable\', enable);\n\n      if (enable.checked) {\n        formdata.append(\'state\', \'enable\');\n      } else if (disable.checked) {\n        formdata.append(\'state\', \'disable\');\n      }\n\n      var _Array$from3 = Array.from(productsta),\n          _Array$from4 = (0,_babel_runtime_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_1__.default)(_Array$from3, 2),\n          newprod = _Array$from4[0],\n          oldprod = _Array$from4[1];\n\n      if (newprod.checked) {\n        formdata.append(\'productstatus\', \'new\');\n      } else if (oldprod.checked) {\n        formdata.append(\'productstatus\', \'old\');\n      }\n\n      var categoryid = document.getElementsByName(\'categoryid\')[0];\n      formdata.append("categoryid", categoryid.value);\n      console.log(\'categoryid\', categoryid.value);\n      var subcategoryid = document.getElementsByName(\'subcategoryid\')[0];\n      formdata.append("subcategoryid", subcategoryid.value);\n      console.log(\'subcategoryid\', subcategoryid.value);\n      var shortsummary = document.getElementsByName(\'shortsummary\')[0];\n      formdata.append("shortsummary", shortsummary.value);\n      console.log(\'shortsummary\', shortsummary.value); //  let editor1:any  = document.getElementsByName(\'editor1\')[0] ;\n      //  formdata.append("editor1",editor1.value) ;\n      //   console.log(\'editor1\',editor1.value) ;     \n    } else if (result.isDismissed) {\n      Swal.fire({\n        icon: \'error\',\n        text: \'No product added.\'\n      }).then(function (r) {\n        window.location.reload();\n      });\n    }\n  });\n}); //set priceofproduct\n\n$(\'#tax\').on(\'change\', function (e) {\n  e.preventDefault();\n  var priceofproduct = document.getElementById(\'priceofproduct\');\n  var cal = parseFloat(e.target.value) * 100 + parseInt($(\'#productprice\').val());\n  console.log(cal);\n  toastr.success(\'Your selling price will be \' + cal + \' which is (price-tax)\');\n  priceofproduct.value = cal + "";\n  console.log("price " + priceofproduct.value);\n  document.getElementById(\'pricediv\').style.display = \'none\';\n}); //add product creation  \n\n$(\'#addproduct\').on(\'click\', function (e) {\n  e.preventDefault();\n  Swal.fire({\n    icon: \'question\',\n    text: \'Do you want to add Product ?\',\n    showCancelButton: true,\n    allowOutsideClick: false\n  }).then(function (result) {\n    if (result.isConfirmed) {\n      var prod = new _product__WEBPACK_IMPORTED_MODULE_9__.product();\n      var form = document.querySelector(\'#add-product-form\'); //  console.log(\'form \', form, \'state \', form.state);\n\n      var _Array$from5 = Array.from(form.state),\n          _Array$from6 = (0,_babel_runtime_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_1__.default)(_Array$from5, 2),\n          enable = _Array$from6[0],\n          disable = _Array$from6[1];\n\n      var _Array$from7 = Array.from(form.productstatus),\n          _Array$from8 = (0,_babel_runtime_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_1__.default)(_Array$from7, 3),\n          newprod = _Array$from8[0],\n          oldprod = _Array$from8[1],\n          refurbished = _Array$from8[2]; // console.log(\'state \', form.state[0].input, \' enable \', enable.checked, \n      // \' disable \', disable.checked,\n      // \' new prod \',newprod.checked,\' oldprob \',oldprod.checked);\n      // validate image    \n      //      console.log(\' form model ,\',form.model[].value\n      //  ,\' size \',form.size.value,\' colour \',form.colour[].value) ;\n\n\n      if (form.prdfile.value.length < 1) {\n        toastr.error(\'pls add image ..\');\n        return;\n      } //  alert() ;\n      //return ;\n\n\n      if (form.productname.value.length < 1) {\n        toastr.error(\'please add product name ..\');\n        return;\n      } // if ((/\\d/.test(form.productname.value))) {\n      //   toastr.error(\'product name should contain only letters ......\');\n      //   return;\n      // }\n\n\n      if (!/\\d+$/.test(form.productprice.value)) {\n        toastr.error(\'product price should contains numbers only\');\n        return;\n      }\n\n      if (form.categoryid.value.length < 1 || form.categoryid.value === \'\') {\n        toastr.error(\'please select category\');\n        return;\n      }\n\n      if (form.subcategoryid.value.length < 1 || form.subcategoryid.value === \'\') {\n        toastr.error(\'please select sub category\');\n        return;\n      }\n\n      if (form.productcode.value.length < 1) {\n        toastr.error("product code cannot be empty");\n        return;\n      }\n\n      if (form.metatitle.value.length < 1) {\n        toastr.error("meta title cannot be empty");\n        return;\n      }\n\n      if (form.tax.value.length < 1) {\n        toastr.error("tax cannot be empty");\n        return;\n      } // if (form.expirydate.value.length < 1) {\n      //   toastr.error("expiry date cannot be empty");\n      //   return;\n      // }\n      // if (form.size.value.length < 1) {\n      //   toastr.error("size cannot be empty");\n      //   return;\n      // }\n\n\n      if (form.shortsummary.value.length < 1) {\n        toastr.error("short summary cannot be empty");\n        return;\n      }\n\n      if (form.metadescription.value.length < 1) {\n        toastr.error("metadescription cannot be empty");\n        return;\n      }\n\n      if (enable.checked !== true && disable.checked !== true) {\n        toastr.error(\'pls check either enable or disable\');\n        return;\n      }\n\n      if (newprod.checked !== true && oldprod.checked !== true && refurbished.checked !== true) {\n        toastr.error(\'please check new or old or refurbished\');\n        return;\n      }\n\n      if (CKEDITOR.instances.editor1.getData().length < 1) {\n        toastr.error("description cannot be empty");\n        return;\n      }\n\n      var prdform = new FormData(form);\n      prdform.append(\'proddescription\', CKEDITOR.instances.editor1.getData());\n      var vendorname = localStorage.getItem(\'vendorname\'); // console.log(\'vendorname\',vendorname);\n\n      prdform.append(\'vendorname\', vendorname);\n      prdform.append(\'manysizes\', $(\'#sizesofproduct\').val());\n      prdform.append(\'colour\', $(\'#colourofproduct\').val());\n      prdform["delete"](\'model\'); // removes id\n\n      prdform.append(\'model\', $(\'#model\').val().split(\',\')); // console.log(\' id \',$("#id").val()) ;\n\n      if ($("#id").val() === null || $("#id").val() === undefined || $("#id").val() === \'\') {\n        //alert($("#id").length)\n        prdform["delete"](\'id\'); // removes id\n\n        console.log(\' size by id ,\', $(\'#sizesofproduct\').val());\n        console.log(\' colour by id ,\', $(\'#colourofproduct\').val());\n        prdform["delete"](\'size[]\'); // removes size \n\n        prdform["delete"](\'colour[]\'); // removes size \n\n        console.log(\'without id\');\n        console.log(\' form \', Object.fromEntries(prdform));\n        prod.saveproduct(prdform); //return ;\n      } else {\n        console.log(\'with id\', Object.fromEntries(prdform)); // console.log(\' form \',Object.fromEntries(prdform)) ;\n        // prdform.delete(\'id\');// removes id\n        // return ;\n\n        prod.saveproduct(prdform);\n      } // reset form \n      // return ;\n\n\n      setTimeout(function () {// form.reset() ; \n      }, 1500);\n    } else if (result.isDismissed) {\n      Swal.fire({\n        icon: \'error\',\n        text: \'No product added.\'\n      });\n    }\n  });\n}); // for language change \n\n$(\'.language-dropdown\').on(\'click\', function (e) {\n  e.preventDefault();\n  console.log(e);\n\n  if (e.target.lastChild.data === \'English\') {\n    alert(e.target.lastChild.data);\n  } else if (e.target.lastChild.data === \'Spanish\') {\n    alert(e.target.lastChild.data);\n  } else if (e.target.lastChild.data === \'Portuguese\') {\n    alert(e.target.lastChild.data);\n  } else if (e.target.lastChild.data === \'French\') {\n    // alert(e.target.lastChild.data) ;\n    alertify.confirm(\'Confirmer la langue\', \'Voulez-vous changer en français\', function () {\n      $(\'[data-localize]\').localize(\'../dist/mylanguages/mylanguage\', {\n        language: \'fr\'\n      });\n      alertify.success("D\'accord");\n    }, function () {\n      alertify.error(\'Annuler\');\n    }).set(\'labels\', {\n      ok: \'Bien!\',\n      cancel: \'Naa!\'\n    });\n    ;\n  } else if (e.target.lastChild.data === \'German\') {\n    alert(e.target.lastChild.data);\n  } else if (e.target.lastChild.data === \'Arabic\') {\n    alert(e.target.lastChild.data);\n  } else if (e.target.lastChild.data === \'Swahili\') {\n    alert(e.target.lastChild.data);\n  } else if (e.target.lastChild.data === \'Yoruba\') {\n    alert(e.target.lastChild.data);\n  } else if (e.target.lastChild.data === \'Igbo\') {\n    alertify.confirm(\'Kwenye asusu\', \'Chọrọ ịgbanwe na Igbo\', function () {\n      $(\'[data-localize]\').localize(\'../dist/mylanguages/mylanguage\', {\n        language: \'ig\'\n      });\n      alertify.success("Dịkwa mma");\n    }, function () {\n      alertify.error(\'Ikagbu\');\n    }).set(\'labels\', {\n      ok: \'Ọ dị mma!\',\n      cancel: \'Naa!\'\n    });\n    ;\n  } else if (e.target.lastChild.data === \'Hausa\') {\n    alert(e.target.lastChild.data);\n  }\n}); // check for  vendorowner \n\nvar owner = function owner(vendorowner, yes, no) {\n  console.log(\'yes\', yes.checked, \'no\', no.checked);\n\n  if (no.checked || !no.checked) {\n    vendorowner = false;\n  }\n\n  if (yes) {\n    vendorowner = yes.checked;\n  }\n\n  console.log(\'vendorowner\', vendorowner, \'yes\', yes.checked, \'no\', no.checked);\n}; // process user creation \n\n\n$(\'#submituser\').on(\'click\', function (e) {\n  e.preventDefault();\n  e.stopPropagation();\n  var user = new _user__WEBPACK_IMPORTED_MODULE_8__.User(); // get  data  from page \n  //role is assigned from the back end \n\n  var form1 = JSON.parse($(\'#userdetails\').jform());\n  var userdetails = document.getElementById(\'userdetails\');\n\n  var _Array$from9 = Array.from(userdetails.vendorowner),\n      _Array$from10 = (0,_babel_runtime_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_1__.default)(_Array$from9, 2),\n      yes = _Array$from10[0],\n      no = _Array$from10[1]; //console.log("checking  form1 ", form1, " value ", yes.value);\n\n\n  var vendorowner = false;\n\n  if (yes.checked) {\n    var ans = confirm("Do you want to make this user a owner ?");\n\n    if (ans) {\n      vendorowner = yes.checked;\n    }\n  } // if (no.checked) {\n  //   vendorowner = no.checked;\n  //    }\n\n\n  if (form1.firstname.length < 1) {\n    $(\'#usererror\').empty().html(\'<br/><div class="alert alert-danger"> <span class="glyphicon glyphicon-info-sign"></span> &nbsp; \' + \'Empty firstname\' + \' !</div>\');\n    return;\n  } //console.log(\'form1.firstname \',form1.firstname);\n  //form1.firstname  = $.trim(form1.firstname) ;\n\n\n  if (!/^[a-zA-Z]{3,20}$/.test(form1.firstname)) {\n    // alert(form1.firstname);\n    $(\'#usererror\').empty().html(\'<br/><div class="alert alert-danger"> <span class="glyphicon glyphicon-info-sign"></span> &nbsp; \' + \'Only letters are expected\' + \' !</div>\');\n    ;\n    return;\n  } // console.log(\'form1.firstname2 \',form1.firstname);\n\n\n  if (form1.lastname.length < 1) {\n    $(\'#usererror\').empty().html(\'<br/><div class="alert alert-danger"> <span class="glyphicon glyphicon-info-sign"></span> &nbsp; \' + \'Empty lastname\' + \' !</div>\');\n    ;\n    return;\n  }\n\n  if (!/^[a-zA-Z ]+$/.test(form1.lastname)) {\n    //  alert(\'last\');\n    $(\'#usererror\').empty().html(\'<br/><div class="alert alert-danger"> <span class="glyphicon glyphicon-info-sign"></span> &nbsp; \' + \'Only letters are expected\' + \' !</div>\');\n    ;\n    return;\n  } //  if(form1.email.length<1){\n  //   $(\'#usererror\').empty().html(\'<br/><div class="alert alert-danger"> <span class="glyphicon glyphicon-info-sign"></span> &nbsp; \'+\n  //   \'wrong format of email\' +\' !</div>\');\n  //   return ;\n  //     }    \n\n\n  if (form1.password !== form1.confirmPassword) {\n    $(\'#usererror\').empty().html(\'<br/><div class="alert alert-danger"> <span class="glyphicon glyphicon-info-sign"></span> &nbsp; \' + \'Password/confirm password does not match\' + \' !</div>\');\n    ;\n    return;\n  }\n\n  if (!yes.checked && !no.checked) {\n    $(\'#usererror\').empty().html(\'<br/><div class="alert alert-danger"> <span class="glyphicon glyphicon-info-sign"></span> &nbsp; \' + \'Either options must be  checked for  vendor\' + \' !</div>\');\n    return;\n  }\n\n  var form2 = JSON.parse($(\'#userpermission\').jform()); // console.log(\'form1 \',form1,\'form2 \',form2) ;   \n\n  var permission = Object.values(form2);\n  console.log(\'permission \', permission);\n  permission = permission.filter(function (r) {\n    if (r !== \'on\') {\n      //  console.log(r);\n      return true;\n    }\n  }); // filtering the array \n  // console.log(" permission ",permission) ;\n\n  if ($.isEmptyObject(permission)) {\n    toastr.error(\'no permissions are selected....\');\n    return;\n  }\n\n  if (userdetails.userstatus.checked) {\n    form1.userstatus = \'1\';\n  } else {\n    form1.userstatus = \'0\';\n  }\n\n  form1.permission = permission;\n  form1.role = []; // form1.vendoroption=vendoroption ;\n\n  form1.vendorname = localStorage.getItem(\'vendorname\'); // get it  from  from localstorage \n  // console.log("form1 ", form1);\n  // decide  how form1 will be submitted \n  // let username = $(\'#usersearch\').val();\n  // console.log(\'username \',username) ;\n\n  if (!$.isEmptyObject(form1.password) && !$.isEmptyObject(form1.confirmPassword)) {\n    owner(vendorowner, yes, no);\n    form1.vendorowner = vendorowner;\n    console.log(\' form1.vendorowner \', form1.vendorowner);\n    delete form1[\'usersearch\'];\n    console.log(\'sending as  new user ......\');\n    Swal.fire({\n      icon: \'question\',\n      // title: \'User creation\',\n      text: \'Do you want to create this user ?\',\n      showCancelButton: true,\n      allowOutsideClick: false\n    }).then(function (result) {\n      if (result.isConfirmed) {\n        if (userdetails.userstatus.checked) {\n          // check  if activated\n          user.save(form1, localStorage.getItem(\'token\'), \'put\', function () {\n            Swal.fire({\n              icon: "success",\n              text: "User is created and activated successfully.Account activation email sent shortly"\n            });\n          }, function () {\n            Swal.fire({\n              icon: "error",\n              text: "Oops.Operation failed.check your connection"\n            });\n          }); // send as new user \n        } else {\n          user.save(form1, localStorage.getItem(\'token\'), \'put\', function () {\n            Swal.fire({\n              icon: "success",\n              text: "User is created successfully but have not been activated"\n            });\n          }, function () {\n            Swal.fire({\n              icon: "error",\n              text: "Oops.Operation failed.check your connection"\n            });\n          }); // send as new user \n        }\n      } else if (result.isDismissed) {\n        Swal.fire({\n          icon: "error",\n          text: "cancelled"\n        });\n      }\n    });\n  } // dont  forget , this page is for admin of every vendor not for supervisor \n  // so by default , there can  only be  one user vendor owner in a  vendor\n\n\n  if ($.isEmptyObject(form1.password) && $.isEmptyObject(form1.confirmPassword)) {\n    Swal.fire({\n      icon: \'question\',\n      //title: \'User creation\',\n      text: \'Do you want to create this user ?\',\n      showCancelButton: true,\n      allowOutsideClick: false\n    }).then(function (result) {\n      var id = $(\'#usersearch\').val();\n      console.log(\'id\', id);\n      owner(vendorowner, yes, no);\n      form1.vendorowner = vendorowner;\n      delete form1[\'usersearch\'];\n      delete form1[\'password\'];\n      delete form1[\'confirmPassword\'];\n      console.log(\'updating  user .....\', form1);\n      form1.id = id; // append the  id  of the elected user  to the json and send for update\n\n      if (result.isConfirmed) {\n        if (userdetails.userstatus.checked) {\n          user.save(form1, localStorage.getItem(\'token\'), \'put\', function () {\n            Swal.fire({\n              icon: "success",\n              text: "User is activated.Account activation email sent shortly"\n            });\n          }, function () {\n            Swal.fire({\n              icon: "error",\n              text: "Oops.Operation failed.Check your connection"\n            });\n          });\n        } else {\n          user.save(form1, localStorage.getItem(\'token\'), \'put\', function () {\n            Swal.fire({\n              icon: "success",\n              text: "User created but have not been activated"\n            });\n          }, function () {\n            Swal.fire({\n              icon: "error",\n              text: "Oops.Operation failed.Check your connection"\n            });\n          });\n        }\n      } else if (result.isDismissed) {\n        Swal.fire({\n          icon: "error",\n          text: "cancelled"\n        });\n      }\n    });\n  }\n}); //personal profile,email,logout\n\n$(\'.profile-dropdown\').on(\'click\', function (e) {\n  //use  event delegation from parent  to  children \n  e.stopPropagation();\n\n  if (e.target.lastChild.data === "Edit Profile") {\n    // invoke  the dialog box \n    console.log("calling dialog");\n    $((0,_lithtmlscript__WEBPACK_IMPORTED_MODULE_5__.dialog)(function () {\n      return "\\n          <form class=\\"needs-validation\\" id=\\"profileform\\">\\n           <div class=\\"form\\">           \\n              <div class=\\"form\\">             \\n              <div class=\\"form\\">\\n              <div class=\\"form-group\\">\\n                  <label for=\\"validationCustom01\\" class=\\"mb-1\\">Location(states or city)* :</label>\\n                  <input class=\\"form-control\\" id=\\"validationCustom01\\" type=\\"text\\" name=\\"location\\" />\\n              </div>\\n              <div class=\\"form-group\\">\\n                  <label for=\\"validationCustom01\\" class=\\"mb-1\\">Gender* :</label>\\n                  <select name=\\"gender\\">\\n                  <option value=\\"male\\">Male</option>\\n                  <option value=\\"female\\">Female</option>\\n                  </select>\\n              </div>\\n              <div class=\\"form\\">\\n              <div class=\\"form-group\\">\\n                  <label for=\\"validationCustom01\\" class=\\"mb-1\\">Mobile* :</label>\\n                  <input class=\\"form-control\\" id=\\"validationCustom01\\" type=\\"text\\" name=\\"mobilenumber\\" />\\n              </div>\\n              <div class=\\"form-group mb-0\\">\\n              <label for=\\"validationCustom02\\" class=\\"mb-1\\">Address* :</label>\\n              <input class=\\"form-control\\" id=\\"validationCustom02\\" type=\\"text\\" name=\\"address\\">\\n              </div>\\n              <div class=\\"form-group mb-0\\">\\n              <label for=\\"validationCustom02\\" class=\\"mb-1\\">Profile Picture* :</label>\\n              <input class=\\"form-control\\" id=\\"validationCustom02\\" type=\\"file\\" name=\\"profilepict\\">\\n          </div>\\n          </div>\\n          </form>\\n          ";\n    }(), function () {\n      return "\\n          <h5 class=\\"modal-title f-w-600\\" id=\\"exampleModalLabel\\">Update your Profile</h5>\\n          <button class=\\"close\\" type=\\"button\\" data-dismiss=\\"modal\\" aria-label=\\"Close\\"><span aria-hidden=\\"true\\">X</span></button>\\n          ";\n    }(), function () {\n      return "\\n          <button class=\\"btn btn-primary\\" type=\\"button\\" onclick=\\"updateprofile(\'profileform\')\\">Update</button>\\n          ";\n    }())).insertAfter(".page-main-header");\n    console.log(\'set dialog\'); //invoke the dialog box \n\n    var mydialogpos = document.querySelector(".modal-dialog");\n    mydialogpos.classList.add("modal-dialog-centered"); // center  it vertically\n    // call ajax to  prefill form\n    //  ajaxcall(`${backendurl}/profile/{userid}`,"",\'get\',\'json\',\'application/json\') ;\n\n    var results = {}; //process asyn calls  \n\n    console.log(\' calling  userid \', localStorage.getItem(\'ack\')); // results = processrequest(`${backendurl}/profile/profile/${localStorage.getItem(\'ack\')}`, "", "get", "application/json",localStorage.getItem(\'token\'));         \n\n    fetch("".concat(_url__WEBPACK_IMPORTED_MODULE_3__.backendurl, "/profile/profile/").concat(localStorage.getItem(\'ack\')), {\n      method: \'get\',\n      credentials: \'same-origin\',\n      headers: {\n        \'Content-Type\': "application/json",\n        \'Authorization\': \'Bearer \' + localStorage.getItem(\'token\')\n      } // body:JSON.stringify(form)\n\n    }).then(function (response) {\n      if (response.status != 200) {\n        throw new Error("network access  error");\n      }\n\n      return response.json();\n    }).then(function (r) {\n      console.log(\'r in function \', r);\n      $("#profileform").autofill(r);\n    });\n    $(\'#exampleModal\').modal(\'show\'); //show modal\n  } else if (e.target.lastChild.data === "Inbox") {\n    console.log("inbox");\n  } else if (e.target.lastChild.data === "Lock Screen") {\n    console.log("lock screen");\n  } else if (e.target.lastChild.data === "Settings") {\n    console.log(\'settings\');\n  } else if (e.target.lastChild.data === "Logout") {\n    console.log("logout");\n  } else if (e.target.lastChild.data === "Change Logo") {\n    // $(dialog("", "", "")).insertAfter(".back-btn");\n    //invoke the dialog box \n    alertify.confirm("Do you want to change Logo?", function () {\n      $((0,_lithtmlscript__WEBPACK_IMPORTED_MODULE_5__.dialog)("", "", "")).insertAfter(".page-main-header");\n      var mydialogpos = document.querySelector(".modal-dialog");\n      mydialogpos.classList.add("modal-dialog-centered"); // center  it verticallycl\n\n      $(".modal-header").html(function () {\n        return dom("h5", {\n          className: "modal-title f-w-600",\n          id: "exampleModalLabel"\n        }, "Upload Logo:");\n      }());\n      $(".modal-body").html(function () {\n        return dom("form", {\n          className: "needs-validation",\n          id: "regform"\n        }, dom("div", {\n          className: "form-group"\n        }, dom("label", {\n          "for": "exampleFormControlFile1"\n        }, dom("small", null, "Upload your Logo?")), dom("input", {\n          type: "file",\n          className: "form-control-file",\n          id: "logo",\n          name: "logo"\n        })));\n      }());\n      $(".modal-footer").html(function () {\n        function handleClick() {\n          var htmlform = document.getElementById(\'regform\');\n          var input1 = htmlform === null || htmlform === void 0 ? void 0 : htmlform.logo; // console.log(\'input1 \',input1.files);\n          //  console.log(\'input1 \',input1.files[0].name);\n\n          if (input1.value === "" || input1.value === undefined) {\n            toastr.error("no file is  choosen");\n            alertify.error(\'No file is choosen\');\n            return;\n          } // console.log(input1);\n          // send to server \n\n\n          var data = new FormData();\n          data.append("vendorlogo", input1.files[0]); // /assets/images/dashboard/crista.png class blur up\n          ///assets/images/dashboard/man.png\n\n          var imglogo = document.getElementsByClassName(\'vendorlogo\');\n          console.log(\'img \', imglogo, \' logo \', input1.files[0].name, \' url \', "".concat(_url__WEBPACK_IMPORTED_MODULE_3__.backendurl, "/jetstore/").concat(input1.files[0].name));\n          imglogo[0].src = "".concat(_url__WEBPACK_IMPORTED_MODULE_3__.backendurl, "/jetstore/").concat(input1.files[0].name);\n          imglogo[1].src = "".concat(_url__WEBPACK_IMPORTED_MODULE_3__.backendurl, "/jetstore/").concat(input1.files[0].name);\n          var vendor = localStorage.getItem(\'vendorname\');\n          console.log(\'vendorname \', vendor);\n          data.append("vendorname", vendor);\n          $(\'#exampleModal\').modal(\'hide\'); //$(\'#exampleModal\').modal(\'dispose\') ;\n\n          setTimeout(function () {\n            $(\'#exampleModal\').remove(); //remove from the dom after some seconds\n          }, 1500);\n          (0,_tsbackendscript_ajaxfunctioncall__WEBPACK_IMPORTED_MODULE_6__.submitform)("".concat(_url__WEBPACK_IMPORTED_MODULE_3__.backendurl, "/vendor/vendor"), data, localStorage.getItem(\'token\'), \'text\', \'post\'); //toastr.success("successfully uploaded");         \n        }\n\n        function close() {\n          setTimeout(function () {\n            $(\'#exampleModal\').remove(); //remove from the dom after some seconds\n          }, 1500);\n          $(\'#exampleModal\').modal(\'hide\');\n        }\n\n        return dom("div", null, dom("button", {\n          className: "btn btn-primary",\n          type: "button",\n          onClick: handleClick\n        }, "Upload"), "\\xA0\\xA0\\xA0", dom("button", {\n          className: "btn btn-secondary",\n          type: "button",\n          onClick: close\n        }, "Close"));\n      }()); //toastr.error(\'No vendor name or unchecked options\');\n\n      $(\'#exampleModal\').modal(\'show\'); //show modal\n      //alertify.success(\'Ok\');\n    }, function () {\n      alertify.error(\'Cancel\');\n    });\n  }\n});\n\nfunction Headline() {\n  console.log("calling jsx");\n  return dom("h5", {\n    className: "headline"\n  }, "Inital");\n}\n\nvar profilesummary = function profilesummary(email, firstname, lastname, pic) {\n  return dom("div", null, dom("img", {\n    src: pic,\n    alt: "",\n    className: "img-fluid img-90 rounded-circle blur-up lazyloaded"\n  }), dom("h5", {\n    className: "f-w-600 mb-0"\n  }, firstname + " " + lastname), dom("span", null, email), dom("div", {\n    className: "social"\n  }, dom("div", {\n    className: "form-group btn-showcase"\n  }, dom("button", {\n    className: "btn social-btn btn-fb d-inline-block"\n  }, " ", dom("i", {\n    className: "fa fa-facebook"\n  })), dom("button", {\n    className: "btn social-btn btn-twitter d-inline-block"\n  }, dom("i", {\n    className: "fa fa-google"\n  })), dom("button", {\n    className: "btn social-btn btn-google d-inline-block mr-0"\n  }, dom("i", {\n    className: "fa fa-twitter"\n  })))));\n};\n\nvar fullprofile = function fullprofile(resObject, email, dob, location) {\n  return dom("div", null, dom("h5", {\n    className: "f-w-600"\n  }, "Profile"), dom("div", {\n    className: "table-responsive profile-table"\n  }, dom("table", {\n    className: "table table-responsive"\n  }, dom("tbody", null, dom("tr", null, dom("td", null, "First Name:"), dom("td", null, resObject.firstname)), dom("tr", null, dom("td", null, "Last Name:"), dom("td", null, resObject.lastname)), dom("tr", null, dom("td", null, "Email:"), dom("td", null, email)), dom("tr", null, dom("td", null, "Gender:"), dom("td", null, resObject.gender)), dom("tr", null, dom("td", null, "Mobile Number:"), dom("td", null, resObject.mobilenumber)), dom("tr", null, dom("td", null, "DOB:"), dom("td", null, dob)), dom("tr", null, dom("td", null, "Location:"), dom("td", null, location))))));\n}; //this is to enable typescript build jsx by default as configured in tsconfig.json\n// const appendChild = (parent, child) => {\n//   if (Array.isArray(child))\n//     child.forEach((nestedChild) => appendChild(parent, nestedChild))\n//   else\n//     parent.appendChild(\n//       child.nodeType ? child : document.createTextNode(child)\n//     )\n// };\n\n\nfunction dom(tag, attrs) {\n  //   const element = document.createElement(tag)\n  // Object.entries(attrs || {}).forEach(([name, value]) => {\n  // \tif (name.startsWith(\'on\') && name.toLowerCase() in window)\n  // \t\telement.addEventListener(name.toLowerCase().substr(2), value)\n  // \telse element.setAttribute(name, value.toString())\n  // })\n  // children.forEach((child) => {\n  // \tappendChild(element, child)\n  //   })\n  //       return element\n  //Custom Components will be functions\n  if (typeof tag === \'function\') {\n    return tag();\n  } // regular html tags will be strings to create the elements\n\n\n  if (typeof tag === \'string\') {\n    // fragments to append multiple children to the initial node\n    var fragments = document.createDocumentFragment();\n    var element = document.createElement(tag);\n\n    for (var _len = arguments.length, children = new Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {\n      children[_key - 2] = arguments[_key];\n    }\n\n    children.forEach(function (child) {\n      if (child instanceof HTMLElement) {\n        fragments.appendChild(child);\n      } else if (typeof child === \'string\') {\n        var textnode = document.createTextNode(child);\n        fragments.appendChild(textnode);\n      } else {\n        // later other things could not be HTMLElement not strings\n        console.log(\'not appendable\', child);\n      }\n    });\n    element.appendChild(fragments); // Merge element with attributes\n    //  console.log(\'attrs ...\', attrs);\n\n    Object.entries(attrs || {}).forEach(function (_ref) {\n      var _ref2 = (0,_babel_runtime_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_1__.default)(_ref, 2),\n          name = _ref2[0],\n          value = _ref2[1];\n\n      if (name.startsWith(\'on\') && name.toLowerCase() in window) element.addEventListener(name.toLowerCase().substr(2), value); // else element.setAttribute(name, value.toString())\n    });\n    Object.assign(element, attrs);\n    return element;\n  }\n}\n\nvar Header = function Header() {\n  return dom("h5", {\n    className: "modal-title f-w-600",\n    id: "exampleModalLabel"\n  }, "More Info:");\n};\n\nvar finalreg = function finalreg(e) {\n  alert();\n};\n\nvar Footer = function Footer() {\n  function handleClick(e) {\n    e.preventDefault();\n    var form1 = JSON.parse($(\'#contactform\').jform());\n    console.log(\'The link was clicked.\');\n    var form2 = JSON.parse($(\'#regform\').jform()); //form1 = {form1, ...form2}\n\n    var htmlform = document.getElementById(\'regform\');\n\n    var _Array$from11 = Array.from(htmlform === null || htmlform === void 0 ? void 0 : htmlform.vendor),\n        _Array$from12 = (0,_babel_runtime_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_1__.default)(_Array$from11, 2),\n        input1 = _Array$from12[0],\n        input2 = _Array$from12[1];\n\n    console.log("form i is ", input1.value, " and 2 is ", input2.value); // toastr.error(\'No vendor name or unchecked options\');\n\n    var vendorowner = false;\n    console.log(\' htmlformname \', htmlform.vendorname.value);\n\n    if (htmlform.vendorname.value.length < 1) {\n      toastr.error(\'No vendor name or unchecked options\');\n      throw new Error("error of input");\n      return;\n    }\n\n    console.log(\' firstname \', form2.firstname, new String(form2.firstname).length == 0, \' lastname \', form2.lastname);\n\n    if (new String(form2.firstname).length == 0) {\n      toastr.error(\'firstname cannot be  empty\');\n      throw new Error(\'error\');\n    }\n\n    if (form2.lastname.length === 0) {\n      toastr.error(\'lastname cannot be  empty\');\n      throw new Error(\'error\');\n    }\n\n    if (input1.checked === false && input2.checked === false) {\n      Swal.fire({\n        icon: \'error\',\n        text: \'Options are not checked !\'\n      });\n      return;\n    }\n\n    if (input1.checked === true) {\n      vendorowner = true; // alert(\'1 on \');\n\n      form1.vendorowner = vendorowner;\n    } else if (input2.checked === true) {\n      vendorowner = false; // form1.vendoroption = form2.vendor;\n\n      form1.vendorowner = vendorowner; // alert(\'2 on \') ;\n    }\n\n    console.log(" form1 ", form1); // form1  = {...form2,vendoroption:vendoroption}\n\n    form1.vendorname = form2.vendorname;\n    form1.firstname = form2.firstname;\n    form1.lastname = form2.lastname;\n    console.log(" form1 ", form1);\n    form1.role = [];\n    form1.permission = [];\n    var reg = new _register__WEBPACK_IMPORTED_MODULE_7__.register();\n\n    var msg = function msg() {\n      if (input1.checked === true) {\n        // alert(\'1 on\');\n        Swal.fire({\n          icon: \'success\',\n          text: \'Registration Successful! You will receive an email through which you will activate your account soonest\'\n        }).then(function (result) {\n          if (result.isConfirmed) {\n            console.log(\'cancelling\'); // Swal.close();\n\n            window.location.href = \'../adminlogin\';\n          }\n        });\n      } else if (input2.checked === true) {\n        //  alert(\'2 on \');\n        Swal.fire({\n          icon: \'success\',\n          text: \'Registration Successful! Contact your administrator to activate your account.\'\n        }).then(function (result) {\n          if (result.isConfirmed) {\n            console.log(\'cancelling\'); //Swal.close();\n\n            window.location.href = \'../adminlogin\';\n          }\n        });\n      }\n    };\n\n    var errormg = function errormg() {\n      Swal.fire({\n        icon: \'error\',\n        text: \'Oops.Check your connection!\'\n      });\n    };\n\n    reg.register(form1, msg, errormg);\n    $(\'#exampleModal\').modal(\'hide\'); //show modal\n    // $(\'#exampleModal\').modal(\'dispose\');//show modal\n\n    var mydialogpos = document.querySelector(".modal");\n    mydialogpos.remove();\n  }\n\n  return dom("button", {\n    className: "btn btn-primary",\n    type: "button",\n    onClick: handleClick\n  }, "Continue");\n};\n\nvar RegForm = function RegForm() {\n  return dom("form", {\n    className: "needs-validation",\n    id: "regform"\n  }, dom("div", {\n    className: "form-group"\n  }, dom("label", {\n    "for": "exampleFormControlFile1"\n  }, dom("small", null, "What is the name of your vendor?")), dom("input", {\n    type: "text",\n    className: "form-control-file",\n    id: "vendorname",\n    name: "vendorname"\n  })), dom("div", {\n    className: "form-group"\n  }, dom("label", {\n    "for": "exampleFormControlFile1"\n  }, dom("small", null, "What is your firstname?")), dom("input", {\n    type: "text",\n    className: "form-control-file",\n    id: "firstname",\n    name: "firstname"\n  })), dom("div", {\n    className: "form-group"\n  }, dom("label", {\n    "for": "exampleFormControlFile1"\n  }, dom("small", null, "What is your lastname?")), dom("input", {\n    type: "text",\n    className: "form-control-file",\n    id: "lastname",\n    name: "lastname"\n  })), dom("div", {\n    className: "form-check"\n  }, dom("input", {\n    className: "form-check-input",\n    type: "radio",\n    name: "vendor"\n  }), dom("label", {\n    className: "form-check-label",\n    "for": "defaultCheck1"\n  }, "Yes,I\'m a Vendor Owner")), dom("div", {\n    className: "form-check"\n  }, dom("input", {\n    className: "form-check-input",\n    type: "radio",\n    name: "vendor"\n  }), dom("label", {\n    className: "form-check-label",\n    "for": "defaultCheck2"\n  }, "No,I belong to a Vendor")));\n}; //register form\n\n\n$(\'#contactform\').submit(\'submit\', function (e) {\n  e.preventDefault(); //invoke a dialog\n\n  var contactform = document.getElementById(\'contactform\');\n\n  if ((contactform === null || contactform === void 0 ? void 0 : contactform.password.value) !== (contactform === null || contactform === void 0 ? void 0 : contactform.confirmPassword.value)) {\n    Swal.fire({\n      icon: \'error\',\n      text: \'Password does not match!\'\n    });\n    return; //  $(\'#regerror\').empty().html(\'<br/><div class="alert alert-danger"> <span class="glyphicon glyphicon-info-sign"></span> &nbsp; \'+\'both password and password confirmation must be the same\' +\' !</div>\');\n    // return ;   \n  }\n\n  $((0,_lithtmlscript__WEBPACK_IMPORTED_MODULE_5__.dialog)("", "", "")).insertAfter(".back-btn"); //invoke the dialog box \n\n  var mydialogpos = document.querySelector(".modal-dialog");\n  mydialogpos.classList.add("modal-dialog-centered"); // center  it verticallycl\n\n  $(".modal-header").html(Header());\n  $(".modal-body").html(RegForm());\n  $(".modal-footer").html(Footer()); //toastr.error(\'No vendor name or unchecked options\');\n\n  var agree = document.getElementById(\'customControlAutosizing1\');\n\n  if (!agree.checked) {\n    toastr.error("you have not agreed to terms");\n    return;\n  }\n\n  $(\'#exampleModal\').modal(\'show\'); //show modal\n}); // create coupon \n\n$(\'#savecoupon\').on(\'click\', function (e) {\n  e.preventDefault();\n  Swal.fire({\n    icon: \'question\',\n    // title: \'Multi-Vendor Owner\',\n    text: \'Do you want to create coupon on this product ?\',\n    showCancelButton: true,\n    allowOutsideClick: false\n  }).then(function (result) {\n    if (result.isConfirmed) {\n      var general = JSON.parse($(\'#general2\').jform()); //  console.log(\'general \', general, \'coupontitle\', general.coupontitle);\n\n      var usage = JSON.parse($(\'#usage2\').jform()); //usage\n      // console.log(\'usage \', usage, \' perlimit \', usage.perlimit);\n\n      var rest = JSON.parse($(\'#rest\').jform()); // console.log(\'rest \', rest, \' maxspend \', rest.maxspend);\n      //const totalform = $.extend(($.extend(usage,general)),rest);\n\n      var total = _objectSpread(_objectSpread(_objectSpread({}, general), rest), usage); // console.log(\'total \', { ...general, ...rest, ...usage }, \'minspend \', total.minspend);\n      // check\n\n\n      if (total.maxspend.length < 1 || total.minspend.length < 1 || total.percustomer.length < 1 || total.perlimit.length < 1 || total.couponqty.length < 1) {\n        toastr.error(\'Empty input  is  not permitted\');\n        return;\n      }\n\n      if (total.couponcategory.length < 1 || total.coupontitle.length < 1 || total.enddate.length < 1 || total.startdate.length < 1) {\n        toastr.error(\'Empty input  is  not permitted\');\n        return;\n      }\n\n      if (parseInt(total.maxspend) < 0 || parseInt(total.minspend) < 0 || parseInt(total.percustomer) < 0 || parseInt(total.perlimit) < 0 || parseInt(total.couponqty) < 0 || parseInt(total.discountype) < 0) {\n        console.log(\'entered if \'); // Swal.fire({\n        //   icon: "error",\n        //   text: "Negative inputs not permitted"\n        // }).then((r: any) => {\n        //   if (r.isDismissed) {\n        //     return;\n        //   }\n        // })\n\n        toastr.error(\'Empty 3 input  is  not permitted\');\n        return;\n      }\n\n      total.couponproductid = total.prodsearch;\n      total.vendor = localStorage.getItem(\'vendorname\');\n      var freeshippingstatus = document.getElementById(\'checkbox-primary-1\');\n      var couponstatus = document.getElementById(\'checkbox-primary-2\');\n\n      if (freeshippingstatus.checked) {\n        total.freeshipping = \'yes\';\n      } else {\n        total.freeshipping = \'no\';\n      }\n\n      if (couponstatus.checked) {\n        total.couponstatus = \'yes\';\n      } else {\n        total.couponstatus = \'no\';\n      }\n\n      delete total.prodsearch;\n      console.log(\'final product search ...\', total); //send to server \n\n      var mycoupon = new _coupon__WEBPACK_IMPORTED_MODULE_10__.coupon();\n      mycoupon.savecoupon(total);\n    } else if (result.isDismissed) {\n      Swal.fire({\n        icon: "error",\n        text: "cancelled"\n      });\n    }\n  });\n}); // add sub-category for physical product\n\n$(\'#catsub\').on(\'click\', function (e) {\n  e.preventDefault();\n  $((0,_lithtmlscript__WEBPACK_IMPORTED_MODULE_5__.dialog)("", "", "")).insertAfter(".page-main-header"); //invoke the dialog box\n\n  var mydialogpos = document.querySelector(".modal-dialog");\n  mydialogpos.classList.add("modal-dialog-centered"); // center  it verticallycl\n\n  $(".modal-header").html(function () {\n    return dom("h5", {\n      className: "modal-title f-w-600",\n      id: "exampleModalLabel"\n    }, "Add Sub-Category ");\n  }());\n  $(\'.modal-body\').html(function () {\n    function loadcategory(e) {\n      // load product from  here \n      e.preventDefault(); // append  to  category  from  here \n\n      (0,_tsbackendscript_ajaxfunctioncall__WEBPACK_IMPORTED_MODULE_6__.processrequest2)("".concat(_url__WEBPACK_IMPORTED_MODULE_3__.backendurl, "/categories/category"), \'get\', {\n        \'Content-Type\': "application/json",\n        \'Authorization\': \'Bearer \' + localStorage.getItem(\'token\')\n      }, function (r) {\n        var options = new StringBuilder(); //console.log(\'r\', r)\n\n        options.append("<option value=\'\'>Select Category</option>");\n\n        var _iterator = _createForOfIteratorHelper(r),\n            _step;\n\n        try {\n          for (_iterator.s(); !(_step = _iterator.n()).done;) {\n            var cat = _step.value;\n            // console.log( \' id \',cat.id) ;\n            options.append("<option value=\'".concat(cat.id, "\'>").concat(cat.categoryname, "</option>")); //console.log( \' id \',cat.id) ;\n          } //append category \n\n        } catch (err) {\n          _iterator.e(err);\n        } finally {\n          _iterator.f();\n        }\n\n        $(\'#prdcategory\').empty().html(options.toString());\n      });\n    }\n\n    return dom("form", {\n      className: "needs-validation",\n      id: "catform"\n    }, dom("div", {\n      className: "form"\n    }, dom("div", {\n      className: "form-group"\n    }, dom("label", {\n      "for": "validationCustom01",\n      className: "mb-1"\n    }, "Sub Category Name :"), dom("input", {\n      className: "form-control",\n      id: "validationCustom01",\n      type: "text",\n      name: "subcategoryname"\n    })), dom("div", {\n      className: "form-group"\n    }, dom("select", {\n      className: "form-control",\n      id: "prdcategory",\n      name: "categoryid"\n    }, dom("option", {\n      value: ""\n    }, "Select Category"))), dom("div", {\n      className: "form-group"\n    }, dom("label", {\n      "for": "validationCustom01",\n      className: "mb-1"\n    }, "Price Range:"), dom("input", {\n      className: "form-control",\n      id: "validationCustom03",\n      type: "text",\n      name: "pricerange"\n    })), dom("div", {\n      className: "form-group mb-0"\n    }, dom("label", {\n      "for": "validationCustom02",\n      className: "mb-1"\n    }, "Sub Category Image :"), dom("input", {\n      className: "form-control",\n      id: "validationCustom02",\n      type: "file",\n      name: "imageur"\n    }))));\n  }());\n  $(".modal-footer").html(function () {\n    function savesubCategory(e) {\n      e.preventDefault();\n      processphysicalanddigitalcategory(\'post\', \'Sub Category\', "".concat(_url__WEBPACK_IMPORTED_MODULE_3__.backendurl, "/subcat/createsubcategory"), \'Do you want to create sub-category\', \'catform\', "sub category created successfuly", \'error creating category\');\n    }\n\n    function close(e) {\n      e.preventDefault();\n      $(\'#exampleModal\').modal(\'hide\');\n      setTimeout(function () {\n        $(\'#exampleModal\').remove();\n      }, 800);\n    }\n\n    return dom("div", null, dom("button", {\n      className: "btn btn-primary",\n      type: "button",\n      onClick: function onClick(e) {\n        return savesubCategory(e);\n      }\n    }, "Save"), "\\xA0\\xA0\\xA0", dom("button", {\n      className: "btn btn-secondary",\n      type: "button",\n      "data-dismiss": "modal",\n      onClick: function onClick(e) {\n        return close(e);\n      }\n    }, "Close"));\n  }());\n  $(\'#exampleModal\').modal(\'show\'); //show modal\n  //then append  category to select \n\n  $(\'#prdcategory\').empty().html( // append  to  category  from  here \n  (0,_tsbackendscript_ajaxfunctioncall__WEBPACK_IMPORTED_MODULE_6__.processrequest2)("".concat(_url__WEBPACK_IMPORTED_MODULE_3__.backendurl, "/categories/category"), \'get\', {\n    \'Content-Type\': "application/json",\n    \'Authorization\': \'Bearer \' + localStorage.getItem(\'token\')\n  }, function (r) {\n    var options = new StringBuilder(); //console.log(\'r\', r)\n\n    options.append("<option value=\'\'>Select Category</option>");\n\n    var _iterator2 = _createForOfIteratorHelper(r),\n        _step2;\n\n    try {\n      for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n        var cat = _step2.value;\n        // console.log( \' id \',cat.id) ;\n        options.append("<option value=\'".concat(cat.id, "\'>").concat(cat.categoryname, "</option>")); //console.log( \' id \',cat.id) ;\n      } //append category \n\n    } catch (err) {\n      _iterator2.e(err);\n    } finally {\n      _iterator2.f();\n    }\n\n    $(\'#prdcategory\').empty().html(options.toString());\n  }));\n}); //add category for physical  products\n\n$(\'#savecategory\').on(\'click\', function (e) {\n  e.preventDefault();\n  $((0,_lithtmlscript__WEBPACK_IMPORTED_MODULE_5__.dialog)("", "", "")).insertAfter(".page-main-header"); //invoke the dialog box \n\n  var mydialogpos = document.querySelector(".modal-dialog");\n  mydialogpos.classList.add("modal-dialog-centered"); // center  it verticallycl\n\n  $(".modal-header").html(function () {\n    return dom("h5", {\n      className: "modal-title f-w-600",\n      id: "exampleModalLabel"\n    }, "Add Physical Product");\n  }());\n  $(".modal-body").html(function () {\n    return dom("form", {\n      className: "needs-validation",\n      id: "catform"\n    }, dom("div", {\n      className: "form"\n    }, dom("div", {\n      className: "form-group"\n    }, dom("label", {\n      "for": "validationCustom01",\n      "class": "mb-1"\n    }, "Category Name :"), " ", dom("input", {\n      className: "form-control",\n      id: "validationCustom01",\n      type: "text",\n      name: "categoryname"\n    })), dom("div", {\n      className: "form-group"\n    }, dom("label", {\n      "for": "validationCustom01",\n      "class": "mb-1"\n    }, "Price Range Name :"), " ", dom("input", {\n      className: "form-control",\n      id: "validationCustom01",\n      type: "text",\n      name: "pricerange"\n    })), dom("div", {\n      className: "form-group mb-0"\n    }, dom("label", {\n      "for": "validationCustom02",\n      "class": "mb-1"\n    }, "Category Image :"), " ", dom("input", {\n      className: "form-control",\n      id: "validationCustom02",\n      type: "file",\n      name: "imageurl"\n    }))));\n  }());\n  $(".modal-footer").html(function () {\n    function saveCategory(e) {\n      e.preventDefault();\n      processphysicalanddigitalcategory(\'post\', \'Category\', "".concat(_url__WEBPACK_IMPORTED_MODULE_3__.backendurl, "/categories/category"), \'Do you want to create category\', \'catform\', "category created successfuly", \'error creating category\');\n    }\n\n    function close(e) {\n      e.preventDefault();\n      $(\'#exampleModal\').modal(\'hide\');\n      setTimeout(function () {\n        $(\'#exampleModal\').remove();\n      }, 800);\n    }\n\n    return dom("div", null, dom("button", {\n      className: "btn btn-primary",\n      type: "button",\n      onClick: function onClick(e) {\n        return saveCategory(e);\n      }\n    }, "Save"), "\\xA0\\xA0\\xA0", dom("button", {\n      className: "btn btn-secondary",\n      type: "button",\n      "data-dismiss": "modal",\n      onClick: function onClick(e) {\n        return close(e);\n      }\n    }, "Close"));\n  }()); //toastr.error(\'No vendor name or unchecked options\');\n\n  $(\'#exampleModal\').modal(\'show\'); //show modal\n});\n\nvar processphysicalanddigitalcategory = function processphysicalanddigitalcategory(methodtype, title, url, confirmmsg, formid, successmsg, errormsg) {\n  alertify.confirm(title, confirmmsg, function () {\n    var form = document.getElementById(formid);\n    var formdata = new FormData(form);\n    console.log(\' select \', $("#prdcategory:selected").val()); // alert(formdata.get(\'subcategoryname\') + " categoryid "+ formdata.get(\'categoryid\')) ;\n\n    $(\'#exampleModal\').modal(\'hide\');\n    setTimeout(function () {\n      // $(\'#exampleModal\').hide();\n      $(\'#exampleModal\').remove();\n      console.log(\'resetting tables \');\n      $("#basicScenario2").jsGrid("loadData");\n      console.log(\'reset table \');\n    }, 2000);\n    (0,_tsbackendscript_ajaxfunctioncall__WEBPACK_IMPORTED_MODULE_6__.submitform)(url, formdata, localStorage.getItem(\'token\'), \'text\', methodtype); //send form\n  }, function () {\n    alertify.error(errormsg).set(\'labels\', {\n      ok: \'OK!\',\n      cancel: \'Naa!\'\n    });\n  });\n}; // logout\n\n\n$(\'#logoutme\').on(\'click\', function (e) {\n  e.preventDefault();\n  console.log(\'log out \');\n  Swal.fire({\n    icon: \'question\',\n    // title: \'Multi-Vendor Owner\',\n    text: \'Do you want to Log out ?\',\n    showCancelButton: true,\n    allowOutsideClick: false\n  }).then(function (result) {\n    if (result.isConfirmed) {\n      sessionStorage.clear();\n      window.location.href = \'../adminlogin\';\n    }\n  });\n}); // donwload excel \n\nvar downloads = function downloads(element, name, url) {\n  element.on(\'click\', function (e) {\n    e.preventDefault(); // alert() ;\n\n    Swal.fire({\n      icon: "question",\n      showCancelButton: true,\n      text: "Do you want to downloads the excel file ?"\n    }).then(function (r) {\n      if (r.isConfirmed) {\n        fetch(url, {\n          method: \'get\',\n          headers: {\n            //  \'Accept\': \'application/json, text/plain, */*\',\n            \'Content-Type\': \'application/json; charset=utf-8\',\n            //\'Content-Type\':\'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\',\n            responseType: "blob",\n            \'Authorization\': "Bearer ".concat(localStorage.getItem(\'token\'))\n          } // body: JSON.stringify( {} )\n\n        }).then(function (response) {\n          return response.blob();\n        }).then(function (response) {\n          // element.text(\'downloading\') ;\n          var blob = new Blob([response], {\n            type: \'application/application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\'\n          });\n          var downloadUrl = URL.createObjectURL(blob);\n          var a = document.createElement("a");\n          a.href = downloadUrl;\n          a.download = "".concat(name, ".xlsx");\n          document.body.appendChild(a);\n          a.click();\n          a.remove(); //  element.text(\'download as excel\') ;\n        });\n      } else if (r.isDismissed) {\n        toastr.error("The attempt was  cancelled");\n      }\n    });\n  });\n}; // imglogo[0].src = `${backendurl}/jetstore/${input1.files[0].name}`;\n// imglogo[1].src = `${backendurl}/jetstore/${input1.files[0].name}`;\n// category\n//send message \n\n\nvar sendmessage = function sendmessage(e) {\n  var selecttyperadio = Array.from(document.getElementsByName(\'selectype\'));\n  e.preventDefault();\n  alertify.confirm(\'Message\', \'Do you want to send this Message\', function () {\n    var message = CKEDITOR.instances.editor1.getData();\n    console.log(\'calling\'); // call event subscription \n\n    $.ajax({\n      url: "".concat(_url__WEBPACK_IMPORTED_MODULE_3__.backendurl, "/dispatchEvent"),\n      type: \'POST\',\n      headers: {\n        Authorization: "Bearer ".concat(localStorage.getItem(\'token\'))\n      },\n      dataType: \'text\',\n      data: function () {\n        var _selecttyperadio = (0,_babel_runtime_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_1__.default)(selecttyperadio, 3),\n            inp1 = _selecttyperadio[0],\n            inp2 = _selecttyperadio[1],\n            inp4 = _selecttyperadio[2]; // destructuring of aray of radio buttons\n\n\n        if (inp1.checked) {\n          return "freshNews=" + message + "&vendorname=" + $(\'#userandvendor\').val();\n        } else if (inp2.checked) {\n          console.log(\'freshnews \', message, \'userid \', $(\'#userandvendor\').val());\n          return "freshNews=" + message + "&userid=" + $(\'#userandvendor\').val();\n        } else if (inp4.checked) {\n          return "freshNews=" + message;\n        }\n      }(),\n      success: function success(response) {\n        console.log(\'response \' + response);\n      }\n    });\n  }, function () {\n    alertify.error(\'Cancel\');\n  });\n};\n\n$(\'#sendmessage\').on(\'click\', function (e) {\n  // sendmessage(e);\n  sendmessage(e);\n});\n\nvar sendmessageversion2 = function sendmessageversion2(e) {\n  e.preventDefault();\n  var selecttyperadio = Array.from(document.getElementsByName(\'selectype\'));\n\n  var _selecttyperadio2 = (0,_babel_runtime_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_1__.default)(selecttyperadio, 3),\n      inp1 = _selecttyperadio2[0],\n      inp2 = _selecttyperadio2[1],\n      inp4 = _selecttyperadio2[2]; // destructuring of aray of radio buttons\n\n\n  if (inp1.checked) {\n    var users_Selected = $(\'#userandvendor\').val();\n    users_Selected.forEach(function (element) {\n      console.log(\' element \', element);\n    });\n  } else if (inp2.checked) {\n    var _users_Selected = $(\'#userandvendor\').val();\n\n    _users_Selected.forEach(function (element) {\n      console.log(\' element \', element);\n    });\n  } else if (inp4.checked) {// subscribetoevent(new EventSource(`${backendurl}/subscribe`),\'latestNews\') ; \n    //setTimeout(sendmessage(e,selecttyperadio),1000) ;\n  }\n}; //page load processing\n\n\nvar subscribetoevent = function subscribetoevent(eventSource, evtype) {\n  // var eventSource = new EventSource(url);\n  // var eventSource = new EventSource(url);\n  eventSource.addEventListener(evtype, function (event) {\n    if (event.data) {\n      console.log(\'from dispatch event \', event.data);\n      toastr.success(\'message sent successfully\');\n      alertify.success(\'Ok\'); // eventSource.close();\n    }\n  }); // for error \n\n  eventSource.addEventListener("error", function (event) {\n    if (event.currentTarget.readyState === EventSource.CLOSED) {} else {\n      eventSource.close();\n    }\n  });\n\n  window.onbeforeunload = function () {\n    eventSource.close();\n  }; // console.log(\'closing  connection .....\') ;\n  // eventSource.close() ;\n  // return eventSource ;\n\n};\n\nvar pageload = function pageload(url) {\n  console.log(\' url \', url); // alert(url) ;\n  //delay for the localstorage to  set \n  //subscribe to event for all users \n\n  setTimeout(function () {\n    (0,_tsbackendscript_ajaxfunctioncall__WEBPACK_IMPORTED_MODULE_6__.processrequest2)("".concat(_url__WEBPACK_IMPORTED_MODULE_3__.backendurl, "/vendor/vendor?vendorname=").concat(localStorage.getItem(\'vendorname\')), "get", {\n      \'Content-Type\': "application/json",\n      \'Authorization\': \'Bearer \' + localStorage.getItem(\'token\')\n    }, function (r) {\n      // console.log(\' r in  index \',r) ;\n      r = JSON.parse(r);\n      var imglogo = document.getElementsByClassName(\'vendorlogo\'); //  console.log(\' url \',`${backendurl}/jetstore/${r.vendorlogo}`);\n\n      if (r.vendorlogo) {\n        imglogo[0].src = "".concat(_url__WEBPACK_IMPORTED_MODULE_3__.backendurl, "/jetstore/").concat(r.vendorlogo);\n        imglogo[1].src = "".concat(_url__WEBPACK_IMPORTED_MODULE_3__.backendurl, "/jetstore/").concat(r.vendorlogo);\n      }\n    }); //load profile image in side bar \n\n    (0,_tsbackendscript_ajaxfunctioncall__WEBPACK_IMPORTED_MODULE_6__.processrequest2)("".concat(_url__WEBPACK_IMPORTED_MODULE_3__.backendurl, "/profile/profile2/").concat(localStorage.getItem(\'ack\')), "get", {\n      \'Content-Type\': "application/json",\n      \'Authorization\': \'Bearer \' + localStorage.getItem(\'token\')\n    }, function (r) {\n      //console.log(\' profile image in  index \', r);\n      r = JSON.parse(r);\n\n      if (r.profilepicture) {\n        $(\'#profileimg\').prop(\'src\', "".concat(_url__WEBPACK_IMPORTED_MODULE_3__.backendurl, "/jetstore/").concat(r.profilepicture));\n      }\n    });\n  }, 2000); //set local variables \n\n  var token = $.trim(localStorage.getItem("token")); //console.log("the token ",token);\n  //alert(token);\n\n  var decoded = jwt_decode(token); //console.log(decoded, \'exp \', decoded[\'exp\'], \'sub \', decoded.sub, \'vendorname \', decoded.vendorname, \' ack \', decoded.ack);\n\n  var now = Date.now().valueOf() / 1000;\n  var tokenexp = parseInt(decoded.exp); //console.log(decoded.username);\n\n  localStorage.setItem(\'vendorname\', decoded.vendorname);\n  localStorage.setItem(\'ack\', decoded.ack);\n  localStorage.setItem(\'username\', decoded.username);\n  $(\'.mt-3\').text(new String(localStorage.getItem(\'username\')).toUpperCase());\n  console.log("username ", localStorage.getItem(\'username\'));\n  subscribetoevent(new EventSource("".concat(_url__WEBPACK_IMPORTED_MODULE_3__.backendurl, "/subscribe")), \'latestNews\');\n  subscribetoevent(new EventSource("".concat(_url__WEBPACK_IMPORTED_MODULE_3__.backendurl, "/eventbyuser?userid=").concat(localStorage.getItem(\'ack\'))), \'usernews\');\n  subscribetoevent(new EventSource("".concat(_url__WEBPACK_IMPORTED_MODULE_3__.backendurl, "/subscribe?vendorname=").concat(localStorage.getItem(\'vendorname\'))), \'vendornews\');\n\n  switch (url) {\n    case urlpages[0]:\n      // for index page\n      //alert(\'got here\');\n      (0,_miscellaneous__WEBPACK_IMPORTED_MODULE_4__.invalidatetoken)(tokenexp);\n      var myname = new String(localStorage.getItem(\'username\')).toUpperCase();\n      console.log(\'myname \', myname);\n      $(\'.alert\').prepend("<strong>Welcome &nbsp;&nbsp;".concat(myname, "</strong>")); // document.querySelector("#thefooter")?.append(Headline()) ;  \n      //for jsx testing which is working\n      //subscribe to event for specific users\n\n      break;\n\n    case urlpages[urlpages.length - 2]:\n      //for  profile\n      (0,_tsbackendscript_ajaxfunctioncall__WEBPACK_IMPORTED_MODULE_6__.checktoken)(localStorage.getItem(\'token\')); // call ajax function to  load  profile  data \n\n      var results = {}; //profilename\n\n      var username = localStorage.getItem(\'username\');\n      $(\'#profilename\').text("".concat(username.toUpperCase()));\n      (0,_tsbackendscript_ajaxfunctioncall__WEBPACK_IMPORTED_MODULE_6__.processrequest2)("".concat(_url__WEBPACK_IMPORTED_MODULE_3__.backendurl, "/profile/profile/").concat(localStorage.getItem(\'ack\')), "get", {\n        \'Content-Type\': "application/json",\n        \'Authorization\': \'Bearer \' + localStorage.getItem(\'token\')\n      }, function (r) {\n        if (r) {\n          // if sucessful\n          //  pull user details by userid.chaining it with fetch\n          r = JSON.parse(r); // console.log(\' calling  user  details \', r);\n          // if (r.profilepicture) {\n          //load profile image for profile page\n\n          setTimeout(function () {\n            console.log(\' profile image loaded \', r.profilepicture);\n            $(\'.profileimg\').prop(\'src\', "".concat(_url__WEBPACK_IMPORTED_MODULE_3__.backendurl, "/jetstore/").concat(r.profilepicture));\n          }, 2000); //}\n          // delay for  sometimes\n\n          setTimeout(function () {\n            (0,_tsbackendscript_ajaxfunctioncall__WEBPACK_IMPORTED_MODULE_6__.processrequest2)("".concat(_url__WEBPACK_IMPORTED_MODULE_3__.backendurl, "/finduser/").concat(localStorage.getItem(\'ack\')), \'get\', {\n              \'Content-Type\': "application/json",\n              \'Authorization\': \'Bearer \' + localStorage.getItem(\'token\')\n            }, function (user) {\n              //console.log(\' user \', user);\n              user = JSON.parse(user);\n              var _user = user,\n                  firstname = _user.firstname,\n                  lastname = _user.lastname,\n                  email = _user.email;\n              console.log(firstname, lastname, email);\n              r.firstname = firstname;\n              r.lastname = lastname;\n              r.email = email;\n              console.log(\' r  total \', r, \' dob \', r.dob, \' location \', r.location);\n              $(\'#top-profile\').empty().html(fullprofile(r, email, r.dob, r.location));\n            });\n          }, 2000);\n        }\n      });\n\n      if ($.isEmptyObject(results)) {\n        console.log(\'no profile  uodate\'); //  $(\'.profile-details\').empty().html("<span>No profile update yet</span>")\n        // $(\'#top-profile\').empty().html("<span>No profile update yet</span>")\n      } else {}\n\n      break;\n\n    case urlpages[urlpages.length - 8]:\n      // for create  user page\n      console.log(\'url \', urlpages[urlpages.length - 8]); // fill users for  search  \n      // console.log(\'usersearch \',$(\'#usersearch\').val())\n\n      $(".usersearch").select2({\n        placeholder: "search your users by name",\n        minimumInputLength: 1,\n        ajax: {\n          url: "".concat(_url__WEBPACK_IMPORTED_MODULE_3__.backendurl, "/usersearch"),\n          headers: {\n            Authorization: "Bearer ".concat(localStorage.getItem(\'token\'))\n          },\n          dataType: \'json\',\n          data: function data(params) {\n            // console.log(\' params \',params);\n            var vendorname2 = localStorage.getItem(\'vendorname\');\n            return {\n              action_users: params.term,\n              // search term\n              vendorname: vendorname2,\n              page: params.page\n            };\n          },\n          processResults: function processResults(data) {\n            // const data2  =  [data] ;\n            // console.log(data);\n            return {\n              results: $.map(data, function (obj) {\n                // console.log(\'obj in  map \',obj);\n                return {\n                  id: obj.id,\n                  text: obj.firstname\n                };\n              })\n            };\n          }\n        }\n      });\n      break;\n\n    case urlpages[12]:\n      // for create  coupon\n      $(\'#couponcategory\').empty().html((0,_tsbackendscript_ajaxfunctioncall__WEBPACK_IMPORTED_MODULE_6__.processrequest2)("".concat(_url__WEBPACK_IMPORTED_MODULE_3__.backendurl, "/categories/category"), \'get\', {\n        \'Content-Type\': "application/json",\n        \'Authorization\': \'Bearer \' + localStorage.getItem(\'token\')\n      }, function (r) {\n        // console.log(\' r \', r) ;\n        var builder = \'\';\n        builder += "<option value=\'\'>Select Category</option>";\n\n        var _iterator3 = _createForOfIteratorHelper(r),\n            _step3;\n\n        try {\n          for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n            var row = _step3.value;\n            builder += "<option value=\'".concat(row.categoryname, "\'>").concat(row.categoryname, "</option>");\n          }\n        } catch (err) {\n          _iterator3.e(err);\n        } finally {\n          _iterator3.f();\n        }\n\n        $(\'#couponcategory\').empty().html(builder.toString());\n      })); //load sub category   \n\n      $(\'#couponsubcategory\').empty().html((0,_tsbackendscript_ajaxfunctioncall__WEBPACK_IMPORTED_MODULE_6__.processrequest2)("".concat(_url__WEBPACK_IMPORTED_MODULE_3__.backendurl, "/subcat/subcategory"), \'get\', {\n        \'Content-Type\': "application/json",\n        \'Authorization\': \'Bearer \' + localStorage.getItem(\'token\')\n      }, function (r) {\n        // console.log(\' sub r \', r) ;\n        var builder = \'\';\n        builder += "<option value=\'\'>Select Subcategory</option>";\n\n        var _iterator4 = _createForOfIteratorHelper(r),\n            _step4;\n\n        try {\n          for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n            var row = _step4.value;\n            builder += "<option value=\'".concat(row.subcategoryname, "\'>").concat(row.subcategoryname, "</option>");\n          }\n        } catch (err) {\n          _iterator4.e(err);\n        } finally {\n          _iterator4.f();\n        }\n\n        $(\'#couponsubcategory\').empty().html(builder.toString());\n      }));\n      $(".prodsearch").select2({\n        placeholder: "search your products by name",\n        minimumInputLength: 1,\n        ajax: {\n          url: "".concat(_url__WEBPACK_IMPORTED_MODULE_3__.backendurl, "/product/findallproduct"),\n          headers: {\n            Authorization: "Bearer ".concat(localStorage.getItem(\'token\'))\n          },\n          dataType: \'json\',\n          data: function data(params) {\n            // console.log(\' params \',params);\n            var vendorname2 = localStorage.getItem(\'vendorname\'); // alert(vendorname2) ;\n\n            return {\n              action_users: params.term,\n              // search term\n              vendorname: vendorname2,\n              page: params.page\n            };\n          },\n          processResults: function processResults(data) {\n            // const data2  =  [data] ;\n            // console.log(data);\n            return {\n              results: $.map(data, function (obj) {\n                // console.log(\'obj in  map \',obj);\n                return {\n                  id: obj.id,\n                  text: obj.productname\n                };\n              })\n            };\n          }\n        }\n      });\n      fetch("".concat(_url__WEBPACK_IMPORTED_MODULE_3__.backendurl, "/coupon/coupon?vendorname=").concat(localStorage.getItem(\'vendorname\'), "&pageSize=10&pageNumber=1"), {\n        method: \'get\',\n        credentials: \'same-origin\',\n        headers: {\n          \'Authorization\': \'Bearer \' + localStorage.getItem(\'token\')\n        }\n      }).then(function (response) {\n        return response.text();\n      }).then(function (response) {\n        // console.log(\'\',response) ;\n        var couponbody = document.getElementById(\'couponbody\');\n        couponbody.innerHTML = response;\n      })["catch"](function (err) {\n        return console.log(err);\n      });\n      break;\n\n    case urlpages[1]:\n      //  for category page\n      //alert(\'seen \'+urlpages[1]) ;\n      // const grid  =  new Grid() ;\n      var data = [{\n        name: \'id\',\n        type: \'hidden\',\n        css: \'hide\'\n      }, {\n        name: "categoryname",\n        type: "text",\n        align: "left",\n        width: 80,\n        validate: function validate(value) {\n          // if (value > 0) {\n          return true; //}\n        }\n      }, {\n        name: "pricerange",\n        align: "left",\n        type: "text",\n        width: 50 // itemTemplate: function (value: any, item: any) {\n        //   console.log(\' value \', value, \' item \', item);\n        // },\n\n      }, // {\n      //   name:"imageurl",align:"left",type:"file",width:80,\n      // },\n      {\n        type: "control"\n      }];\n      (0,_tables__WEBPACK_IMPORTED_MODULE_11__.createtables)("".concat(_url__WEBPACK_IMPORTED_MODULE_3__.backendurl, "/categories/category"), localStorage.getItem(\'token\'), data);\n      downloads($(\'#dwdexcel\'), \'category\', "".concat(_url__WEBPACK_IMPORTED_MODULE_3__.backendurl, "/categories/filereport"));\n      break;\n\n    case urlpages[2]:\n      // for sub category \n      var data2 = [{\n        name: \'id\',\n        type: \'hidden\',\n        css: \'hide\'\n      }, {\n        name: "subcategoryname",\n        type: "text",\n        align: "left",\n        width: 80,\n        validate: function validate(value) {\n          // if (value > 0) {\n          return true; //}\n        }\n      }, {\n        name: "pricerange",\n        align: "left",\n        type: "text",\n        width: 50 // itemTemplate: function (value: any, item: any) {\n        //   console.log(\' value \', value, \' item \', item);\n        // },\n\n      }, {\n        type: "control"\n      }];\n      (0,_tables__WEBPACK_IMPORTED_MODULE_11__.createtables)("".concat(_url__WEBPACK_IMPORTED_MODULE_3__.backendurl, "/subcat/subcategory"), localStorage.getItem(\'token\'), data2);\n      downloads($(\'#dwdexcel\'), \'subcategory\', "".concat(_url__WEBPACK_IMPORTED_MODULE_3__.backendurl, "/subcat/filereport"));\n      break;\n\n    case urlpages[5]:\n      // for products  page\n      // load category\n      //alert(\'products\'); \n      $(\'#sizesofproduct\').select2();\n      $(\'#colourofproduct\').select2();\n      $(\'#categoryid\').empty().html((0,_tsbackendscript_ajaxfunctioncall__WEBPACK_IMPORTED_MODULE_6__.processrequest2)("".concat(_url__WEBPACK_IMPORTED_MODULE_3__.backendurl, "/categories/category"), \'get\', {\n        \'Content-Type\': "application/json",\n        \'Authorization\': \'Bearer \' + localStorage.getItem(\'token\')\n      }, function (r) {\n        // console.log(\' r \', r) ;\n        r = JSON.parse(r); // console.log(\' r \', r) ;\n\n        var builder = \'\';\n        builder += "<option value=\'\'>Select Category</option>";\n\n        var _iterator5 = _createForOfIteratorHelper(r),\n            _step5;\n\n        try {\n          for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {\n            var row = _step5.value;\n            //console.log(\' row \',row)\n            builder += "<option value=\'".concat(row.categoryname, "\'>").concat(row.categoryname, "</option>");\n          }\n        } catch (err) {\n          _iterator5.e(err);\n        } finally {\n          _iterator5.f();\n        }\n\n        $(\'#categoryid\').empty().html(builder.toString());\n      })); //load sub category   \n\n      $(\'#subcategoryid\').empty().html((0,_tsbackendscript_ajaxfunctioncall__WEBPACK_IMPORTED_MODULE_6__.processrequest2)("".concat(_url__WEBPACK_IMPORTED_MODULE_3__.backendurl, "/subcat/subcategory"), \'get\', {\n        \'Content-Type\': "application/json",\n        \'Authorization\': \'Bearer \' + localStorage.getItem(\'token\')\n      }, function (r) {\n        // console.log(\' sub r \', r) ;\n        r = JSON.parse(r);\n        var builder = \'\';\n        builder += "<option value=\'\'>Select Subcategory</option>";\n\n        var _iterator6 = _createForOfIteratorHelper(r),\n            _step6;\n\n        try {\n          for (_iterator6.s(); !(_step6 = _iterator6.n()).done;) {\n            var row = _step6.value;\n            builder += "<option value=\'".concat(row.subcategoryname, "\'>").concat(row.subcategoryname, "</option>");\n          }\n        } catch (err) {\n          _iterator6.e(err);\n        } finally {\n          _iterator6.f();\n        }\n\n        $(\'#subcategoryid\').empty().html(builder.toString());\n      })); // load tax \n\n      $(\'#tax\').empty().html((0,_tsbackendscript_ajaxfunctioncall__WEBPACK_IMPORTED_MODULE_6__.processrequest2)("".concat(_url__WEBPACK_IMPORTED_MODULE_3__.backendurl, "/taxes/updatetax"), \'get\', {\n        \'Content-Type\': "application/json",\n        \'Authorization\': \'Bearer \' + localStorage.getItem(\'token\')\n      }, function (r) {\n        r = JSON.parse(r); //  console.log(\'tax r \', r) ;\n\n        var builder = \'\';\n        builder += "<option value=\'\'>Select Tax on Product</option>";\n\n        var _iterator7 = _createForOfIteratorHelper(r),\n            _step7;\n\n        try {\n          for (_iterator7.s(); !(_step7 = _iterator7.n()).done;) {\n            var row = _step7.value;\n            builder += "<option value=\'".concat(parseFloat(row.taxrate) / 100, "\'>").concat(row.taxdetail, " ").concat(row.taxrate, "%</option>");\n          }\n        } catch (err) {\n          _iterator7.e(err);\n        } finally {\n          _iterator7.f();\n        }\n\n        $(\'#tax\').empty().html(builder.toString());\n      }));\n      $(".usersearch").select2({\n        placeholder: "search your products by name",\n        minimumInputLength: 1,\n        ajax: {\n          url: "".concat(_url__WEBPACK_IMPORTED_MODULE_3__.backendurl, "/product/findallproduct"),\n          headers: {\n            Authorization: "Bearer ".concat(localStorage.getItem(\'token\'))\n          },\n          dataType: \'json\',\n          data: function data(params) {\n            // console.log(\' params \',params);\n            var vendorname2 = localStorage.getItem(\'vendorname\');\n            return {\n              action_users: params.term,\n              // search term\n              vendorname: vendorname2,\n              page: params.page\n            };\n          },\n          processResults: function processResults(data) {\n            // const data2  =  [data] ;\n            // console.log(data);\n            return {\n              results: $.map(data, function (obj) {\n                // console.log(\'obj in  map \',obj);\n                return {\n                  id: obj.id,\n                  text: obj.productname\n                };\n              })\n            };\n          }\n        }\n      });\n      break;\n\n    case urlpages[4]:\n      // for product details\n      $(".prdsearch").select2({\n        placeholder: "search your products by name",\n        minimumInputLength: 1,\n        ajax: {\n          url: "".concat(_url__WEBPACK_IMPORTED_MODULE_3__.backendurl, "/product/findallproduct"),\n          headers: {\n            Authorization: "Bearer ".concat(localStorage.getItem(\'token\'))\n          },\n          dataType: \'json\',\n          data: function data(params) {\n            // console.log(\' params \',params);\n            var vendorname2 = localStorage.getItem(\'vendorname\');\n            return {\n              action_users: params.term,\n              // search term\n              vendorname: vendorname2,\n              page: params.page\n            };\n          },\n          processResults: function processResults(data) {\n            // const data2  =  [data] ;\n            // console.log(data);\n            return {\n              results: $.map(data, function (obj) {\n                // console.log(\'obj in  map \',obj);\n                return {\n                  id: obj.id,\n                  text: obj.productname\n                };\n              })\n            };\n          }\n        }\n      }); // on change for products in  product details \n\n      $(".prdsearch").on(\'change\', function (e) {\n        e.preventDefault();\n        var userid = $(\'.prdsearch\').val();\n        console.log(\'usersearch \', userid);\n        (0,_tsbackendscript_ajaxfunctioncall__WEBPACK_IMPORTED_MODULE_6__.processrequest2)("".concat(_url__WEBPACK_IMPORTED_MODULE_3__.backendurl, "/product/find/").concat(userid, "?detail=details"), \'get\', {\n          \'Content-Type\': "application/json",\n          \'Authorization\': \'Bearer \' + localStorage.getItem(\'token\')\n        }, function (res) {\n          //console.log(" res ",res) ;\n          // delete res.vendorname;\n          //  delete res.imageurl ; \n          res = JSON.parse(res);\n          var prdimage = document.getElementById(\'prdimage\');\n          prdimage.src = "".concat(_url__WEBPACK_IMPORTED_MODULE_3__.backendurl, "/jetstore/").concat(res.imageurl); //   console.log(\' src path \',`${backendurl}/jetstore/${res.imageurl}`) ;\n          // console.log(\'details data \',e);\n\n          if (res.productreview !== null && res.productreview !== undefined) {\n            //console.log(\' review \',res.productreview);\n            var stars = res.productreview.split(\'\');\n            console.log(\' stars \', stars);\n            var options = new StringBuilder();\n\n            for (var i = 0; i < stars.length; i++) {\n              options.append("<option value=\'".concat(i, "\'>").concat(i, "</option>"));\n            }\n\n            $(\'#u-rating-fontawesome-o\').html(options.toString());\n          }\n\n          $(\'#prddes\').text("".concat(res.proddescription));\n          $(\'.product-price\').empty().html("<h3>".concat(res.productprice, "</h3>"));\n          var prdsize = document.getElementById(\'prdsize\');\n          prdsize.textContent = "".concat(res.size); // $(\'.product-title\').after(`${res.productname}`);\n\n          $(\'#qty\').val("".concat(parseInt(res.productquantity)));\n          var prdstatus = document.getElementById(\'prdstatus\');\n          prdstatus.innerHTML = "<strong>Product status</strong> - ".concat(res.productstatus, " <br/>\\n       <strong>Product code - ").concat(res.productcode, " </strong> <br/>\\n       <strong>Product model - ").concat(res.model, "</strong> <br/>\\n          ");\n          var prdsummary = document.getElementById(\'prdsummary\');\n          prdsummary.innerHTML = "<p><strong>Short Summary of Product</strong></p> <p>".concat(res.shortsummary, "</p>");\n          var prddetails = document.getElementById(\'prddetails\');\n          prddetails.style.display = \'block\'; // console.log(\'src \',prdimage.src, \' prdimage \',prdimage,stars) ;\n        });\n      });\n      break;\n\n    case "".concat(_url__WEBPACK_IMPORTED_MODULE_3__.loginurl, "/review"):\n      var reviewdata = [{\n        name: \'id\',\n        type: \'hidden\',\n        css: \'hide\'\n      }, {\n        name: "customername",\n        type: "text",\n        align: "left",\n        width: 80,\n        validate: function validate(value) {\n          // if (value > 0) {\n          return true; //}\n        }\n      }, {\n        name: "review",\n        align: "left",\n        type: "text",\n        width: 50 // itemTemplate: function (value: any, item: any) {\n        //   console.log(\' value \', value, \' item \', item);\n        // },\n\n      }, {\n        name: "testimony",\n        align: "left",\n        type: "text",\n        width: 50 // itemTemplate: function (value: any, item: any) {\n        //   console.log(\' value \', value, \' item \', item);\n        // },\n\n      }, {\n        name: "rate",\n        align: "left",\n        type: "text",\n        width: 50 // itemTemplate: function (value: any, item: any) {\n        //   console.log(\' value \', value, \' item \', item);\n        // },\n\n      }, // {\n      //   name:"imageurl",align:"left",type:"file",width:80,\n      // },\n      {\n        type: "control"\n      }];\n      (0,_tables__WEBPACK_IMPORTED_MODULE_11__.createtables2)("".concat(_url__WEBPACK_IMPORTED_MODULE_3__.backendurl, "/review"), localStorage.getItem(\'token\'), reviewdata, false);\n      break;\n\n    case "".concat(_url__WEBPACK_IMPORTED_MODULE_3__.loginurl, "/customer"):\n      var customerdata = [{\n        name: \'id\',\n        type: \'hidden\',\n        css: \'hide\'\n      }, {\n        name: "firstname",\n        type: "text",\n        align: "left",\n        width: 80,\n        validate: function validate(value) {\n          // if (value > 0) {\n          return true; //}\n        }\n      }, {\n        name: "lastname",\n        align: "left",\n        type: "text",\n        width: 50 // itemTemplate: function (value: any, item: any) {\n        //   console.log(\' value \', value, \' item \', item);\n        // },\n\n      }, {\n        name: "email",\n        align: "left",\n        type: "text",\n        width: 50 // itemTemplate: function (value: any, item: any) {\n        //   console.log(\' value \', value, \' item \', item);\n        // },\n\n      }, {\n        name: "phone",\n        align: "left",\n        type: "text",\n        width: 50 // itemTemplate: function (value: any, item: any) {\n        //   console.log(\' value \', value, \' item \', item);\n        // },\n\n      }, // {\n      //   name:"imageurl",align:"left",type:"file",width:80,\n      // },\n      {\n        type: "control"\n      }];\n      (0,_tables__WEBPACK_IMPORTED_MODULE_11__.createtables2)("".concat(_url__WEBPACK_IMPORTED_MODULE_3__.backendurl, "/customer/register"), localStorage.getItem(\'token\'), customerdata, true);\n      break;\n\n    case "".concat(_url__WEBPACK_IMPORTED_MODULE_3__.loginurl, "/productlist"):\n      searchFiter();\n      break;\n\n    case "".concat(_url__WEBPACK_IMPORTED_MODULE_3__.loginurl, "/messaging"):\n      // $(\'#sizesofproduct\').select2() ;\n      // $(\'#colourofproduct\').select2() ;\n      var selecttyperadio = Array.from(document.getElementsByName(\'selectype\')); // let [inp1,inp2,inp3,inp4]  =  selecttyperadio ;\n      //console.log(\'checked \',inp1.checked);\n\n      search("usersearch", selecttyperadio);\n      break;\n\n    case "".concat(_url__WEBPACK_IMPORTED_MODULE_3__.loginurl, "/messageview"):\n      //alert() ;\n      break;\n\n    default:\n  }\n}; //search option in messaging\n// const searchoption  = (url:string,inputArray:HTMLInputElement[])=>{\n//  search(url,inputArray) ;\n// };\n\n\nvar search = function search(_url, inputArray) {\n  //console.log(inputArray) ;\n  var _inputArray = (0,_babel_runtime_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_1__.default)(inputArray, 2),\n      inp1 = _inputArray[0],\n      inp2 = _inputArray[1];\n\n  $(".userandvendor").select2({\n    placeholder: "search users/vendors and send message",\n    minimumInputLength: 1,\n    ajax: {\n      url: function url() {\n        if (inp1.checked) {\n          $(\'.usersearch2\').prop(\'disabled\', false);\n          console.log(\'called vendors\', inp1.checked);\n          return "".concat(_url__WEBPACK_IMPORTED_MODULE_3__.backendurl, "/").concat(_url);\n        } else if (inp2.checked) {\n          $(\'.usersearch2\').prop(\'disabled\', false);\n          console.log(\'called users\', inp2.checked);\n          return "".concat(_url__WEBPACK_IMPORTED_MODULE_3__.backendurl, "/").concat(_url);\n        }\n      },\n      headers: {\n        Authorization: "Bearer ".concat(localStorage.getItem(\'token\'))\n      },\n      dataType: \'json\',\n      data: function data(params) {\n        // console.log(\' params \',params);\n        var vendorname2 = localStorage.getItem(\'vendorname\');\n\n        if (inp1.checked) {\n          return {\n            action_users: params.term,\n            // search term\n            //vendorname: vendorname2,\n            page: params.page\n          };\n        } else if (inp2.checked) {\n          return {\n            action_users: params.term,\n            // search term\n            vendorname: vendorname2,\n            page: params.page\n          };\n        }\n      },\n      processResults: function processResults(data) {\n        console.log(\' data \', data);\n\n        if (inp1.checked) {\n          console.log(\'vendorname\', data);\n          return {\n            results: $.map(data, function (obj) {\n              return {\n                id: obj.id,\n                text: obj.vendorname\n              };\n            })\n          };\n        } else if (inp2.checked) {\n          console.log(\'firstname\', data);\n          return {\n            results: $.map(data, function (obj) {\n              return {\n                id: obj.id,\n                text: obj.firstname\n              };\n            })\n          };\n        }\n      }\n    }\n  });\n}; // searchfilter \n\n\nfunction searchFiter(pagenum) {\n  pagenum = pagenum ? pagenum : 0;\n  document.cookie = "current_page" + pagenum;\n  $.ajax({\n    type: \'get\',\n    url: "".concat(_url__WEBPACK_IMPORTED_MODULE_3__.backendurl, "/product/allproduct"),\n    headers: {\n      Authorization: "Bearer ".concat(localStorage.getItem(\'token\'))\n    },\n    data: "pageNumber=".concat(pagenum, "&pageSize=", 10),\n    success: function success(data) {\n      //console.log(data) ;\n      var prdcontainer = document.getElementById(\'prdcontainer\');\n      prdcontainer.innerHTML = data;\n    }\n  });\n} // searchfilter for coupon\n\n\nfunction searchFiter2(pagenum) {\n  pagenum = pagenum ? pagenum : 0;\n  document.cookie = "current_page" + pagenum;\n  $.ajax({\n    type: \'get\',\n    url: "".concat(_url__WEBPACK_IMPORTED_MODULE_3__.backendurl, "/coupon/coupon"),\n    headers: {\n      Authorization: "Bearer ".concat(localStorage.getItem(\'token\'))\n    },\n    data: "vendorname=".concat(localStorage.getItem(\'vendorname\'), "&pageNumber=").concat(pagenum, "&pageSize=", 10),\n    success: function success(data) {\n      console.log(data);\n      var couponbody = document.getElementById(\'couponbody\');\n      couponbody.innerHTML = data;\n    }\n  });\n} // search for product on change \n\n\n$(\'.usersearch\').on(\'change\', function (e) {\n  e.preventDefault();\n  var userid = $(\'.usersearch\').val();\n  (0,_tsbackendscript_ajaxfunctioncall__WEBPACK_IMPORTED_MODULE_6__.processrequest2)("".concat(_url__WEBPACK_IMPORTED_MODULE_3__.backendurl, "/product/find/").concat(userid), \'get\', {\n    \'Content-Type\': "application/json",\n    \'Authorization\': \'Bearer \' + localStorage.getItem(\'token\')\n  }, function (res) {\n    console.log(\'product res \', res);\n    res = JSON.parse(res);\n    delete res.vendorname;\n    delete res.imageurl;\n    delete res.dateofcreation;\n    var todayTime = new Date(res.expirydate);\n    var month = todayTime.getMonth() + 1;\n    var day = todayTime.getDate();\n    var year = todayTime.getFullYear();\n    var expdate = year + "-" + "0" + month + "-" + day;\n    res.expirydate = expdate; //console.log(\' res \',res,\' date \',res.expirydate) ;\n\n    $("#add-product-form").autofill(res);\n    var form = document.getElementById("add-product-form");\n    form.expirydate.value = res.expirydate;\n    CKEDITOR.instances.editor1.setData(res.proddescription); // console.log(\'id\',$(\'#id\').val()) ; \n  });\n}); // search  users \n\n$(\'.usersearch\').on(\'change\', function (e) {\n  e.preventDefault(); // console.log($(\'.usersearch\').val());\n\n  var userid = $(\'.usersearch\').val(); // fill up the form \n\n  fetch("".concat(_url__WEBPACK_IMPORTED_MODULE_3__.backendurl, "/vendoruser?vendorname=").concat(localStorage.getItem(\'vendorname\'), "&id=").concat(userid), {\n    method: \'GET\',\n    credentials: \'same-origin\',\n    headers: {\n      // \'Accept\': \'application/json\',\n      \'Content-Type\': \'application/json\',\n      // "X-Requested-With": "XMLHttpRequest",\n      \'Authorization\': "Bearer ".concat(localStorage.getItem(\'token\'))\n    } //body:JSON.stringify(d)\n\n  }).then(function (responseJson) {\n    console.log(responseJson);\n    return responseJson.json();\n  }).then(function (r) {\n    var _document$getElementB;\n\n    console.log(\'response ...\', r);\n    delete r.id;\n    delete r.vendorname;\n    delete r.password;\n    delete r.vendorowner;\n    delete r.type;\n    delete r.token;\n    delete r.userdate;\n    console.log((_document$getElementB = document.getElementById(\'usersearch\')) === null || _document$getElementB === void 0 ? void 0 : _document$getElementB.textContent);\n    var userstatus = document.getElementById(\'userstatus\'); //  selecttext.textContent  = \'\' ;\n\n    $("#userdetails").autofill(r);\n\n    if (r.userstatus === \'1\') {\n      userstatus.checked = true;\n    }\n\n    var userdetails = document.getElementById(\'userdetails\');\n\n    var _Array$from13 = Array.from(userdetails.vendorowner),\n        _Array$from14 = (0,_babel_runtime_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_1__.default)(_Array$from13, 2),\n        yes = _Array$from14[0],\n        no = _Array$from14[1];\n\n    if (r.vendorowner === \'1\') {\n      yes.checked = true;\n    } else if (r.vendorowner !== \'1\') {\n      no.checked = true;\n    }\n\n    $(\'#usererror\').empty().html(\'<br/><div class="alert alert-warning"> <span class="glyphicon glyphicon-info-sign"></span> &nbsp; \' + \'Password field should be empty unless you want to update password for your users\' + \'!</div>\');\n  })["catch"](function (error) {\n    console.log(error);\n  });\n}); //clear  save button\n\n$(\'#clear\').on(\'click\', function (e) {\n  e.preventDefault();\n  alertify.confirm("Form Reset", "Do you want to reset form ?", function () {\n    var _document$getElementB2;\n\n    $(\'#usererror\').empty();\n    var userid = $(\'.usersearch\').val();\n    console.log((_document$getElementB2 = document.getElementById(\'usersearch\')) === null || _document$getElementB2 === void 0 ? void 0 : _document$getElementB2.textContent);\n    var selecttext = document.getElementById(\'usersearch\');\n    selecttext.textContent = \'\'; // reset form \n\n    var userperm = document.getElementById(\'userpermission\');\n    userperm.reset();\n    var userdetails = document.getElementById(\'userdetails\');\n    userdetails.reset();\n    toastr.success(\'form reset successfully\');\n  }, function () {\n    alertify.error(\'Cancel\');\n  });\n});\n$(document).ready(function () {\n  //const myform: HTMLFormElement = document.querySelector(\'#top-profile\')!;\n  if (URL) {\n    var currenthref = window.location.href;\n    var url = new URL(currenthref);\n    console.log(\'test url \', _url__WEBPACK_IMPORTED_MODULE_3__.theprotocol + url.host + url.pathname);\n    pageload(_url__WEBPACK_IMPORTED_MODULE_3__.theprotocol + url.host + url.pathname); // pageload(url.href);\n  } else {\n    alert(\'this browser seem to be too old\');\n  } //  render(()=>html`<button class="btn btn-primary" type="button" @click=${test()}>Update</button>`,document.body);\n\n});\nDropzone.options.multiFileUpload = {\n  // paramName: "file",\n  method: "post",\n  url: "http://localhost:1022/product/uploadfiles?vendorname=".concat(localStorage.getItem("vendorname")),\n  headers: {\n    "Authorization": "Bearer ".concat(localStorage.getItem(\'token\'))\n  },\n  withCredentials: true,\n  addRemoveLinks: true,\n  maxFilesize: 100,\n  maxFiles: 100,\n  acceptedFiles: ".png,.jpg,.jpeg,.bmp",\n  accept: function accept(file, done) {\n    console.log("uploaded");\n    done();\n  },\n  autoProcessQueue: false,\n  uploadMultiple: true,\n  parallelUploads: 50,\n  init: function init() {\n    this.on("addedfile", function (file) {\n      console.log(\'file added ....\');\n    });\n    this.on(\'error\', function (file, errorMessage) {\n      console.log(errorMessage);\n    });\n    var myDropzone = this; // closure\n\n    var submitButton = document.querySelector("#filesdata");\n    submitButton.addEventListener("click", function (e) {\n      e.preventDefault();\n      e.stopPropagation();\n      Swal.fire({\n        icon: \'question\',\n        text: \'Do you want to upload files and data\',\n        showCancelButton: true\n      }).then(function (r) {\n        if (r.isConfirmed) {\n          //set ajax function here to process first\n          $("#filesdata").empty().html("<img src=\\"".concat(_url__WEBPACK_IMPORTED_MODULE_3__.loginurl, "/dist/images/btn-ajax-loader.gif\\"/> &nbsp; processing your uploads.please wait ..."));\n\n          var _URL = "".concat(_url__WEBPACK_IMPORTED_MODULE_3__.backendurl, "/product/product");\n\n          var formData = document.getElementById(\'addfile\');\n          var prdfile = formData.prdfile; // if no file is choosen\n          // console.log(prdfile,prdfile.value) ;\n\n          if (prdfile.value === undefined || prdfile.value === "") {\n            toastr.error(\'No excel files is uploaded yet\');\n            console.log(\'prdfile is testing \');\n            throw new Error(" Error. ");\n          } //console.log(\'prdfile \') ;\n\n\n          var filename = prdfile.files[0].name;\n          var xlsx = filename.split(\'.\')[1]; //alert(xlsx) ;\n          //console.log(\'xlxs \',xlsx===\'xlx\') ;                   \n\n          if (xlsx !== \'xlsx\') {\n            // if it not excel\n            toastr.error(\'Only Excel file is permitted\');\n            setTimeout(function () {\n              $("#filesdata").empty().html("<button type=\'submit\' class=\'btn btn-md btn-primary\' id=\'filesdata\'>Upload Files And Data</button>"); //  toastr.error(\'uploading of files failed ...\'); \n            }, 2000);\n            return;\n          }\n\n          var form = new FormData(formData);\n          $.ajax({\n            url: _URL,\n            type: \'POST\',\n            headers: {\n              "Authorization": "Bearer ".concat(localStorage.getItem(\'token\'))\n            },\n            dataType: \'text\',\n            contentType: false,\n            data: form,\n            processData: false,\n            beforeSend: function beforeSend() {// $("#filesdata").empty().html(`<img src="${loginurl}/dist/images/btn-ajax-loader.gif"/> &nbsp; processing your uploads.please wait ...`);      \t\t\n            },\n            success: function success(result) {\n              //   submitButton.textContent  = `Upload Files And Data`;\n              console.log(\'button click\', result);\n              setTimeout(function () {\n                //delay for the uploaded  to be processed\n                myDropzone.processQueue(); // Tell Dropzone to process all queued files.\n              }, 5000);\n            },\n            error: function error(err) {\n              $("#filesdata").empty().html("<button type=\'submit\' class=\'btn btn-md btn-primary\' id=\'filesdata\'>Upload Files And Data</button>");\n              toastr.error(\'uploading of files failed ...\');\n            }\n          });\n        }\n      });\n    }); // this.sendingMu("sending",function(file:any,xhr:any,formData:any){\n    //   formData.append("vendorname",localStorage.getItem("vendorname"));\n    //   toastr.success(\'sending\');\n    // }) ;\n\n    this.on("successmultiple", function (files, response) {\n      setTimeout(function () {\n        $("#filesdata").empty().html("<button type=\'submit\' class=\'btn btn-md btn-primary\' id=\'filesdata\'>Upload Files And Data</button>");\n        toastr.success(\'All Images and data successfully uploaded and processed\');\n        console.log(\' response \', response);\n      }, 1500);\n    });\n    this.on("errormultiple", function (files, response) {\n      toastr.error(\'there is  a  problem\'); //console.log(response)\n    });\n    this.on("completemultiple", function (files, response) {});\n    this.on(\'complete\', function (file) {\n      myDropzone.removeFile(file);\n    });\n  }\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///0\n')},(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__)=>{"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "default": () => (/* binding */ _defineProperty)\n/* harmony export */ });\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly93ZWJhcHAvLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vZGVmaW5lUHJvcGVydHkuanM/YWRlMyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQWU7QUFDZjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0wsR0FBRztBQUNIO0FBQ0E7O0FBRUE7QUFDQSIsImZpbGUiOiIxLmpzIiwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gX2RlZmluZVByb3BlcnR5KG9iaiwga2V5LCB2YWx1ZSkge1xuICBpZiAoa2V5IGluIG9iaikge1xuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShvYmosIGtleSwge1xuICAgICAgdmFsdWU6IHZhbHVlLFxuICAgICAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZSxcbiAgICAgIHdyaXRhYmxlOiB0cnVlXG4gICAgfSk7XG4gIH0gZWxzZSB7XG4gICAgb2JqW2tleV0gPSB2YWx1ZTtcbiAgfVxuXG4gIHJldHVybiBvYmo7XG59Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///1\n')},(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__)=>{"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "default": () => (/* binding */ _slicedToArray)\n/* harmony export */ });\n/* harmony import */ var _arrayWithHoles_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(3);\n/* harmony import */ var _iterableToArrayLimit_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(4);\n/* harmony import */ var _unsupportedIterableToArray_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(5);\n/* harmony import */ var _nonIterableRest_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(7);\n\n\n\n\nfunction _slicedToArray(arr, i) {\n  return (0,_arrayWithHoles_js__WEBPACK_IMPORTED_MODULE_0__.default)(arr) || (0,_iterableToArrayLimit_js__WEBPACK_IMPORTED_MODULE_1__.default)(arr, i) || (0,_unsupportedIterableToArray_js__WEBPACK_IMPORTED_MODULE_2__.default)(arr, i) || (0,_nonIterableRest_js__WEBPACK_IMPORTED_MODULE_3__.default)();\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly93ZWJhcHAvLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vc2xpY2VkVG9BcnJheS5qcz8zODM1Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQWlEO0FBQ1k7QUFDWTtBQUN0QjtBQUNwQztBQUNmLFNBQVMsMkRBQWMsU0FBUyxpRUFBb0IsWUFBWSx1RUFBMEIsWUFBWSw0REFBZTtBQUNySCIsImZpbGUiOiIyLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGFycmF5V2l0aEhvbGVzIGZyb20gXCIuL2FycmF5V2l0aEhvbGVzLmpzXCI7XG5pbXBvcnQgaXRlcmFibGVUb0FycmF5TGltaXQgZnJvbSBcIi4vaXRlcmFibGVUb0FycmF5TGltaXQuanNcIjtcbmltcG9ydCB1bnN1cHBvcnRlZEl0ZXJhYmxlVG9BcnJheSBmcm9tIFwiLi91bnN1cHBvcnRlZEl0ZXJhYmxlVG9BcnJheS5qc1wiO1xuaW1wb3J0IG5vbkl0ZXJhYmxlUmVzdCBmcm9tIFwiLi9ub25JdGVyYWJsZVJlc3QuanNcIjtcbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIF9zbGljZWRUb0FycmF5KGFyciwgaSkge1xuICByZXR1cm4gYXJyYXlXaXRoSG9sZXMoYXJyKSB8fCBpdGVyYWJsZVRvQXJyYXlMaW1pdChhcnIsIGkpIHx8IHVuc3VwcG9ydGVkSXRlcmFibGVUb0FycmF5KGFyciwgaSkgfHwgbm9uSXRlcmFibGVSZXN0KCk7XG59Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///2\n')},(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__)=>{"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "default": () => (/* binding */ _arrayWithHoles)\n/* harmony export */ });\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly93ZWJhcHAvLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vYXJyYXlXaXRoSG9sZXMuanM/MGQyMSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQWU7QUFDZjtBQUNBIiwiZmlsZSI6IjMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBfYXJyYXlXaXRoSG9sZXMoYXJyKSB7XG4gIGlmIChBcnJheS5pc0FycmF5KGFycikpIHJldHVybiBhcnI7XG59Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///3\n')},(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__)=>{"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "default": () => (/* binding */ _iterableToArrayLimit)\n/* harmony export */ });\nfunction _iterableToArrayLimit(arr, i) {\n  var _i = arr && (typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"]);\n\n  if (_i == null) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n\n  var _s, _e;\n\n  try {\n    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i["return"] != null) _i["return"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly93ZWJhcHAvLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vaXRlcmFibGVUb0FycmF5TGltaXQuanM/MDlmMCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQWU7QUFDZjs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBLDJCQUEyQiwrQkFBK0I7QUFDMUQ7O0FBRUE7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBOztBQUVBO0FBQ0EiLCJmaWxlIjoiNC5qcyIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIF9pdGVyYWJsZVRvQXJyYXlMaW1pdChhcnIsIGkpIHtcbiAgdmFyIF9pID0gYXJyICYmICh0eXBlb2YgU3ltYm9sICE9PSBcInVuZGVmaW5lZFwiICYmIGFycltTeW1ib2wuaXRlcmF0b3JdIHx8IGFycltcIkBAaXRlcmF0b3JcIl0pO1xuXG4gIGlmIChfaSA9PSBudWxsKSByZXR1cm47XG4gIHZhciBfYXJyID0gW107XG4gIHZhciBfbiA9IHRydWU7XG4gIHZhciBfZCA9IGZhbHNlO1xuXG4gIHZhciBfcywgX2U7XG5cbiAgdHJ5IHtcbiAgICBmb3IgKF9pID0gX2kuY2FsbChhcnIpOyAhKF9uID0gKF9zID0gX2kubmV4dCgpKS5kb25lKTsgX24gPSB0cnVlKSB7XG4gICAgICBfYXJyLnB1c2goX3MudmFsdWUpO1xuXG4gICAgICBpZiAoaSAmJiBfYXJyLmxlbmd0aCA9PT0gaSkgYnJlYWs7XG4gICAgfVxuICB9IGNhdGNoIChlcnIpIHtcbiAgICBfZCA9IHRydWU7XG4gICAgX2UgPSBlcnI7XG4gIH0gZmluYWxseSB7XG4gICAgdHJ5IHtcbiAgICAgIGlmICghX24gJiYgX2lbXCJyZXR1cm5cIl0gIT0gbnVsbCkgX2lbXCJyZXR1cm5cIl0oKTtcbiAgICB9IGZpbmFsbHkge1xuICAgICAgaWYgKF9kKSB0aHJvdyBfZTtcbiAgICB9XG4gIH1cblxuICByZXR1cm4gX2Fycjtcbn0iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///4\n')},(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__)=>{"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "default": () => (/* binding */ _unsupportedIterableToArray)\n/* harmony export */ });\n/* harmony import */ var _arrayLikeToArray_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(6);\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === "string") return (0,_arrayLikeToArray_js__WEBPACK_IMPORTED_MODULE_0__.default)(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === "Object" && o.constructor) n = o.constructor.name;\n  if (n === "Map" || n === "Set") return Array.from(o);\n  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return (0,_arrayLikeToArray_js__WEBPACK_IMPORTED_MODULE_0__.default)(o, minLen);\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly93ZWJhcHAvLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vdW5zdXBwb3J0ZWRJdGVyYWJsZVRvQXJyYXkuanM/MDZjNSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7OztBQUFxRDtBQUN0QztBQUNmO0FBQ0Esb0NBQW9DLDZEQUFnQjtBQUNwRDtBQUNBO0FBQ0E7QUFDQSxzRkFBc0YsNkRBQWdCO0FBQ3RHIiwiZmlsZSI6IjUuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgYXJyYXlMaWtlVG9BcnJheSBmcm9tIFwiLi9hcnJheUxpa2VUb0FycmF5LmpzXCI7XG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBfdW5zdXBwb3J0ZWRJdGVyYWJsZVRvQXJyYXkobywgbWluTGVuKSB7XG4gIGlmICghbykgcmV0dXJuO1xuICBpZiAodHlwZW9mIG8gPT09IFwic3RyaW5nXCIpIHJldHVybiBhcnJheUxpa2VUb0FycmF5KG8sIG1pbkxlbik7XG4gIHZhciBuID0gT2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKG8pLnNsaWNlKDgsIC0xKTtcbiAgaWYgKG4gPT09IFwiT2JqZWN0XCIgJiYgby5jb25zdHJ1Y3RvcikgbiA9IG8uY29uc3RydWN0b3IubmFtZTtcbiAgaWYgKG4gPT09IFwiTWFwXCIgfHwgbiA9PT0gXCJTZXRcIikgcmV0dXJuIEFycmF5LmZyb20obyk7XG4gIGlmIChuID09PSBcIkFyZ3VtZW50c1wiIHx8IC9eKD86VWl8SSludCg/Ojh8MTZ8MzIpKD86Q2xhbXBlZCk/QXJyYXkkLy50ZXN0KG4pKSByZXR1cm4gYXJyYXlMaWtlVG9BcnJheShvLCBtaW5MZW4pO1xufSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///5\n')},(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__)=>{"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "default": () => (/* binding */ _arrayLikeToArray)\n/* harmony export */ });\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly93ZWJhcHAvLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vYXJyYXlMaWtlVG9BcnJheS5qcz82Yjc1Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFBZTtBQUNmOztBQUVBLHdDQUF3QyxTQUFTO0FBQ2pEO0FBQ0E7O0FBRUE7QUFDQSIsImZpbGUiOiI2LmpzIiwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gX2FycmF5TGlrZVRvQXJyYXkoYXJyLCBsZW4pIHtcbiAgaWYgKGxlbiA9PSBudWxsIHx8IGxlbiA+IGFyci5sZW5ndGgpIGxlbiA9IGFyci5sZW5ndGg7XG5cbiAgZm9yICh2YXIgaSA9IDAsIGFycjIgPSBuZXcgQXJyYXkobGVuKTsgaSA8IGxlbjsgaSsrKSB7XG4gICAgYXJyMltpXSA9IGFycltpXTtcbiAgfVxuXG4gIHJldHVybiBhcnIyO1xufSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///6\n')},(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__)=>{"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "default": () => (/* binding */ _nonIterableRest)\n/* harmony export */ });\nfunction _nonIterableRest() {\n  throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly93ZWJhcHAvLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vbm9uSXRlcmFibGVSZXN0LmpzPzNkOGMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFlO0FBQ2Y7QUFDQSIsImZpbGUiOiI3LmpzIiwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gX25vbkl0ZXJhYmxlUmVzdCgpIHtcbiAgdGhyb3cgbmV3IFR5cGVFcnJvcihcIkludmFsaWQgYXR0ZW1wdCB0byBkZXN0cnVjdHVyZSBub24taXRlcmFibGUgaW5zdGFuY2UuXFxuSW4gb3JkZXIgdG8gYmUgaXRlcmFibGUsIG5vbi1hcnJheSBvYmplY3RzIG11c3QgaGF2ZSBhIFtTeW1ib2wuaXRlcmF0b3JdKCkgbWV0aG9kLlwiKTtcbn0iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///7\n')},(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "login": () => (/* binding */ login)\n/* harmony export */ });\n/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(9);\n/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(10);\n/* harmony import */ var _ajaxfunctioncall__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(11);\n/* harmony import */ var _url__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(16);\n\n\n\n\nvar login = /*#__PURE__*/function () {\n  function login() {\n    (0,_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__.default)(this, login);\n\n    this.username = "";\n    this.password = "";\n  }\n\n  (0,_babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__.default)(login, [{\n    key: "loginaction",\n    value: function loginaction(form, token) {\n      if (form) {\n        // if it exists \n        // formdata \n        console.log(\'creating form ....\'); // console.log(form,form.get("username"));\n\n        this.username = form.get("username");\n        this.password = form.get("password");\n        console.log("username ", this.username, "password ", this.password);\n        (0,_ajaxfunctioncall__WEBPACK_IMPORTED_MODULE_2__.submitform)("".concat(_url__WEBPACK_IMPORTED_MODULE_3__.loginurl, "/api/login"), {\n          username: this.username,\n          password: this.password\n        }, null, \'text\', \'post\'); //send form\n      }\n\n      console.log(\'login completed truly\');\n    }\n  }]);\n\n  return login;\n}();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly93ZWJhcHAvLi90c19zY3JpcHRzL3RzYmFja2VuZHNjcmlwdC9sb2dpbi50cz9mZDNhIl0sIm5hbWVzIjpbImxvZ2luIiwidXNlcm5hbWUiLCJwYXNzd29yZCIsImZvcm0iLCJ0b2tlbiIsImNvbnNvbGUiLCJsb2ciLCJnZXQiLCJzdWJtaXRmb3JtIiwibG9naW51cmwiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7QUFBQTtBQUNBO0FBQ08sSUFBTUEsS0FBYjtBQUdFLG1CQUFhO0FBQUE7O0FBQ1YsU0FBS0MsUUFBTCxHQUFjLEVBQWQ7QUFDQSxTQUFLQyxRQUFMLEdBQWMsRUFBZDtBQUNDOztBQU5OO0FBQUE7QUFBQSxXQU9HLHFCQUFZQyxJQUFaLEVBQTBCQyxLQUExQixFQUE0QztBQUMzQyxVQUFHRCxJQUFILEVBQVE7QUFBRTtBQUNIO0FBQ0pFLGVBQU8sQ0FBQ0MsR0FBUixDQUFZLG9CQUFaLEVBRkssQ0FHTjs7QUFDQyxhQUFLTCxRQUFMLEdBQWlCRSxJQUFJLENBQUNJLEdBQUwsQ0FBUyxVQUFULENBQWpCO0FBQ0EsYUFBS0wsUUFBTCxHQUFpQkMsSUFBSSxDQUFDSSxHQUFMLENBQVMsVUFBVCxDQUFqQjtBQUNBRixlQUFPLENBQUNDLEdBQVIsQ0FBWSxXQUFaLEVBQXdCLEtBQUtMLFFBQTdCLEVBQXNDLFdBQXRDLEVBQWtELEtBQUtDLFFBQXZEO0FBQ0ZNLHFFQUFVLFdBQUlDLDBDQUFKLGlCQUF5QjtBQUFDUixrQkFBUSxFQUFDLEtBQUtBLFFBQWY7QUFBd0JDLGtCQUFRLEVBQUMsS0FBS0E7QUFBdEMsU0FBekIsRUFBeUUsSUFBekUsRUFBOEUsTUFBOUUsRUFBcUYsTUFBckYsQ0FBVixDQVBPLENBT2dHO0FBQ25HOztBQUNERyxhQUFPLENBQUNDLEdBQVIsQ0FBWSx1QkFBWjtBQUNEO0FBbEJQOztBQUFBO0FBQUEiLCJmaWxlIjoiOC5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7c3VibWl0Zm9ybX0gZnJvbSBcIi4vYWpheGZ1bmN0aW9uY2FsbFwiIDtcclxuaW1wb3J0IHtiYWNrZW5kdXJsLGxvZ2ludXJsfSBmcm9tIFwiLi4vdXJsXCIgO1xyXG5leHBvcnQgY2xhc3MgbG9naW57XHJcbiAgcHJpdmF0ZSB1c2VybmFtZTpzdHJpbmcgO1xyXG4gIHByaXZhdGUgcGFzc3dvcmQ6c3RyaW5nIDtcclxuICBjb25zdHJ1Y3Rvcigpe1xyXG4gICAgIHRoaXMudXNlcm5hbWU9XCJcIiA7XHJcbiAgICAgdGhpcy5wYXNzd29yZD1cIlwiO1xyXG4gICAgIH1cclxuICAgbG9naW5hY3Rpb24oZm9ybTpGb3JtRGF0YSx0b2tlbjpzdHJpbmcpOnZvaWR7XHJcbiAgICBpZihmb3JtKXsgLy8gaWYgaXQgZXhpc3RzIFxyXG4gICAgICAgICAgIC8vIGZvcm1kYXRhIFxyXG4gICAgICAgY29uc29sZS5sb2coJ2NyZWF0aW5nIGZvcm0gLi4uLicpO1xyXG4gICAgICAvLyBjb25zb2xlLmxvZyhmb3JtLGZvcm0uZ2V0KFwidXNlcm5hbWVcIikpO1xyXG4gICAgICAgdGhpcy51c2VybmFtZSA9ICBmb3JtLmdldChcInVzZXJuYW1lXCIpIGFzIHN0cmluZyA7XHJcbiAgICAgICB0aGlzLnBhc3N3b3JkID0gIGZvcm0uZ2V0KFwicGFzc3dvcmRcIikgYXMgc3RyaW5nO1xyXG4gICAgICAgY29uc29sZS5sb2coXCJ1c2VybmFtZSBcIix0aGlzLnVzZXJuYW1lLFwicGFzc3dvcmQgXCIsdGhpcy5wYXNzd29yZCk7XHJcbiAgICAgc3VibWl0Zm9ybShgJHtsb2dpbnVybH0vYXBpL2xvZ2luYCx7dXNlcm5hbWU6dGhpcy51c2VybmFtZSxwYXNzd29yZDp0aGlzLnBhc3N3b3JkfSxudWxsLCd0ZXh0JywncG9zdCcpOy8vc2VuZCBmb3JtXHJcbiAgICAgICAgfVxyXG4gICAgICAgIGNvbnNvbGUubG9nKCdsb2dpbiBjb21wbGV0ZWQgdHJ1bHknKTtcclxuICAgICAgfVxyXG59XHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///8\n')},(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__)=>{"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "default": () => (/* binding */ _classCallCheck)\n/* harmony export */ });\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError("Cannot call a class as a function");\n  }\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly93ZWJhcHAvLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vY2xhc3NDYWxsQ2hlY2suanM/ZDRlYyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQWU7QUFDZjtBQUNBO0FBQ0E7QUFDQSIsImZpbGUiOiI5LmpzIiwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gX2NsYXNzQ2FsbENoZWNrKGluc3RhbmNlLCBDb25zdHJ1Y3Rvcikge1xuICBpZiAoIShpbnN0YW5jZSBpbnN0YW5jZW9mIENvbnN0cnVjdG9yKSkge1xuICAgIHRocm93IG5ldyBUeXBlRXJyb3IoXCJDYW5ub3QgY2FsbCBhIGNsYXNzIGFzIGEgZnVuY3Rpb25cIik7XG4gIH1cbn0iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///9\n')},(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__)=>{"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "default": () => (/* binding */ _createClass)\n/* harmony export */ });\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if ("value" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly93ZWJhcHAvLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vY3JlYXRlQ2xhc3MuanM/YmVlMiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUE7QUFDQSxpQkFBaUIsa0JBQWtCO0FBQ25DO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVlO0FBQ2Y7QUFDQTtBQUNBO0FBQ0EiLCJmaWxlIjoiMTAuanMiLCJzb3VyY2VzQ29udGVudCI6WyJmdW5jdGlvbiBfZGVmaW5lUHJvcGVydGllcyh0YXJnZXQsIHByb3BzKSB7XG4gIGZvciAodmFyIGkgPSAwOyBpIDwgcHJvcHMubGVuZ3RoOyBpKyspIHtcbiAgICB2YXIgZGVzY3JpcHRvciA9IHByb3BzW2ldO1xuICAgIGRlc2NyaXB0b3IuZW51bWVyYWJsZSA9IGRlc2NyaXB0b3IuZW51bWVyYWJsZSB8fCBmYWxzZTtcbiAgICBkZXNjcmlwdG9yLmNvbmZpZ3VyYWJsZSA9IHRydWU7XG4gICAgaWYgKFwidmFsdWVcIiBpbiBkZXNjcmlwdG9yKSBkZXNjcmlwdG9yLndyaXRhYmxlID0gdHJ1ZTtcbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBkZXNjcmlwdG9yLmtleSwgZGVzY3JpcHRvcik7XG4gIH1cbn1cblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gX2NyZWF0ZUNsYXNzKENvbnN0cnVjdG9yLCBwcm90b1Byb3BzLCBzdGF0aWNQcm9wcykge1xuICBpZiAocHJvdG9Qcm9wcykgX2RlZmluZVByb3BlcnRpZXMoQ29uc3RydWN0b3IucHJvdG90eXBlLCBwcm90b1Byb3BzKTtcbiAgaWYgKHN0YXRpY1Byb3BzKSBfZGVmaW5lUHJvcGVydGllcyhDb25zdHJ1Y3Rvciwgc3RhdGljUHJvcHMpO1xuICByZXR1cm4gQ29uc3RydWN0b3I7XG59Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///10\n')},(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"checktoken\": () => (/* binding */ checktoken),\n/* harmony export */   \"submitform\": () => (/* binding */ submitform),\n/* harmony export */   \"formsubmit\": () => (/* binding */ formsubmit),\n/* harmony export */   \"processrequest2\": () => (/* binding */ processrequest2)\n/* harmony export */ });\n/* harmony import */ var _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(12);\n/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(13);\n/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _miscellaneous__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(15);\n\n\n//declare var response:any;\n//these are ajax calls\n//login\n\nvar checktoken = function checktoken(token) {\n  //const token= localStorage.getItem('token') ;\n  var decoded = jwt_decode(token);\n  var now = Date.now().valueOf() / 1000;\n  var tokenexp = parseInt(decoded.exp);\n  (0,_miscellaneous__WEBPACK_IMPORTED_MODULE_2__.invalidatetoken)(tokenexp);\n};\nvar submitform = function submitform(url, data, token, returntype, methodtype) {\n  console.log(\"url \", url, 'check ', data instanceof FormData);\n\n  if (!$.isEmptyObject(token) && data instanceof FormData) {\n    checktoken(token); // validate token\n\n    $.ajax({\n      url: url,\n      type: methodtype,\n      headers: {\n        Authorization: \"Bearer \".concat(token)\n      },\n      dataType: returntype,\n      contentType: false,\n      data: data,\n      processData: false,\n      beforeSend: function beforeSend() {\n        //$(\"#log\").empty().html(\"<img src='./myresources/jetlogistics/images/btn-ajax-loader.gif'/> &nbsp; Signing In ...\");      \t\t       \n        console.log('inside ajax .......');\n      },\n      success: function success(response) {\n        console.log(response); //  localStorage.setItem(\"token\",response) ;\n        //  setTimeout(function() {\n        //       $(\".form-button\").empty().html(\"<img src='./dist/images/btn-ajax-loader.gif'/> &nbsp; Signing In ...please wait ....\");\n        //       window.location.href=\"../adminindex\" ;\n        //             },2000);\n\n        toastr.success(\"successfully uploaded/created\");\n      },\n      error: function error(err) {\n        console.log(err);\n        Swal.fire({\n          icon: 'error',\n          text: 'Operation Failed.'\n        });\n        throw new Error('Operation failed .');\n      },\n      complete: function complete() {// return ;\n      }\n    });\n    return;\n  } else if (!$.isEmptyObject(token) && data instanceof Object) {\n    checktoken(token); // validate token\n\n    $.ajax({\n      url: url,\n      type: methodtype,\n      headers: {\n        Authorization: \"Bearer \".concat(token)\n      },\n      dataType: returntype,\n      contentType: 'application/json',\n      data: JSON.stringify(data),\n      beforeSend: function beforeSend() {\n        //$(\"#log\").empty().html(\"<img src='./myresources/jetlogistics/images/btn-ajax-loader.gif'/> &nbsp; Signing In ...\");      \t\t       \n        console.log('inside ajax .......');\n      },\n      success: function success(response) {\n        console.log(response); //   var decoded = jwt_decode(response);\t \n        //   console.log(decoded,'exp ',decoded['exp'] , 'sub ',decoded.sub);\n        // localStorage.setItem(\"token\",response) ;\n        //    localStorage.setItem(\"userid\",decoded.sub) ;\n        // $(\".form-button\").empty().html(`<button id=\"login\">Login</button>`);\n        //  window.location.href=\"../adminindex\" ;\n        //  setTimeout(function() {\n        //       $(\".form-button\").empty().html(\"<img src='./dist/images/btn-ajax-loader.gif'/> &nbsp; Signing In ...please wait ....\");\n        //       window.location.href=\"../adminindex\" ;\n        //             },2000); \n\n        toastr.success(\"created/uploaded successfull ....\");\n      },\n      error: function error(err) {\n        console.log(err);\n        Swal.fire({\n          icon: 'error',\n          text: 'Operation Failed.'\n        });\n      }\n    });\n    return;\n  } //this one is if token is empty , it  can permit all \n\n\n  $.ajax({\n    url: url,\n    type: methodtype,\n    dataType: returntype,\n    contentType: 'application/json',\n    data: JSON.stringify(data),\n    beforeSend: function beforeSend() {\n      //$(\"#log\").empty().html(\"<img src='./myresources/jetlogistics/images/btn-ajax-loader.gif'/> &nbsp; Signing In ...\");      \t\t       \n      console.log('inside ajax .......');\n    },\n    success: function success(response) {\n      //alert('creating response ') ;\n      // console.log(response);\n      //   console.log(decoded,'exp ',decoded['exp'] , 'sub ',decoded.sub);\n      // console.log(\" response \", response);\n      // alert(response);\n      localStorage.setItem(\"token\", response); //   localStorage.setItem(\"userid\",decoded.sub) ;\n      // $(\".form-button\").empty().html(`<button id=\"login\">Login</button>`);\n      //  window.location.href=\"../adminindex\" ;\n\n      setTimeout(function () {\n        $(\".form-button\").empty().html(\"<img src='./dist/images/btn-ajax-loader.gif'/> &nbsp; Signing In ...please wait ....\");\n        console.log('redirecting ......');\n        window.location.href = \"../adminindex\";\n      }, 1500);\n    },\n    error: function error(err) {\n      console.log(err);\n      $(\"#error\").fadeIn(500, function (e) {\n        $(\"#error\").empty().html('<br/><div class=\"alert alert-danger\"> <span class=\"glyphicon glyphicon-info-sign\"></span> &nbsp; ' + 'wrong username/password' + ' !</div>');\n      });\n    }\n  });\n};\nvar formsubmit = function formsubmit(url, data, token, returntype, methodtype, successmsg, errormsg) {\n  //console.log('data stringify ',JSON.stringify(data),' data',data) ;\n  if (token) {\n    checktoken(token); // validate token\n\n    return $.ajax({\n      url: url,\n      type: methodtype,\n      headers: {\n        Authorization: \"Bearer \".concat(token)\n      },\n      dataType: returntype,\n      contentType: 'application/json',\n      data: JSON.stringify(data),\n      beforeSend: function beforeSend() {\n        //$(\"#log\").empty().html(\"<img src='./myresources/jetlogistics/images/btn-ajax-loader.gif'/> &nbsp; Signing In ...\");      \t\t       \n        console.log('inside ajax .......');\n      },\n      success: function success(response) {\n        console.log('response ', response);\n        successmsg();\n      },\n      error: function error(err) {\n        console.log('error ', err);\n\n        if (err.status === 400) {\n          errormsg('Please use a registered  email');\n          return;\n        }\n\n        errormsg();\n      }\n    });\n    return;\n  }\n\n  return $.ajax({\n    url: url,\n    type: methodtype,\n    dataType: returntype,\n    contentType: 'application/json',\n    data: JSON.stringify(data),\n    beforeSend: function beforeSend() {\n      //$(\"#log\").empty().html(\"<img src='./myresources/jetlogistics/images/btn-ajax-loader.gif'/> &nbsp; Signing In ...\");      \t\t       \n      console.log('inside ajax .......');\n    },\n    success: function success(response) {\n      successmsg();\n    },\n    error: function error(err) {\n      console.log('error ', err);\n      errormsg();\n    }\n  });\n};\nvar processrequest2 = /*#__PURE__*/function () {\n  var _ref = (0,_babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_0__.default)( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1___default().mark(function _callee(url, methodtype, headers, myfunc) {\n    var res, _res;\n\n    return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1___default().wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (!(methodtype === 'get')) {\n              _context.next = 4;\n              break;\n            }\n\n            _context.next = 3;\n            return fetch(url, {\n              method: methodtype,\n              credentials: 'same-origin',\n              headers: headers\n            }).then(function (response) {\n              if (response.status != 200) {\n                throw new Error(\"network access  error\");\n              }\n\n              return response.text();\n            }).then(function (r) {\n              // console.log('r in function ',r) ;\n              myfunc(r);\n            });\n\n          case 3:\n            res = _context.sent;\n\n          case 4:\n            if (!(methodtype === 'post' || methodtype === 'put' || methodtype === 'delete')) {\n              _context.next = 8;\n              break;\n            }\n\n            _context.next = 7;\n            return fetch(url, {\n              method: methodtype,\n              credentials: 'same-origin',\n              headers: headers\n            }).then(function (response) {\n              if (response.status != 200) {\n                throw new Error(\"network access  error\");\n              }\n\n              return response.json();\n            }).then(function (r) {\n              // console.log('r in function ',r) ;\n              myfunc(r);\n            });\n\n          case 7:\n            _res = _context.sent;\n\n          case 8:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function processrequest2(_x, _x2, _x3, _x4) {\n    return _ref.apply(this, arguments);\n  };\n}();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///11\n")},(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__)=>{"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "default": () => (/* binding */ _asyncToGenerator)\n/* harmony export */ });\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nfunction _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly93ZWJhcHAvLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vYXN5bmNUb0dlbmVyYXRvci5qcz8xZGExIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7O0FBRWU7QUFDZjtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxLQUFLO0FBQ0w7QUFDQSIsImZpbGUiOiIxMi5qcyIsInNvdXJjZXNDb250ZW50IjpbImZ1bmN0aW9uIGFzeW5jR2VuZXJhdG9yU3RlcChnZW4sIHJlc29sdmUsIHJlamVjdCwgX25leHQsIF90aHJvdywga2V5LCBhcmcpIHtcbiAgdHJ5IHtcbiAgICB2YXIgaW5mbyA9IGdlbltrZXldKGFyZyk7XG4gICAgdmFyIHZhbHVlID0gaW5mby52YWx1ZTtcbiAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICByZWplY3QoZXJyb3IpO1xuICAgIHJldHVybjtcbiAgfVxuXG4gIGlmIChpbmZvLmRvbmUpIHtcbiAgICByZXNvbHZlKHZhbHVlKTtcbiAgfSBlbHNlIHtcbiAgICBQcm9taXNlLnJlc29sdmUodmFsdWUpLnRoZW4oX25leHQsIF90aHJvdyk7XG4gIH1cbn1cblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gX2FzeW5jVG9HZW5lcmF0b3IoZm4pIHtcbiAgcmV0dXJuIGZ1bmN0aW9uICgpIHtcbiAgICB2YXIgc2VsZiA9IHRoaXMsXG4gICAgICAgIGFyZ3MgPSBhcmd1bWVudHM7XG4gICAgcmV0dXJuIG5ldyBQcm9taXNlKGZ1bmN0aW9uIChyZXNvbHZlLCByZWplY3QpIHtcbiAgICAgIHZhciBnZW4gPSBmbi5hcHBseShzZWxmLCBhcmdzKTtcblxuICAgICAgZnVuY3Rpb24gX25leHQodmFsdWUpIHtcbiAgICAgICAgYXN5bmNHZW5lcmF0b3JTdGVwKGdlbiwgcmVzb2x2ZSwgcmVqZWN0LCBfbmV4dCwgX3Rocm93LCBcIm5leHRcIiwgdmFsdWUpO1xuICAgICAgfVxuXG4gICAgICBmdW5jdGlvbiBfdGhyb3coZXJyKSB7XG4gICAgICAgIGFzeW5jR2VuZXJhdG9yU3RlcChnZW4sIHJlc29sdmUsIHJlamVjdCwgX25leHQsIF90aHJvdywgXCJ0aHJvd1wiLCBlcnIpO1xuICAgICAgfVxuXG4gICAgICBfbmV4dCh1bmRlZmluZWQpO1xuICAgIH0pO1xuICB9O1xufSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///12\n')},(module,__unused_webpack_exports,__webpack_require__)=>{eval("module.exports = __webpack_require__(14);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly93ZWJhcHAvLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvcmVnZW5lcmF0b3IvaW5kZXguanM/YTM0YSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSx3Q0FBK0MiLCJmaWxlIjoiMTMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoXCJyZWdlbmVyYXRvci1ydW50aW1lXCIpO1xuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///13\n")},module=>{eval('/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  "use strict";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === "function" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || "@@iterator";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || "@@asyncIterator";\n  var toStringTagSymbol = $Symbol.toStringTag || "@@toStringTag";\n\n  function define(obj, key, value) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n    return obj[key];\n  }\n  try {\n    // IE 8 has a broken Object.defineProperty that only works on DOM objects.\n    define({}, "");\n  } catch (err) {\n    define = function(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there\'s no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don\'t have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: "normal", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: "throw", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = "suspendedStart";\n  var GenStateSuspendedYield = "suspendedYield";\n  var GenStateExecuting = "executing";\n  var GenStateCompleted = "completed";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don\'t natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunction.displayName = define(\n    GeneratorFunctionPrototype,\n    toStringTagSymbol,\n    "GeneratorFunction"\n  );\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    ["next", "throw", "return"].forEach(function(method) {\n      define(prototype, method, function(arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === "function" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === "GeneratorFunction"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      define(genFun, toStringTagSymbol, "GeneratorFunction");\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, "__await")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === "throw") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === "object" &&\n            hasOwn.call(value, "__await")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke("next", value, resolve, reject);\n          }, function(err) {\n            invoke("throw", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke("throw", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error("Generator is already running");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === "throw") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === "next") {\n          // Setting context._sent for legacy support of Babel\'s\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === "throw") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === "return") {\n          context.abrupt("return", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === "normal") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === "throw") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = "throw";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === "throw") {\n        // Note: ["return"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator["return"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = "return";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === "throw") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // "return" to "throw", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = "throw";\n        context.arg = new TypeError(\n          "The iterator does not provide a \'throw\' method");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === "throw") {\n      context.method = "throw";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = "throw";\n      context.arg = new TypeError("iterator result is not an object");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was "throw" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was "next", forget context.arg since it has been\n      // "consumed" by the delegate iterator. If context.method was\n      // "return", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== "return") {\n        context.method = "next";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  define(Gp, toStringTagSymbol, "Generator");\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers\' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn\'t happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return "[object Generator]";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = "normal";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: "root" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === "function") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel\'s\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = "next";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === "t" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === "throw") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = "throw";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = "next";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === "root") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle("end");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, "catchLoc");\n          var hasFinally = hasOwn.call(entry, "finallyLoc");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error("try statement without catch or finally");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, "finallyLoc") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === "break" ||\n           type === "continue") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = "next";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === "throw") {\n        throw record.arg;\n      }\n\n      if (record.type === "break" ||\n          record.type === "continue") {\n        this.next = record.arg;\n      } else if (record.type === "return") {\n        this.rval = this.arg = record.arg;\n        this.method = "return";\n        this.next = "end";\n      } else if (record.type === "normal" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    "catch": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === "throw") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error("illegal catch attempt");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === "next") {\n        // Deliberately forget the last sent value so that we don\'t\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n   true ? module.exports : 0\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you\'ve misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you\'re not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  Function("r", "regeneratorRuntime = r")(runtime);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///14\n')},(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"invalidatetoken2\": () => (/* binding */ invalidatetoken2),\n/* harmony export */   \"invalidatetoken\": () => (/* binding */ invalidatetoken),\n/* harmony export */   \"redirectiftokenisnull\": () => (/* binding */ redirectiftokenisnull)\n/* harmony export */ });\nvar invalidatetoken = function invalidatetoken(exp) {\n  var now = Date.now().valueOf() / 1000;\n  console.log('validating token ....');\n\n  if (typeof exp !== 'undefined' && exp < now) {\n    localStorage.removeItem(\"token\");\n    localStorage.removeItem('userid');\n    console.log('after removing token');\n    window.location.href = \"../adminlogin\";\n    throw new Error(\"token expired\");\n  }\n\n  console.log('token valid ');\n  return;\n}; // for frontend \n\n\nvar invalidatetoken2 = function invalidatetoken2(jwt_decode, token) {\n  // alert('review');\n  if (!localStorage.getItem(token)) {\n    //if not login\n    toastr.error('Please login before you submit review');\n    return;\n  }\n\n  var decoded = jwt_decode(localStorage.getItem(token)); // alert('review2');\n\n  var exp = parseInt(decoded.exp);\n  var now = Date.now().valueOf() / 1000;\n  console.log('validating token ....');\n\n  if (typeof exp !== 'undefined' && exp < now) {\n    localStorage.removeItem(token); // localStorage.removeItem('userid');\n    // window.location.href=\"../jetcart/index\" ;\n\n    toastr.error('Please login before you submit review');\n    console.log('after removing token');\n    throw new Error(\"token expired\");\n  }\n\n  console.log('token valid ');\n  return;\n};\n\nvar redirectiftokenisnull = function redirectiftokenisnull(token) {\n  if (token === null) {\n    window.location.href = \"../adminlogin\";\n  }\n};\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly93ZWJhcHAvLi90c19zY3JpcHRzL21pc2NlbGxhbmVvdXMudHM/NmQ1YiJdLCJuYW1lcyI6WyJpbnZhbGlkYXRldG9rZW4iLCJleHAiLCJub3ciLCJEYXRlIiwidmFsdWVPZiIsImNvbnNvbGUiLCJsb2ciLCJsb2NhbFN0b3JhZ2UiLCJyZW1vdmVJdGVtIiwid2luZG93IiwibG9jYXRpb24iLCJocmVmIiwiRXJyb3IiLCJpbnZhbGlkYXRldG9rZW4yIiwiand0X2RlY29kZSIsInRva2VuIiwiZ2V0SXRlbSIsInRvYXN0ciIsImVycm9yIiwiZGVjb2RlZCIsInBhcnNlSW50IiwicmVkaXJlY3RpZnRva2VuaXNudWxsIl0sIm1hcHBpbmdzIjoiOzs7Ozs7QUFDQyxJQUFNQSxlQUFlLEdBQUcsU0FBbEJBLGVBQWtCLENBQUNDLEdBQUQsRUFBb0I7QUFDekMsTUFBTUMsR0FBRyxHQUFHQyxJQUFJLENBQUNELEdBQUwsR0FBV0UsT0FBWCxLQUF1QixJQUFuQztBQUNBQyxTQUFPLENBQUNDLEdBQVIsQ0FBWSx1QkFBWjs7QUFDQSxNQUFJLE9BQU9MLEdBQVAsS0FBZSxXQUFmLElBQThCQSxHQUFHLEdBQUdDLEdBQXhDLEVBQTZDO0FBQzNDSyxnQkFBWSxDQUFDQyxVQUFiLENBQXdCLE9BQXhCO0FBQ0FELGdCQUFZLENBQUNDLFVBQWIsQ0FBd0IsUUFBeEI7QUFDQUgsV0FBTyxDQUFDQyxHQUFSLENBQVksc0JBQVo7QUFDQUcsVUFBTSxDQUFDQyxRQUFQLENBQWdCQyxJQUFoQixHQUFxQixlQUFyQjtBQUNBLFVBQU0sSUFBSUMsS0FBSixpQkFBTjtBQUNEOztBQUNGUCxTQUFPLENBQUNDLEdBQVIsQ0FBWSxjQUFaO0FBQ0Y7QUFDQSxDQVpBLEMsQ0FhRDs7O0FBQ08sSUFBTU8sZ0JBQWdCLEdBQUcsU0FBbkJBLGdCQUFtQixDQUFDQyxVQUFELEVBQWdCQyxLQUFoQixFQUFxQztBQUNwRTtBQUNFLE1BQUcsQ0FBQ1IsWUFBWSxDQUFDUyxPQUFiLENBQXFCRCxLQUFyQixDQUFKLEVBQWdDO0FBQUU7QUFDakNFLFVBQU0sQ0FBQ0MsS0FBUCxDQUFhLHVDQUFiO0FBQ0E7QUFDQTs7QUFDRCxNQUFJQyxPQUFPLEdBQUdMLFVBQVUsQ0FBQ1AsWUFBWSxDQUFDUyxPQUFiLENBQXFCRCxLQUFyQixDQUFELENBQXhCLENBTmtFLENBT25FOztBQUNDLE1BQU1kLEdBQUcsR0FBR21CLFFBQVEsQ0FBQ0QsT0FBTyxDQUFDbEIsR0FBVCxDQUFwQjtBQUNBLE1BQU1DLEdBQUcsR0FBR0MsSUFBSSxDQUFDRCxHQUFMLEdBQVdFLE9BQVgsS0FBdUIsSUFBbkM7QUFDQUMsU0FBTyxDQUFDQyxHQUFSLENBQVksdUJBQVo7O0FBQ0EsTUFBSSxPQUFPTCxHQUFQLEtBQWUsV0FBZixJQUE4QkEsR0FBRyxHQUFHQyxHQUF4QyxFQUE2QztBQUMzQ0ssZ0JBQVksQ0FBQ0MsVUFBYixDQUF3Qk8sS0FBeEIsRUFEMkMsQ0FFNUM7QUFDQTs7QUFDRUUsVUFBTSxDQUFDQyxLQUFQLENBQWEsdUNBQWI7QUFDRGIsV0FBTyxDQUFDQyxHQUFSLENBQVksc0JBQVo7QUFDQSxVQUFNLElBQUlNLEtBQUosaUJBQU47QUFDRDs7QUFDRlAsU0FBTyxDQUFDQyxHQUFSLENBQVksY0FBWjtBQUNGO0FBQ0MsQ0FyQk07O0FBc0JQLElBQU1lLHFCQUFxQixHQUFJLFNBQXpCQSxxQkFBeUIsQ0FBQ04sS0FBRCxFQUFxQjtBQUNoRCxNQUFHQSxLQUFLLEtBQUssSUFBYixFQUFrQjtBQUNsQk4sVUFBTSxDQUFDQyxRQUFQLENBQWdCQyxJQUFoQixHQUFxQixlQUFyQjtBQUNJO0FBQ1AsQ0FKRCIsImZpbGUiOiIxNS5qcyIsInNvdXJjZXNDb250ZW50IjpbImRlY2xhcmUgdmFyIHRvYXN0cjogYW55O1xyXG4gY29uc3QgaW52YWxpZGF0ZXRva2VuID0gKGV4cDpudW1iZXIpOnZvaWQgPT57XHJcbiAgICBjb25zdCBub3cgPSBEYXRlLm5vdygpLnZhbHVlT2YoKSAvIDEwMDBcclxuICAgIGNvbnNvbGUubG9nKCd2YWxpZGF0aW5nIHRva2VuIC4uLi4nKSA7XHJcbiAgICBpZiAodHlwZW9mIGV4cCAhPT0gJ3VuZGVmaW5lZCcgJiYgZXhwIDwgbm93KSB7XHJcbiAgICAgIGxvY2FsU3RvcmFnZS5yZW1vdmVJdGVtKFwidG9rZW5cIik7XHJcbiAgICAgIGxvY2FsU3RvcmFnZS5yZW1vdmVJdGVtKCd1c2VyaWQnKTtcclxuICAgICAgY29uc29sZS5sb2coJ2FmdGVyIHJlbW92aW5nIHRva2VuJyk7XHJcbiAgICAgIHdpbmRvdy5sb2NhdGlvbi5ocmVmPVwiLi4vYWRtaW5sb2dpblwiIDsgIFxyXG4gICAgICB0aHJvdyBuZXcgRXJyb3IoYHRva2VuIGV4cGlyZWRgKVxyXG4gICAgfVxyXG4gICBjb25zb2xlLmxvZygndG9rZW4gdmFsaWQgJykgO1xyXG4gcmV0dXJuIDsgIFxyXG59O1xyXG4vLyBmb3IgZnJvbnRlbmQgXHJcbmV4cG9ydCBjb25zdCBpbnZhbGlkYXRldG9rZW4yID0gKGp3dF9kZWNvZGU6YW55LHRva2VuOnN0cmluZyk6dm9pZCA9PntcclxuIC8vIGFsZXJ0KCdyZXZpZXcnKTtcclxuICAgaWYoIWxvY2FsU3RvcmFnZS5nZXRJdGVtKHRva2VuKSl7IC8vaWYgbm90IGxvZ2luXHJcbiAgICB0b2FzdHIuZXJyb3IoJ1BsZWFzZSBsb2dpbiBiZWZvcmUgeW91IHN1Ym1pdCByZXZpZXcnKSA7XHJcbiAgICByZXR1cm4gO1xyXG4gICB9XHJcbiAgIHZhciBkZWNvZGVkID0gand0X2RlY29kZShsb2NhbFN0b3JhZ2UuZ2V0SXRlbSh0b2tlbikpO1xyXG4gIC8vIGFsZXJ0KCdyZXZpZXcyJyk7XHJcbiAgIGNvbnN0IGV4cCA9IHBhcnNlSW50KGRlY29kZWQuZXhwKTtcclxuICAgY29uc3Qgbm93ID0gRGF0ZS5ub3coKS52YWx1ZU9mKCkgLyAxMDAwXHJcbiAgIGNvbnNvbGUubG9nKCd2YWxpZGF0aW5nIHRva2VuIC4uLi4nKSA7XHJcbiAgIGlmICh0eXBlb2YgZXhwICE9PSAndW5kZWZpbmVkJyAmJiBleHAgPCBub3cpIHtcclxuICAgICBsb2NhbFN0b3JhZ2UucmVtb3ZlSXRlbSh0b2tlbik7XHJcbiAgICAvLyBsb2NhbFN0b3JhZ2UucmVtb3ZlSXRlbSgndXNlcmlkJyk7XHJcbiAgICAvLyB3aW5kb3cubG9jYXRpb24uaHJlZj1cIi4uL2pldGNhcnQvaW5kZXhcIiA7XHJcbiAgICAgIHRvYXN0ci5lcnJvcignUGxlYXNlIGxvZ2luIGJlZm9yZSB5b3Ugc3VibWl0IHJldmlldycpIDtcclxuICAgICBjb25zb2xlLmxvZygnYWZ0ZXIgcmVtb3ZpbmcgdG9rZW4nKTtcclxuICAgICB0aHJvdyBuZXcgRXJyb3IoYHRva2VuIGV4cGlyZWRgKVxyXG4gICB9XHJcbiAgY29uc29sZS5sb2coJ3Rva2VuIHZhbGlkICcpIDtcclxucmV0dXJuIDsgIFxyXG59O1xyXG5jb25zdCByZWRpcmVjdGlmdG9rZW5pc251bGwgID0gKHRva2VuOnN0cmluZ3xudWxsKT0+e1xyXG4gICAgaWYodG9rZW4gPT09IG51bGwpe1xyXG4gICAgd2luZG93LmxvY2F0aW9uLmhyZWY9XCIuLi9hZG1pbmxvZ2luXCI7XHJcbiAgICAgICB9XHJcbn07XHJcbmV4cG9ydCBpbnRlcmZhY2UganNvbnJlc3VsdHtcclxuICAgZmlyc3RuYW1lOnN0cmluZyxcclxuICAgbGFzdG5hbWU6c3RyaW5nLFxyXG4gICAgY2l0eTpzdHJpbmcsXHJcbiAgICBhZGRyZXNzOnN0cmluZyxcclxuICAgIHByb2ZpbGVwaWN0dXJlOnN0cmluZ1xyXG4gfVxyXG5leHBvcnQge2ludmFsaWRhdGV0b2tlbixyZWRpcmVjdGlmdG9rZW5pc251bGx9IDtcclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///15\n")},(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "backendurl": () => (/* binding */ backendurl),\n/* harmony export */   "loginurl": () => (/* binding */ loginurl),\n/* harmony export */   "theprotocol": () => (/* binding */ theprotocol)\n/* harmony export */ });\n//export const backendurl="http://localhost:1022" ;\nvar backendurl = "https://cristabackend.herokuapp.com"; //export const backendurl  = "https://jetestore.herokuapp.com" ;\n//export const loginurl  = "http://localhost:1021" ;\n\nvar loginurl = "https://jetecommerce.herokuapp.com";\nvar theprotocol = \'http://\'; //export const loginurl  =  "https://jeteshop.herokuapp.com" ;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly93ZWJhcHAvLi90c19zY3JpcHRzL3VybC50cz84NjAyIl0sIm5hbWVzIjpbImJhY2tlbmR1cmwiLCJsb2dpbnVybCIsInRoZXByb3RvY29sIl0sIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQTtBQUNPLElBQU1BLFVBQVUsR0FBQyxxQ0FBakIsQyxDQUNQO0FBQ0E7O0FBQ08sSUFBTUMsUUFBUSxHQUFJLG9DQUFsQjtBQUNBLElBQU1DLFdBQVcsR0FBSSxTQUFyQixDLENBQ1AiLCJmaWxlIjoiMTYuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvL2V4cG9ydCBjb25zdCBiYWNrZW5kdXJsPVwiaHR0cDovL2xvY2FsaG9zdDoxMDIyXCIgO1xyXG5leHBvcnQgY29uc3QgYmFja2VuZHVybD1cImh0dHBzOi8vY3Jpc3RhYmFja2VuZC5oZXJva3VhcHAuY29tXCIgO1xyXG4vL2V4cG9ydCBjb25zdCBiYWNrZW5kdXJsICA9IFwiaHR0cHM6Ly9qZXRlc3RvcmUuaGVyb2t1YXBwLmNvbVwiIDtcclxuLy9leHBvcnQgY29uc3QgbG9naW51cmwgID0gXCJodHRwOi8vbG9jYWxob3N0OjEwMjFcIiA7XHJcbmV4cG9ydCBjb25zdCBsb2dpbnVybCAgPSBcImh0dHBzOi8vamV0ZWNvbW1lcmNlLmhlcm9rdWFwcC5jb21cIlxyXG5leHBvcnQgY29uc3QgdGhlcHJvdG9jb2wgID0gJ2h0dHA6Ly8nIDtcclxuLy9leHBvcnQgY29uc3QgbG9naW51cmwgID0gIFwiaHR0cHM6Ly9qZXRlc2hvcC5oZXJva3VhcHAuY29tXCIgO1xyXG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///16\n')},(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "dialog": () => (/* binding */ dialog)\n/* harmony export */ });\nvar dialog = function dialog(form, header, footer) {\n  return "\\n   <div class=\\"modal fade\\" id=\\"exampleModal\\" tabindex=\\"-1\\" role=\\"dialog\\" data-backdrop=\\"static\\" aria-labelledby=\\"exampleModalLabel\\" aria-hidden=\\"true\\">\\n   <div class=\\"modal-dialog\\" role=\\"document\\">\\n       <div class=\\"modal-content\\">\\n           <div class=\\"modal-header\\">\\n             ".concat(header, " \\n           </div>\\n           <div class=\\"modal-body\\">\\n             <div id=\\"error\\"></div>\\n              ").concat(form, "\\n           </div>\\n           <div class=\\"modal-footer\\">\\n                ").concat(footer, "\\n               <button class=\\"btn btn-secondary\\" type=\\"button\\" data-dismiss=\\"modal\\">Close</button>\\n           </div>\\n       </div>\\n   </div>\\n</div>\\n   ");\n}; // <form class="needs-validation">\n// <div class="form">\n//     <div class="form-group">\n//         <label for="validationCustom01" class="mb-1">Category Name :</label>\n//         <input class="form-control" id="validationCustom01" type="text">\n//     </div>\n//     <div class="form-group mb-0">\n//         <label for="validationCustom02" class="mb-1">Category Image :</label>\n//         <input class="form-control" id="validationCustom02" type="file">\n//     </div>\n// </div>\n// </form>\n//header \n// <h5 class="modal-title f-w-600" id="exampleModalLabel">Add Physical Product</h5>\n// <button class="close" type="button" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">Ã</span></button>\n// <button class="btn btn-primary" type="button">Save</button>//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly93ZWJhcHAvLi90c19zY3JpcHRzL2xpdGh0bWxzY3JpcHQudHM/YjQzNSJdLCJuYW1lcyI6WyJkaWFsb2ciLCJmb3JtIiwiaGVhZGVyIiwiZm9vdGVyIl0sIm1hcHBpbmdzIjoiOzs7O0FBQU8sSUFBTUEsTUFBTSxHQUFJLFNBQVZBLE1BQVUsQ0FBQ0MsSUFBRCxFQUFVQyxNQUFWLEVBQXFCQyxNQUFyQixFQUFrQztBQUN0RCwyVUFLWUQsTUFMWiwrSEFTYUQsSUFUYiwyRkFZZUUsTUFaZjtBQW1CRixDQXBCTSxDLENBcUJQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUVBIiwiZmlsZSI6IjE3LmpzIiwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGNvbnN0IGRpYWxvZyAgPSAoZm9ybTphbnksaGVhZGVyOmFueSxmb290ZXI6YW55KT0+e1xyXG4gICByZXR1cm4gYFxyXG4gICA8ZGl2IGNsYXNzPVwibW9kYWwgZmFkZVwiIGlkPVwiZXhhbXBsZU1vZGFsXCIgdGFiaW5kZXg9XCItMVwiIHJvbGU9XCJkaWFsb2dcIiBkYXRhLWJhY2tkcm9wPVwic3RhdGljXCIgYXJpYS1sYWJlbGxlZGJ5PVwiZXhhbXBsZU1vZGFsTGFiZWxcIiBhcmlhLWhpZGRlbj1cInRydWVcIj5cclxuICAgPGRpdiBjbGFzcz1cIm1vZGFsLWRpYWxvZ1wiIHJvbGU9XCJkb2N1bWVudFwiPlxyXG4gICAgICAgPGRpdiBjbGFzcz1cIm1vZGFsLWNvbnRlbnRcIj5cclxuICAgICAgICAgICA8ZGl2IGNsYXNzPVwibW9kYWwtaGVhZGVyXCI+XHJcbiAgICAgICAgICAgICAke2hlYWRlcn0gXHJcbiAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgPGRpdiBjbGFzcz1cIm1vZGFsLWJvZHlcIj5cclxuICAgICAgICAgICAgIDxkaXYgaWQ9XCJlcnJvclwiPjwvZGl2PlxyXG4gICAgICAgICAgICAgICR7Zm9ybX1cclxuICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICA8ZGl2IGNsYXNzPVwibW9kYWwtZm9vdGVyXCI+XHJcbiAgICAgICAgICAgICAgICAke2Zvb3Rlcn1cclxuICAgICAgICAgICAgICAgPGJ1dHRvbiBjbGFzcz1cImJ0biBidG4tc2Vjb25kYXJ5XCIgdHlwZT1cImJ1dHRvblwiIGRhdGEtZGlzbWlzcz1cIm1vZGFsXCI+Q2xvc2U8L2J1dHRvbj5cclxuICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgIDwvZGl2PlxyXG4gICA8L2Rpdj5cclxuPC9kaXY+XHJcbiAgIGBcclxufVxyXG4vLyA8Zm9ybSBjbGFzcz1cIm5lZWRzLXZhbGlkYXRpb25cIj5cclxuLy8gPGRpdiBjbGFzcz1cImZvcm1cIj5cclxuLy8gICAgIDxkaXYgY2xhc3M9XCJmb3JtLWdyb3VwXCI+XHJcbi8vICAgICAgICAgPGxhYmVsIGZvcj1cInZhbGlkYXRpb25DdXN0b20wMVwiIGNsYXNzPVwibWItMVwiPkNhdGVnb3J5IE5hbWUgOjwvbGFiZWw+XHJcbi8vICAgICAgICAgPGlucHV0IGNsYXNzPVwiZm9ybS1jb250cm9sXCIgaWQ9XCJ2YWxpZGF0aW9uQ3VzdG9tMDFcIiB0eXBlPVwidGV4dFwiPlxyXG4vLyAgICAgPC9kaXY+XHJcbi8vICAgICA8ZGl2IGNsYXNzPVwiZm9ybS1ncm91cCBtYi0wXCI+XHJcbi8vICAgICAgICAgPGxhYmVsIGZvcj1cInZhbGlkYXRpb25DdXN0b20wMlwiIGNsYXNzPVwibWItMVwiPkNhdGVnb3J5IEltYWdlIDo8L2xhYmVsPlxyXG4vLyAgICAgICAgIDxpbnB1dCBjbGFzcz1cImZvcm0tY29udHJvbFwiIGlkPVwidmFsaWRhdGlvbkN1c3RvbTAyXCIgdHlwZT1cImZpbGVcIj5cclxuLy8gICAgIDwvZGl2PlxyXG4vLyA8L2Rpdj5cclxuLy8gPC9mb3JtPlxyXG5cclxuLy9oZWFkZXIgXHJcbi8vIDxoNSBjbGFzcz1cIm1vZGFsLXRpdGxlIGYtdy02MDBcIiBpZD1cImV4YW1wbGVNb2RhbExhYmVsXCI+QWRkIFBoeXNpY2FsIFByb2R1Y3Q8L2g1PlxyXG4vLyA8YnV0dG9uIGNsYXNzPVwiY2xvc2VcIiB0eXBlPVwiYnV0dG9uXCIgZGF0YS1kaXNtaXNzPVwibW9kYWxcIiBhcmlhLWxhYmVsPVwiQ2xvc2VcIj48c3BhbiBhcmlhLWhpZGRlbj1cInRydWVcIj7Dg8KXPC9zcGFuPjwvYnV0dG9uPlxyXG5cclxuLy8gPGJ1dHRvbiBjbGFzcz1cImJ0biBidG4tcHJpbWFyeVwiIHR5cGU9XCJidXR0b25cIj5TYXZlPC9idXR0b24+Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///17\n')},(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "register": () => (/* binding */ register)\n/* harmony export */ });\n/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(9);\n/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(10);\n/* harmony import */ var _tsbackendscript_ajaxfunctioncall__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(11);\n/* harmony import */ var _url__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(16);\n\n\n\n\nvar register = /*#__PURE__*/function () {\n  function register() {\n    (0,_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__.default)(this, register);\n  }\n\n  (0,_babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__.default)(register, [{\n    key: "register",\n    value: function register(data, successmg, errormsg) {\n      //submitform(`${loginurl}/register`,data,"",\'text\',\'post\'); //send form\n      (0,_tsbackendscript_ajaxfunctioncall__WEBPACK_IMPORTED_MODULE_2__.formsubmit)("".concat(_url__WEBPACK_IMPORTED_MODULE_3__.backendurl, "/register"), data, null, \'text\', \'post\', successmg, errormsg);\n    }\n  }]);\n\n  return register;\n}();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly93ZWJhcHAvLi90c19zY3JpcHRzL3JlZ2lzdGVyLnRzPzhjZTciXSwibmFtZXMiOlsicmVnaXN0ZXIiLCJkYXRhIiwic3VjY2Vzc21nIiwiZXJyb3Jtc2ciLCJmb3Jtc3VibWl0IiwiYmFja2VuZHVybCJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7OztBQUFBO0FBQ0E7QUFFTyxJQUFNQSxRQUFiO0FBQ0ksc0JBQWE7QUFBQTtBQUNaOztBQUZMO0FBQUE7QUFBQSxXQUdJLGtCQUFTQyxJQUFULEVBQXFCQyxTQUFyQixFQUFtQ0MsUUFBbkMsRUFBZ0Q7QUFDbkQ7QUFDSUMsbUZBQVUsV0FBSUMsNENBQUosZ0JBQTBCSixJQUExQixFQUErQixJQUEvQixFQUFvQyxNQUFwQyxFQUEyQyxNQUEzQyxFQUFrREMsU0FBbEQsRUFBNERDLFFBQTVELENBQVY7QUFDQTtBQU5MOztBQUFBO0FBQUEiLCJmaWxlIjoiMTguanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge3N1Ym1pdGZvcm0sZm9ybXN1Ym1pdH0gZnJvbSBcIi4vdHNiYWNrZW5kc2NyaXB0L2FqYXhmdW5jdGlvbmNhbGxcIiA7XHJcbmltcG9ydCB7YmFja2VuZHVybCxsb2dpbnVybH0gZnJvbSBcIi4vdXJsXCIgO1xyXG5kZWNsYXJlIHZhciBTd2FsOiBhbnk7XHJcbmV4cG9ydCBjbGFzcyByZWdpc3RlcntcclxuICAgIGNvbnN0cnVjdG9yKCl7XHJcbiAgICB9XHJcbiAgICByZWdpc3RlcihkYXRhOk9iamVjdCxzdWNjZXNzbWc6YW55LGVycm9ybXNnOmFueSl7XHJcbiAvL3N1Ym1pdGZvcm0oYCR7bG9naW51cmx9L3JlZ2lzdGVyYCxkYXRhLFwiXCIsJ3RleHQnLCdwb3N0Jyk7IC8vc2VuZCBmb3JtXHJcbiAgICAgZm9ybXN1Ym1pdChgJHtiYWNrZW5kdXJsfS9yZWdpc3RlcmAsZGF0YSxudWxsLCd0ZXh0JywncG9zdCcsc3VjY2Vzc21nLGVycm9ybXNnKTtcclxuICAgIH1cclxufSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///18\n')},(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"User\": () => (/* binding */ User)\n/* harmony export */ });\n/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(9);\n/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(10);\n/* harmony import */ var _tsbackendscript_ajaxfunctioncall__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(11);\n/* harmony import */ var _url__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(16);\n\n\n\n\nvar User = /*#__PURE__*/function () {\n  function User() {\n    (0,_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__.default)(this, User);\n  }\n\n  (0,_babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__.default)(User, [{\n    key: \"save\",\n    value: function save(userform, token, methodtype, successmsg, errormsg) {\n      //const token  = localStorage.getItem('token');\n      if (methodtype === 'put') {\n        console.log('form put ', userform); // return ;\n\n        (0,_tsbackendscript_ajaxfunctioncall__WEBPACK_IMPORTED_MODULE_2__.formsubmit)(\"\".concat(_url__WEBPACK_IMPORTED_MODULE_3__.backendurl, \"/update\"), userform, token, 'text', methodtype, successmsg, errormsg); //send form\n      } //   if(methodtype === 'put' && token===null){\n      //   console.log('form put without token ',userform);\n      //   return ;\n      // formsubmit(`${backendurl}/user`,userform,null,'json',methodtype,successmsg,errormsg); //send form\n      //   }\n\n    }\n  }]);\n\n  return User;\n}();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly93ZWJhcHAvLi90c19zY3JpcHRzL3VzZXIudHM/NzhjYiJdLCJuYW1lcyI6WyJVc2VyIiwidXNlcmZvcm0iLCJ0b2tlbiIsIm1ldGhvZHR5cGUiLCJzdWNjZXNzbXNnIiwiZXJyb3Jtc2ciLCJjb25zb2xlIiwibG9nIiwiZm9ybXN1Ym1pdCIsImJhY2tlbmR1cmwiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7QUFBQTtBQUNBO0FBQ08sSUFBTUEsSUFBYjtBQUFBO0FBQUE7QUFBQTs7QUFBQTtBQUFBO0FBQUEsV0FDSSxjQUFLQyxRQUFMLEVBQXFCQyxLQUFyQixFQUF1Q0MsVUFBdkMsRUFBeURDLFVBQXpELEVBQXdFQyxRQUF4RSxFQUFxRjtBQUNsRjtBQUNBLFVBQUdGLFVBQVUsS0FBSyxLQUFsQixFQUF3QjtBQUN2QkcsZUFBTyxDQUFDQyxHQUFSLENBQVksV0FBWixFQUF3Qk4sUUFBeEIsRUFEdUIsQ0FFeEI7O0FBQ0NPLHFGQUFVLFdBQUlDLDRDQUFKLGNBQXdCUixRQUF4QixFQUFpQ0MsS0FBakMsRUFBdUMsTUFBdkMsRUFBOENDLFVBQTlDLEVBQXlEQyxVQUF6RCxFQUFvRUMsUUFBcEUsQ0FBVixDQUh1QixDQUdpRTtBQUN4RixPQU5pRixDQU9yRjtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUNDO0FBYkw7O0FBQUE7QUFBQSIsImZpbGUiOiIxOS5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7Zm9ybXN1Ym1pdH0gZnJvbSBcIi4vdHNiYWNrZW5kc2NyaXB0L2FqYXhmdW5jdGlvbmNhbGxcIiA7XHJcbmltcG9ydCB7YmFja2VuZHVybCxsb2dpbnVybH0gZnJvbSBcIi4vdXJsXCIgO1xyXG5leHBvcnQgY2xhc3MgVXNlcntcclxuICAgIHNhdmUodXNlcmZvcm06T2JqZWN0LHRva2VuOnN0cmluZ3xudWxsLG1ldGhvZHR5cGU6c3RyaW5nLHN1Y2Nlc3Ntc2c6YW55LGVycm9ybXNnOmFueSl7XHJcbiAgICAgICAvL2NvbnN0IHRva2VuICA9IGxvY2FsU3RvcmFnZS5nZXRJdGVtKCd0b2tlbicpO1xyXG4gICAgICAgaWYobWV0aG9kdHlwZSA9PT0gJ3B1dCcpe1xyXG4gICAgICAgIGNvbnNvbGUubG9nKCdmb3JtIHB1dCAnLHVzZXJmb3JtKTtcclxuICAgICAgIC8vIHJldHVybiA7XHJcbiAgICAgICAgZm9ybXN1Ym1pdChgJHtiYWNrZW5kdXJsfS91cGRhdGVgLHVzZXJmb3JtLHRva2VuLCd0ZXh0JyxtZXRob2R0eXBlLHN1Y2Nlc3Ntc2csZXJyb3Jtc2cpOy8vc2VuZCBmb3JtXHJcbiAgICAgICB9XHJcbiAgICAvLyAgIGlmKG1ldGhvZHR5cGUgPT09ICdwdXQnICYmIHRva2VuPT09bnVsbCl7XHJcbiAgICAvLyAgIGNvbnNvbGUubG9nKCdmb3JtIHB1dCB3aXRob3V0IHRva2VuICcsdXNlcmZvcm0pO1xyXG4gICAgLy8gICByZXR1cm4gO1xyXG4gICAgLy8gZm9ybXN1Ym1pdChgJHtiYWNrZW5kdXJsfS91c2VyYCx1c2VyZm9ybSxudWxsLCdqc29uJyxtZXRob2R0eXBlLHN1Y2Nlc3Ntc2csZXJyb3Jtc2cpOyAvL3NlbmQgZm9ybVxyXG4gICAgLy8gICB9XHJcbiAgICB9XHJcbn1cclxuZXhwb3J0IHt9XHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///19\n")},(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"product\": () => (/* binding */ product)\n/* harmony export */ });\n/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(9);\n/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(10);\n/* harmony import */ var _tsbackendscript_ajaxfunctioncall__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(11);\n/* harmony import */ var _url__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(16);\n\n\n\n\nvar product = /*#__PURE__*/function () {\n  function product() {\n    (0,_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__.default)(this, product);\n  }\n\n  (0,_babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__.default)(product, [{\n    key: \"saveproduct\",\n    value: function saveproduct(_product) {\n      //  const productform:any  =  document.getElementById(\"add-product-form\") ;\n      if (_product instanceof FormData) {\n        // const form  = new  FormData(product) ;\n        console.log('in formdata if ', 'productname ', 'prddescription', _product.get('description'));\n\n        var _token = localStorage.getItem('token');\n\n        (0,_tsbackendscript_ajaxfunctioncall__WEBPACK_IMPORTED_MODULE_2__.submitform)(\"\".concat(_url__WEBPACK_IMPORTED_MODULE_3__.backendurl, \"/product/create\"), _product, _token, 'text', 'post'); //send form\n\n        return;\n      }\n\n      var form = new FormData(_product);\n      console.log('productname ', form.get('productname')); // console.log(form) ;     \n\n      var token = localStorage.getItem('token');\n      (0,_tsbackendscript_ajaxfunctioncall__WEBPACK_IMPORTED_MODULE_2__.submitform)(\"\".concat(_url__WEBPACK_IMPORTED_MODULE_3__.loginurl, \"/product\"), form, token, 'json', 'post'); //send form\n    }\n  }]);\n\n  return product;\n}();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly93ZWJhcHAvLi90c19zY3JpcHRzL3Byb2R1Y3QudHM/ZDc3MCJdLCJuYW1lcyI6WyJwcm9kdWN0IiwiRm9ybURhdGEiLCJjb25zb2xlIiwibG9nIiwiZ2V0IiwidG9rZW4iLCJsb2NhbFN0b3JhZ2UiLCJnZXRJdGVtIiwic3VibWl0Zm9ybSIsImJhY2tlbmR1cmwiLCJmb3JtIiwibG9naW51cmwiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7QUFBQTtBQUNBO0FBRU8sSUFBTUEsT0FBYjtBQUFBO0FBQUE7QUFBQTs7QUFBQTtBQUFBO0FBQUEsV0FDSyxxQkFBWUEsUUFBWixFQUErQztBQUMvQztBQUNFLFVBQUdBLFFBQU8sWUFBWUMsUUFBdEIsRUFBK0I7QUFDOUI7QUFDQUMsZUFBTyxDQUFDQyxHQUFSLENBQVksaUJBQVosRUFBOEIsY0FBOUIsRUFBNkMsZ0JBQTdDLEVBQThESCxRQUFPLENBQUNJLEdBQVIsQ0FBWSxhQUFaLENBQTlEOztBQUNBLFlBQU1DLE1BQUssR0FBSUMsWUFBWSxDQUFDQyxPQUFiLENBQXFCLE9BQXJCLENBQWY7O0FBQ0FDLHFGQUFVLFdBQUlDLDRDQUFKLHNCQUFnQ1QsUUFBaEMsRUFBd0NLLE1BQXhDLEVBQThDLE1BQTlDLEVBQXFELE1BQXJELENBQVYsQ0FKOEIsQ0FJeUM7O0FBQ3ZFO0FBQ0k7O0FBQ0wsVUFBTUssSUFBSSxHQUFJLElBQUtULFFBQUwsQ0FBY0QsUUFBZCxDQUFkO0FBQ0FFLGFBQU8sQ0FBQ0MsR0FBUixDQUFZLGNBQVosRUFBMkJPLElBQUksQ0FBQ04sR0FBTCxDQUFTLGFBQVQsQ0FBM0IsRUFWNkMsQ0FXOUM7O0FBQ0MsVUFBTUMsS0FBSyxHQUFJQyxZQUFZLENBQUNDLE9BQWIsQ0FBcUIsT0FBckIsQ0FBZjtBQUNBQyxtRkFBVSxXQUFJRywwQ0FBSixlQUF1QkQsSUFBdkIsRUFBNEJMLEtBQTVCLEVBQWtDLE1BQWxDLEVBQXlDLE1BQXpDLENBQVYsQ0FiNkMsQ0FhYztBQUM1RDtBQWZOOztBQUFBO0FBQUEiLCJmaWxlIjoiMjAuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge3N1Ym1pdGZvcm19IGZyb20gXCIuL3RzYmFja2VuZHNjcmlwdC9hamF4ZnVuY3Rpb25jYWxsXCIgO1xyXG5pbXBvcnQge2JhY2tlbmR1cmwsbG9naW51cmx9IGZyb20gXCIuL3VybFwiIDtcclxuXHJcbmV4cG9ydCBjbGFzcyBwcm9kdWN0eyAgXHJcbiAgICAgc2F2ZXByb2R1Y3QocHJvZHVjdDooSFRNTEZvcm1FbGVtZW50fEZvcm1EYXRhKSl7XHJcbiAgICAgLy8gIGNvbnN0IHByb2R1Y3Rmb3JtOmFueSAgPSAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJhZGQtcHJvZHVjdC1mb3JtXCIpIDtcclxuICAgICAgIGlmKHByb2R1Y3QgaW5zdGFuY2VvZiBGb3JtRGF0YSl7XHJcbiAgICAgICAgLy8gY29uc3QgZm9ybSAgPSBuZXcgIEZvcm1EYXRhKHByb2R1Y3QpIDtcclxuICAgICAgICBjb25zb2xlLmxvZygnaW4gZm9ybWRhdGEgaWYgJywncHJvZHVjdG5hbWUgJywncHJkZGVzY3JpcHRpb24nLHByb2R1Y3QuZ2V0KCdkZXNjcmlwdGlvbicpKSAgIFxyXG4gICAgICAgIGNvbnN0IHRva2VuICA9IGxvY2FsU3RvcmFnZS5nZXRJdGVtKCd0b2tlbicpO1xyXG4gICAgICAgIHN1Ym1pdGZvcm0oYCR7YmFja2VuZHVybH0vcHJvZHVjdC9jcmVhdGVgLHByb2R1Y3QsdG9rZW4sJ3RleHQnLCdwb3N0Jyk7Ly9zZW5kIGZvcm1cclxuICAgICAgICByZXR1cm4gO1xyXG4gICAgICAgICAgIH1cclxuICAgICAgIGNvbnN0IGZvcm0gID0gbmV3ICBGb3JtRGF0YShwcm9kdWN0KSA7XHJcbiAgICAgICBjb25zb2xlLmxvZygncHJvZHVjdG5hbWUgJyxmb3JtLmdldCgncHJvZHVjdG5hbWUnKSlcclxuICAgICAgLy8gY29uc29sZS5sb2coZm9ybSkgOyAgICAgXHJcbiAgICAgICBjb25zdCB0b2tlbiAgPSBsb2NhbFN0b3JhZ2UuZ2V0SXRlbSgndG9rZW4nKTtcclxuICAgICAgIHN1Ym1pdGZvcm0oYCR7bG9naW51cmx9L3Byb2R1Y3RgLGZvcm0sdG9rZW4sJ2pzb24nLCdwb3N0Jyk7Ly9zZW5kIGZvcm1cclxuICAgICB9IFxyXG59XHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///20\n")},(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"coupon\": () => (/* binding */ coupon)\n/* harmony export */ });\n/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(9);\n/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(10);\n/* harmony import */ var _tsbackendscript_ajaxfunctioncall__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(11);\n/* harmony import */ var _url__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(16);\n\n\n\n\nvar coupon = /*#__PURE__*/function () {\n  function coupon() {\n    (0,_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__.default)(this, coupon);\n  }\n\n  (0,_babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__.default)(coupon, [{\n    key: \"savecoupon\",\n    value: function savecoupon(_coupon) {\n      console.log(' coupon ', _coupon);\n      var token = localStorage.getItem('token');\n      (0,_tsbackendscript_ajaxfunctioncall__WEBPACK_IMPORTED_MODULE_2__.submitform)(\"\".concat(_url__WEBPACK_IMPORTED_MODULE_3__.backendurl, \"/coupon/coupon\"), _coupon, token, 'text', 'post'); //send form\n    }\n  }]);\n\n  return coupon;\n}();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly93ZWJhcHAvLi90c19zY3JpcHRzL2NvdXBvbi50cz9lM2Y1Il0sIm5hbWVzIjpbImNvdXBvbiIsImNvbnNvbGUiLCJsb2ciLCJ0b2tlbiIsImxvY2FsU3RvcmFnZSIsImdldEl0ZW0iLCJzdWJtaXRmb3JtIiwiYmFja2VuZHVybCJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7OztBQUFBO0FBQ0E7QUFDTyxJQUFNQSxNQUFiO0FBQUE7QUFBQTtBQUFBOztBQUFBO0FBQUE7QUFBQSxXQUNJLG9CQUFXQSxPQUFYLEVBQTJCO0FBQ3pCQyxhQUFPLENBQUNDLEdBQVIsQ0FBWSxVQUFaLEVBQXVCRixPQUF2QjtBQUNJLFVBQU1HLEtBQUssR0FBSUMsWUFBWSxDQUFDQyxPQUFiLENBQXFCLE9BQXJCLENBQWY7QUFDQUMsbUZBQVUsV0FBSUMsNENBQUoscUJBQStCUCxPQUEvQixFQUFzQ0csS0FBdEMsRUFBNEMsTUFBNUMsRUFBbUQsTUFBbkQsQ0FBVixDQUhxQixDQUdnRDtBQUN0RTtBQUxUOztBQUFBO0FBQUEiLCJmaWxlIjoiMjEuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge3N1Ym1pdGZvcm19IGZyb20gXCIuL3RzYmFja2VuZHNjcmlwdC9hamF4ZnVuY3Rpb25jYWxsXCIgO1xyXG5pbXBvcnQge2JhY2tlbmR1cmwsbG9naW51cmx9IGZyb20gXCIuL3VybFwiIDtcclxuZXhwb3J0IGNsYXNzIGNvdXBvbntcclxuICAgIHNhdmVjb3Vwb24oY291cG9uOihPYmplY3QpKXsgXHJcbiAgICAgIGNvbnNvbGUubG9nKCcgY291cG9uICcsY291cG9uKSA7ICAgICAgICAgXHJcbiAgICAgICAgICBjb25zdCB0b2tlbiAgPSBsb2NhbFN0b3JhZ2UuZ2V0SXRlbSgndG9rZW4nKTtcclxuICAgICAgICAgIHN1Ym1pdGZvcm0oYCR7YmFja2VuZHVybH0vY291cG9uL2NvdXBvbmAsY291cG9uLHRva2VuLCd0ZXh0JywncG9zdCcpOy8vc2VuZCBmb3JtXHJcbiAgICAgICAgfSBcclxufVxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///21\n")},(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"templatefunction\": () => (/* binding */ templatefunction),\n/* harmony export */   \"templatefunctionget\": () => (/* binding */ templatefunctionget),\n/* harmony export */   \"createtables\": () => (/* binding */ createtables),\n/* harmony export */   \"createtables2\": () => (/* binding */ createtables2)\n/* harmony export */ });\nvar templatefunction = function templatefunction(url, token, crudinput, methodtype) {\n  // console.log('crudinput ',crudinput,' token ',token) ;\n  return $.ajax({\n    type: methodtype,\n    url: url,\n    headers: {\n      Authorization: \"Bearer \".concat(token) // 'Content-Type': 'application/json',\n\n    },\n    // dataType:'json',\n    // data:JSON.stringify(crudinput),\n    error: function error(err) {\n      console.log('err ', err); //  errorfunc() ;\n    }\n  });\n};\nvar templatefunctionget = function templatefunctionget(url, token, crudinput, methodtype) {\n  console.log('crudinput ', crudinput);\n  return $.ajax({\n    type: methodtype,\n    url: url,\n    headers: {\n      Authorization: \"Bearer \".concat(token)\n    },\n    data: crudinput,\n    // dataType:'json',\n    // data:crudinput,\n    error: function error(err) {\n      console.log('err ', err); //  errorfunc() ;\n    }\n  });\n};\nvar createtables = function createtables(url, token, fieldsdata) {\n  $(\"#basicScenario2\").jsGrid({\n    width: \"100%\",\n    height: \"250px\",\n    filtering: true,\n    // inserting:true,\n    editing: true,\n    sorting: true,\n    paging: true,\n    autoload: true,\n    noDataContent: \"No Data is found\",\n    pageSize: 10,\n    //loadIndication: true,\n    loadMessage: \"Please, wait...\",\n    pageButtonCount: 5,\n    confirmDeleting: true,\n    deleteConfirm: \"Do you really want to delete data ?\",\n    controller: {\n      loadData: function loadData(filter) {\n        console.log('filter ', filter);\n        return templatefunction(url, token, filter, 'get');\n      },\n      insertItem: function insertItem(item) {\n        // refresh grid\n        console.log('item ', item);\n        setTimeout(function () {\n          console.log('reloading items ');\n          $(\"#basicScenario2\").jsGrid(\"loadData\"); //  reloads the  grid\n        }, 7000);\n        return templatefunctionget(url, localStorage.getItem('token'), item, 'post');\n      },\n      updateItem: function updateItem(item) {\n        // refresh grid\n        setTimeout(function () {\n          console.log('reloading items ');\n          $(\"#basicScenario2\").jsGrid(\"loadData\"); //  reloads the  grid\n        }, 7000);\n        return templatefunctionget(url, localStorage.getItem('token'), item, 'put');\n      },\n      deleteItem: function deleteItem(item) {\n        setTimeout(function () {\n          console.log('reloading items ');\n          $(\"#basicScenario2\").jsGrid(\"loadData\"); //  reloads the  grid\n        }, 7000);\n        return templatefunctionget(url, localStorage.getItem('token'), item, 'delete');\n      }\n    },\n    fields: fieldsdata\n  });\n}; // createtables2\n\nvar createtables2 = function createtables2(url, token, fieldsdata, insertcond) {\n  $(\"#basicScenario2\").jsGrid({\n    width: \"100%\",\n    height: \"250px\",\n    filtering: true,\n    inserting: insertcond,\n    editing: true,\n    sorting: true,\n    paging: true,\n    autoload: true,\n    noDataContent: \"No Data is found\",\n    pageSize: 10,\n    //loadIndication: true,\n    loadMessage: \"Please, wait...\",\n    pageButtonCount: 5,\n    confirmDeleting: true,\n    deleteConfirm: \"Do you really want to delete data ?\",\n    controller: {\n      loadData: function loadData(filter) {\n        console.log('filter in get ', filter);\n        return templatefunction(url, token, filter, 'get');\n      },\n      insertItem: function insertItem(item) {\n        // refresh grid\n        console.log('item ', item);\n        setTimeout(function () {\n          console.log('reloading items ');\n          $(\"#basicScenario2\").jsGrid(\"loadData\"); //  reloads the  grid\n        }, 2000);\n        return templatefunctionget(url, localStorage.getItem('token'), item, 'post');\n      },\n      updateItem: function updateItem(item) {\n        // refresh grid\n        setTimeout(function () {\n          console.log('reloading items ');\n          $(\"#basicScenario2\").jsGrid(\"loadData\"); //  reloads the  grid\n        }, 2000);\n        return templatefunctionget(url, localStorage.getItem('token'), item, 'put');\n      },\n      deleteItem: function deleteItem(item) {\n        setTimeout(function () {\n          console.log('reloading items ');\n          $(\"#basicScenario2\").jsGrid(\"loadData\"); //  reloads the  grid\n        }, 2000);\n        return templatefunctionget(url, localStorage.getItem('token'), item, 'delete');\n      }\n    },\n    fields: fieldsdata\n  });\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///22\n")}],__webpack_module_cache__={};function __webpack_require__(Q){var I=__webpack_module_cache__[Q];if(void 0!==I)return I.exports;var c=__webpack_module_cache__[Q]={exports:{}};return __webpack_modules__[Q](c,c.exports,__webpack_require__),c.exports}__webpack_require__.n=Q=>{var I=Q&&Q.__esModule?()=>Q.default:()=>Q;return __webpack_require__.d(I,{a:I}),I},__webpack_require__.d=(Q,I)=>{for(var c in I)__webpack_require__.o(I,c)&&!__webpack_require__.o(Q,c)&&Object.defineProperty(Q,c,{enumerable:!0,get:I[c]})},__webpack_require__.o=(Q,I)=>Object.prototype.hasOwnProperty.call(Q,I),__webpack_require__.r=Q=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(Q,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(Q,"__esModule",{value:!0})};var __webpack_exports__=__webpack_require__(0)})();