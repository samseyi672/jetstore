(()=>{var __webpack_modules__=[(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(1);\n/* harmony import */ var _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(2);\n/* harmony import */ var _babel_runtime_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(3);\n/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(9);\n/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var _tsbackendscript_login__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(12);\n/* harmony import */ var _url__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(18);\n/* harmony import */ var _miscellaneous__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(17);\n/* harmony import */ var _lithtmlscript__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(16);\n/* harmony import */ var _tsbackendscript_ajaxfunctioncall__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(15);\n/* harmony import */ var _register__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(19);\n/* harmony import */ var _user__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(20);\n/* harmony import */ var _product__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(21);\n/* harmony import */ var _coupon__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(22);\n/* harmony import */ var _tables__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(23);\n\n\n\n\nvar _this = undefined;\n\n\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it["return"] != null) it["return"](); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { (0,_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_1__["default"])(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\n// import expect "" quotes  in typescript\n//declare var ajaxcall:any;\n//declare var requirejs:any;\n// declare var process: any;\n// import * \'../dist/mylanguages/\'\n// remember to remove create create  link \n\n\n\n\n\n\n\n\n //import { waterfall, series, each, asyncify, forEach, any } from \'async\';\n\n //import  translate from \'google-translate-api\';\n//import translate from "translate";\n//import { Search } from "gridjs/dist/src/view/plugin/search/search";\n\ntoastr.options = {\n  // toast and notification\n  "closeButton": true,\n  "debug": false,\n  "newestOnTop": false,\n  "progressBar": true,\n  "positionClass": "toast-top-right",\n  "preventDuplicates": false,\n  "onclick": null,\n  "showDuration": "2500",\n  "hideDuration": "200",\n  "timeOut": "3000",\n  "showEasing": "swing",\n  "hideEasing": "linear",\n  "showMethod": "fadeIn",\n  "hideMethod": "fadeOut"\n}; // I had to  add export {}  below to make it  an an isolated modules.\n// i also commented out the  isloated  modules to output a  single js file without compiling  other other ts script\n// I intalled babel js transform to  be a  able  to compile tsx with jsx code.\n// when  you dont  set rootDir , typescript  make use  of  the default rootdir\n// which is better. \n//logic goes  as  thus \n//form submit for login\n\nconsole.log(\'on load here ........\');\n$(\'#login\').on(\'click\', function (e) {\n  e.preventDefault();\n  var loginobj = new _tsbackendscript_login__WEBPACK_IMPORTED_MODULE_4__.login();\n  var myform = $(\'form\')[0];\n  console.log(\'id \', $(_this).id);\n  var htmlform = document.getElementById(\'submitLogin\');\n  var username = htmlform.username.value;\n  var password = htmlform.password.value;\n  console.log(username, \' and \', password);\n  var form = new FormData(); // just note  this\n\n  form.append(\'username\', username);\n  form.append(\'password\', password); // alert(\'login\');\n\n  loginobj.loginaction(form, "");\n}); //process page load \n\nvar urlpages = ["".concat(_url__WEBPACK_IMPORTED_MODULE_5__.loginurl, "/adminindex"), "".concat(_url__WEBPACK_IMPORTED_MODULE_5__.loginurl, "/category"), "".concat(_url__WEBPACK_IMPORTED_MODULE_5__.loginurl, "/categorysub"), "".concat(_url__WEBPACK_IMPORTED_MODULE_5__.loginurl, "/categorysubdigital"), "".concat(_url__WEBPACK_IMPORTED_MODULE_5__.loginurl, "/productlistdetails"), "".concat(_url__WEBPACK_IMPORTED_MODULE_5__.loginurl, "/addprod"), "".concat(_url__WEBPACK_IMPORTED_MODULE_5__.loginurl, "/categorydigital"), "".concat(_url__WEBPACK_IMPORTED_MODULE_5__.loginurl, "/categorysub"), "".concat(_url__WEBPACK_IMPORTED_MODULE_5__.loginurl, "/productlistdigital"), "".concat(_url__WEBPACK_IMPORTED_MODULE_5__.loginurl, "/order"), "".concat(_url__WEBPACK_IMPORTED_MODULE_5__.loginurl, "/transactions"), "".concat(_url__WEBPACK_IMPORTED_MODULE_5__.loginurl, "/couponlist"), "".concat(_url__WEBPACK_IMPORTED_MODULE_5__.loginurl, "/couponcreate"), "".concat(_url__WEBPACK_IMPORTED_MODULE_5__.loginurl, "/pagelist"), "".concat(_url__WEBPACK_IMPORTED_MODULE_5__.loginurl, "/pagecreate"), "".concat(_url__WEBPACK_IMPORTED_MODULE_5__.loginurl, "/menulist"), "".concat(_url__WEBPACK_IMPORTED_MODULE_5__.loginurl, "/menulist"), "".concat(_url__WEBPACK_IMPORTED_MODULE_5__.loginurl, "/userlist"), "".concat(_url__WEBPACK_IMPORTED_MODULE_5__.loginurl, "/createuser"), "".concat(_url__WEBPACK_IMPORTED_MODULE_5__.loginurl, "/createvendors"), "".concat(_url__WEBPACK_IMPORTED_MODULE_5__.loginurl, "/translations"), "".concat(_url__WEBPACK_IMPORTED_MODULE_5__.loginurl, "/currencyrates"), "".concat(_url__WEBPACK_IMPORTED_MODULE_5__.loginurl, "/taxes"), "".concat(_url__WEBPACK_IMPORTED_MODULE_5__.loginurl, "/reports"), "".concat(_url__WEBPACK_IMPORTED_MODULE_5__.loginurl, "/profile"), "".concat(_url__WEBPACK_IMPORTED_MODULE_5__.loginurl, "/invoice")]; //add digital product \n\n$(\'#adddigitalprod\').on(\'click\', function (e) {\n  e.preventDefault();\n  Swal.fire({\n    icon: \'question\',\n    // title: \'Multi-Vendor Owner\',\n    text: \'Do you want to add this Product ?\',\n    showCancelButton: true,\n    allowOutsideClick: false\n  }).then(function (result) {\n    if (result.isConfirmed) {\n      var formdata = new FormData();\n      var ptitle = document.getElementsByName(\'productname\')[0];\n      formdata.append("title", ptitle.value);\n      console.log(\'title\', ptitle.value);\n      var sku = document.getElementsByName(\'sku\')[0];\n      formdata.append("sku", sku.value);\n      console.log(\'sku\', sku.value);\n      var productquantity = document.getElementsByName(\'productquantity\')[0];\n      formdata.append("productquantity", productquantity.value);\n      console.log(\'productquantity\', productquantity.value);\n      var productcode = document.getElementsByName(\'productcode\')[0];\n      formdata.append("productcode", productcode.value);\n      console.log(\'productcode\', productcode.value);\n      var expirydate = document.getElementsByName(\'expirydate\')[0];\n      formdata.append("expirydate", expirydate.value);\n      console.log(\'expirydate\', expirydate.value);\n      var state = document.getElementsByName(\'state\')[0];\n      formdata.append("state", state.value);\n      var productstatus = document.getElementsByName(\'productstatus\')[0];\n      console.log(\'productstatus\', productstatus.value);\n      var productprice = document.getElementsByName(\'productprice\')[0];\n      formdata.append("productprice", productprice.value);\n      console.log(\'productprice\', productprice.value);\n      var imageurl = document.getElementsByName(\'imageurl\')[0];\n      formdata.append("imageurl", imageurl.value);\n      console.log(\'imageurl\', imageurl.value);\n      var proddescription = document.getElementsByName(\'proddescription\')[0];\n      formdata.append("proddescription", proddescription.value);\n      console.log(\'proddescription\', proddescription.value); //let proddes:any  =  document.getElementById(\'editor1\') ;\n      // let proddes:any= document.getElementById(\'editor1\') ;\n      // formdata.append("proddes",proddes.value) ;\n      // console.log(\'proddes\',proddes.value) ;\n\n      var metatitle = document.getElementsByName(\'metatitle\')[0];\n      formdata.append("metatitle", metatitle.value);\n      console.log(\'metatitle\', metatitle.value);\n      var metadescription = document.getElementsByName(\'metadescription\')[0];\n      formdata.append("metadescription", metadescription.value);\n      console.log(\'metadescription\', metadescription.value);\n      var productsta = document.getElementsByName(\'productstatus\');\n      var itemstate = document.getElementsByName(\'state\');\n\n      var _Array$from = Array.from(itemstate),\n          _Array$from2 = (0,_babel_runtime_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_2__["default"])(_Array$from, 2),\n          enable = _Array$from2[0],\n          disable = _Array$from2[1];\n\n      console.log(\'enable\', enable);\n\n      if (enable.checked) {\n        formdata.append(\'state\', \'enable\');\n      } else if (disable.checked) {\n        formdata.append(\'state\', \'disable\');\n      }\n\n      var _Array$from3 = Array.from(productsta),\n          _Array$from4 = (0,_babel_runtime_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_2__["default"])(_Array$from3, 2),\n          newprod = _Array$from4[0],\n          oldprod = _Array$from4[1];\n\n      if (newprod.checked) {\n        formdata.append(\'productstatus\', \'new\');\n      } else if (oldprod.checked) {\n        formdata.append(\'productstatus\', \'old\');\n      }\n\n      var categoryid = document.getElementsByName(\'categoryid\')[0];\n      formdata.append("categoryid", categoryid.value);\n      console.log(\'categoryid\', categoryid.value);\n      var subcategoryid = document.getElementsByName(\'subcategoryid\')[0];\n      formdata.append("subcategoryid", subcategoryid.value);\n      console.log(\'subcategoryid\', subcategoryid.value);\n      var shortsummary = document.getElementsByName(\'shortsummary\')[0];\n      formdata.append("shortsummary", shortsummary.value);\n      console.log(\'shortsummary\', shortsummary.value); //  let editor1:any  = document.getElementsByName(\'editor1\')[0] ;\n      //  formdata.append("editor1",editor1.value) ;\n      //   console.log(\'editor1\',editor1.value) ;     \n    } else if (result.isDismissed) {\n      Swal.fire({\n        icon: \'error\',\n        text: \'No product added.\'\n      }).then(function (r) {\n        window.location.reload();\n      });\n    }\n  });\n}); //set priceofproduct\n\n$(\'#tax\').on(\'change\', function (e) {\n  e.preventDefault();\n  var priceofproduct = document.getElementById(\'priceofproduct\');\n  var cal = parseFloat(e.target.value) * 100 + parseInt($(\'#productprice\').val());\n  console.log(cal);\n  toastr.success(\'Your selling price will be \' + cal + \' which is (price-tax)\');\n  priceofproduct.value = cal + "";\n  console.log("price " + priceofproduct.value);\n  document.getElementById(\'pricediv\').style.display = \'none\';\n}); //add product creation  \n\n$(\'#addproduct\').on(\'click\', function (e) {\n  e.preventDefault();\n  Swal.fire({\n    icon: \'question\',\n    text: \'Do you want to add Product ?\',\n    showCancelButton: true,\n    allowOutsideClick: false\n  }).then(function (result) {\n    if (result.isConfirmed) {\n      var prod = new _product__WEBPACK_IMPORTED_MODULE_11__.product();\n      var form = document.querySelector(\'#add-product-form\'); //  console.log(\'form \', form, \'state \', form.state);\n\n      var _Array$from5 = Array.from(form.state),\n          _Array$from6 = (0,_babel_runtime_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_2__["default"])(_Array$from5, 2),\n          enable = _Array$from6[0],\n          disable = _Array$from6[1];\n\n      var _Array$from7 = Array.from(form.productstatus),\n          _Array$from8 = (0,_babel_runtime_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_2__["default"])(_Array$from7, 3),\n          newprod = _Array$from8[0],\n          oldprod = _Array$from8[1],\n          refurbished = _Array$from8[2]; // console.log(\'state \', form.state[0].input, \' enable \', enable.checked, \n      // \' disable \', disable.checked,\n      // \' new prod \',newprod.checked,\' oldprob \',oldprod.checked);\n      // validate image    \n      //      console.log(\' form model ,\',form.model[].value\n      //  ,\' size \',form.size.value,\' colour \',form.colour[].value) ;\n\n\n      if (form.prdfile.value.length < 1) {\n        toastr.error(\'pls add image ..\');\n        return;\n      } //  alert() ;\n      //return ;\n\n\n      if (form.productname.value.length < 1) {\n        toastr.error(\'please add product name ..\');\n        return;\n      } // if ((/\\d/.test(form.productname.value))) {\n      //   toastr.error(\'product name should contain only letters ......\');\n      //   return;\n      // }\n\n\n      if (!/\\d+$/.test(form.productprice.value)) {\n        toastr.error(\'product price should contains numbers only\');\n        return;\n      }\n\n      if (form.categoryid.value.length < 1 || form.categoryid.value === \'\') {\n        toastr.error(\'please select category\');\n        return;\n      }\n\n      if (form.subcategoryid.value.length < 1 || form.subcategoryid.value === \'\') {\n        toastr.error(\'please select sub category\');\n        return;\n      }\n\n      if (form.productcode.value.length < 1) {\n        toastr.error("product code cannot be empty");\n        return;\n      }\n\n      if (form.metatitle.value.length < 1) {\n        toastr.error("meta title cannot be empty");\n        return;\n      }\n\n      if (form.tax.value.length < 1) {\n        toastr.error("tax cannot be empty");\n        return;\n      } // if (form.expirydate.value.length < 1) {\n      //   toastr.error("expiry date cannot be empty");\n      //   return;\n      // }\n      // if (form.size.value.length < 1) {\n      //   toastr.error("size cannot be empty");\n      //   return;\n      // }\n\n\n      if (form.shortsummary.value.length < 1) {\n        toastr.error("short summary cannot be empty");\n        return;\n      }\n\n      if (form.metadescription.value.length < 1) {\n        toastr.error("metadescription cannot be empty");\n        return;\n      }\n\n      if (enable.checked !== true && disable.checked !== true) {\n        toastr.error(\'pls check either enable or disable\');\n        return;\n      }\n\n      if (newprod.checked !== true && oldprod.checked !== true && refurbished.checked !== true) {\n        toastr.error(\'please check new or old or refurbished\');\n        return;\n      }\n\n      if (CKEDITOR.instances.editor1.getData().length < 1) {\n        toastr.error("description cannot be empty");\n        return;\n      }\n\n      var prdform = new FormData(form);\n      prdform.append(\'proddescription\', CKEDITOR.instances.editor1.getData());\n      var vendorname = localStorage.getItem(\'vendorname\'); // console.log(\'vendorname\',vendorname);\n\n      prdform.append(\'vendorname\', vendorname);\n      prdform.append(\'manysizes\', $(\'#sizesofproduct\').val());\n      prdform.append(\'colour\', $(\'#colourofproduct\').val());\n      prdform["delete"](\'model\'); // removes id\n\n      prdform.append(\'model\', $(\'#model\').val().split(\',\')); // console.log(\' id \',$("#id").val()) ;\n\n      if ($("#id").val() === null || $("#id").val() === undefined || $("#id").val() === \'\') {\n        //alert($("#id").length)\n        prdform["delete"](\'id\'); // removes id\n\n        console.log(\' size by id ,\', $(\'#sizesofproduct\').val());\n        console.log(\' colour by id ,\', $(\'#colourofproduct\').val());\n        prdform["delete"](\'size[]\'); // removes size \n\n        prdform["delete"](\'colour[]\'); // removes size \n\n        console.log(\'without id\');\n        console.log(\' form \', Object.fromEntries(prdform));\n        prod.saveproduct(prdform); //return ;\n      } else {\n        console.log(\'with id\', Object.fromEntries(prdform)); // console.log(\' form \',Object.fromEntries(prdform)) ;\n        // prdform.delete(\'id\');// removes id\n        // return ;\n\n        prod.saveproduct(prdform);\n      } // reset form \n      // return ;\n\n\n      setTimeout(function () {// form.reset() ; \n      }, 1500);\n    } else if (result.isDismissed) {\n      Swal.fire({\n        icon: \'error\',\n        text: \'No product added.\'\n      });\n    }\n  });\n}); // for language change \n\n$(\'.language-dropdown\').on(\'click\', function (e) {\n  e.preventDefault();\n  console.log(e);\n\n  if (e.target.lastChild.data === \'English\') {\n    alert(e.target.lastChild.data);\n  } else if (e.target.lastChild.data === \'Spanish\') {\n    alert(e.target.lastChild.data);\n  } else if (e.target.lastChild.data === \'Portuguese\') {\n    alert(e.target.lastChild.data);\n  } else if (e.target.lastChild.data === \'French\') {\n    // alert(e.target.lastChild.data) ;\n    alertify.confirm(\'Confirmer la langue\', \'Voulez-vous changer en français\', function () {\n      $(\'[data-localize]\').localize(\'../dist/mylanguages/mylanguage\', {\n        language: \'fr\'\n      });\n      alertify.success("D\'accord");\n    }, function () {\n      alertify.error(\'Annuler\');\n    }).set(\'labels\', {\n      ok: \'Bien!\',\n      cancel: \'Naa!\'\n    });\n    ;\n  } else if (e.target.lastChild.data === \'German\') {\n    alert(e.target.lastChild.data);\n  } else if (e.target.lastChild.data === \'Arabic\') {\n    alert(e.target.lastChild.data);\n  } else if (e.target.lastChild.data === \'Swahili\') {\n    alert(e.target.lastChild.data);\n  } else if (e.target.lastChild.data === \'Yoruba\') {\n    alert(e.target.lastChild.data);\n  } else if (e.target.lastChild.data === \'Igbo\') {\n    alertify.confirm(\'Kwenye asusu\', \'Chọrọ ịgbanwe na Igbo\', function () {\n      $(\'[data-localize]\').localize(\'../dist/mylanguages/mylanguage\', {\n        language: \'ig\'\n      });\n      alertify.success("Dịkwa mma");\n    }, function () {\n      alertify.error(\'Ikagbu\');\n    }).set(\'labels\', {\n      ok: \'Ọ dị mma!\',\n      cancel: \'Naa!\'\n    });\n    ;\n  } else if (e.target.lastChild.data === \'Hausa\') {\n    alert(e.target.lastChild.data);\n  }\n}); // check for  vendorowner \n\nvar owner = function owner(vendorowner, yes, no) {\n  console.log(\'yes\', yes.checked, \'no\', no.checked);\n\n  if (no.checked || !no.checked) {\n    vendorowner = false;\n  }\n\n  if (yes) {\n    vendorowner = yes.checked;\n  }\n\n  console.log(\'vendorowner\', vendorowner, \'yes\', yes.checked, \'no\', no.checked);\n}; // process user creation \n\n\n$(\'#submituser\').on(\'click\', function (e) {\n  e.preventDefault();\n  e.stopPropagation();\n  var user = new _user__WEBPACK_IMPORTED_MODULE_10__.User(); // get  data  from page \n  //role is assigned from the back end \n\n  var form1 = JSON.parse($(\'#userdetails\').jform());\n  var userdetails = document.getElementById(\'userdetails\');\n\n  var _Array$from9 = Array.from(userdetails.vendorowner),\n      _Array$from10 = (0,_babel_runtime_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_2__["default"])(_Array$from9, 2),\n      yes = _Array$from10[0],\n      no = _Array$from10[1]; //console.log("checking  form1 ", form1, " value ", yes.value);\n\n\n  var vendorowner = false;\n\n  if (yes.checked) {\n    var ans = confirm("Do you want to make this user a owner ?");\n\n    if (ans) {\n      vendorowner = yes.checked;\n    }\n  } // if (no.checked) {\n  //   vendorowner = no.checked;\n  //    }\n\n\n  if (form1.firstname.length < 1) {\n    $(\'#usererror\').empty().html(\'<br/><div class="alert alert-danger"> <span class="glyphicon glyphicon-info-sign"></span> &nbsp; \' + \'Empty firstname\' + \' !</div>\');\n    return;\n  } //console.log(\'form1.firstname \',form1.firstname);\n  //form1.firstname  = $.trim(form1.firstname) ;\n\n\n  if (!/^[a-zA-Z]{3,20}$/.test(form1.firstname)) {\n    // alert(form1.firstname);\n    $(\'#usererror\').empty().html(\'<br/><div class="alert alert-danger"> <span class="glyphicon glyphicon-info-sign"></span> &nbsp; \' + \'Only letters are expected\' + \' !</div>\');\n    ;\n    return;\n  } // console.log(\'form1.firstname2 \',form1.firstname);\n\n\n  if (form1.lastname.length < 1) {\n    $(\'#usererror\').empty().html(\'<br/><div class="alert alert-danger"> <span class="glyphicon glyphicon-info-sign"></span> &nbsp; \' + \'Empty lastname\' + \' !</div>\');\n    ;\n    return;\n  }\n\n  if (!/^[a-zA-Z ]+$/.test(form1.lastname)) {\n    //  alert(\'last\');\n    $(\'#usererror\').empty().html(\'<br/><div class="alert alert-danger"> <span class="glyphicon glyphicon-info-sign"></span> &nbsp; \' + \'Only letters are expected\' + \' !</div>\');\n    ;\n    return;\n  } //  if(form1.email.length<1){\n  //   $(\'#usererror\').empty().html(\'<br/><div class="alert alert-danger"> <span class="glyphicon glyphicon-info-sign"></span> &nbsp; \'+\n  //   \'wrong format of email\' +\' !</div>\');\n  //   return ;\n  //     }    \n\n\n  if (form1.password !== form1.confirmPassword) {\n    $(\'#usererror\').empty().html(\'<br/><div class="alert alert-danger"> <span class="glyphicon glyphicon-info-sign"></span> &nbsp; \' + \'Password/confirm password does not match\' + \' !</div>\');\n    ;\n    return;\n  }\n\n  if (!yes.checked && !no.checked) {\n    $(\'#usererror\').empty().html(\'<br/><div class="alert alert-danger"> <span class="glyphicon glyphicon-info-sign"></span> &nbsp; \' + \'Either options must be  checked for  vendor\' + \' !</div>\');\n    return;\n  }\n\n  var form2 = JSON.parse($(\'#userpermission\').jform()); // console.log(\'form1 \',form1,\'form2 \',form2) ;   \n\n  var permission = Object.values(form2);\n  console.log(\'permission \', permission);\n  permission = permission.filter(function (r) {\n    if (r !== \'on\') {\n      //  console.log(r);\n      return true;\n    }\n  }); // filtering the array \n  // console.log(" permission ",permission) ;\n\n  if ($.isEmptyObject(permission)) {\n    toastr.error(\'no permissions are selected....\');\n    return;\n  }\n\n  if (userdetails.userstatus.checked) {\n    form1.userstatus = \'1\';\n  } else {\n    form1.userstatus = \'0\';\n  }\n\n  form1.permission = permission;\n  form1.role = []; // form1.vendoroption=vendoroption ;\n\n  form1.vendorname = localStorage.getItem(\'vendorname\'); // get it  from  from localstorage \n  // console.log("form1 ", form1);\n  // decide  how form1 will be submitted \n  // let username = $(\'#usersearch\').val();\n  // console.log(\'username \',username) ;\n\n  if (!$.isEmptyObject(form1.password) && !$.isEmptyObject(form1.confirmPassword)) {\n    owner(vendorowner, yes, no);\n    form1.vendorowner = vendorowner;\n    console.log(\' form1.vendorowner \', form1.vendorowner);\n    delete form1[\'usersearch\'];\n    console.log(\'sending as  new user ......\');\n    Swal.fire({\n      icon: \'question\',\n      // title: \'User creation\',\n      text: \'Do you want to create this user ?\',\n      showCancelButton: true,\n      allowOutsideClick: false\n    }).then(function (result) {\n      if (result.isConfirmed) {\n        if (userdetails.userstatus.checked) {\n          // check  if activated\n          user.save(form1, localStorage.getItem(\'token\'), \'put\', function () {\n            Swal.fire({\n              icon: "success",\n              text: "User is created and activated successfully.Account activation email sent shortly"\n            });\n          }, function () {\n            Swal.fire({\n              icon: "error",\n              text: "Oops.Operation failed.check your connection"\n            });\n          }); // send as new user \n        } else {\n          user.save(form1, localStorage.getItem(\'token\'), \'put\', function () {\n            Swal.fire({\n              icon: "success",\n              text: "User is created successfully but have not been activated"\n            });\n          }, function () {\n            Swal.fire({\n              icon: "error",\n              text: "Oops.Operation failed.check your connection"\n            });\n          }); // send as new user \n        }\n      } else if (result.isDismissed) {\n        Swal.fire({\n          icon: "error",\n          text: "cancelled"\n        });\n      }\n    });\n  } // dont  forget , this page is for admin of every vendor not for supervisor \n  // so by default , there can  only be  one user vendor owner in a  vendor\n\n\n  if ($.isEmptyObject(form1.password) && $.isEmptyObject(form1.confirmPassword)) {\n    Swal.fire({\n      icon: \'question\',\n      //title: \'User creation\',\n      text: \'Do you want to create this user ?\',\n      showCancelButton: true,\n      allowOutsideClick: false\n    }).then(function (result) {\n      var id = $(\'#usersearch\').val();\n      console.log(\'id\', id);\n      owner(vendorowner, yes, no);\n      form1.vendorowner = vendorowner;\n      delete form1[\'usersearch\'];\n      delete form1[\'password\'];\n      delete form1[\'confirmPassword\'];\n      console.log(\'updating  user .....\', form1);\n      form1.id = id; // append the  id  of the elected user  to the json and send for update\n\n      if (result.isConfirmed) {\n        if (userdetails.userstatus.checked) {\n          user.save(form1, localStorage.getItem(\'token\'), \'put\', function () {\n            Swal.fire({\n              icon: "success",\n              text: "User is activated.Account activation email sent shortly"\n            });\n          }, function () {\n            Swal.fire({\n              icon: "error",\n              text: "Oops.Operation failed.Check your connection"\n            });\n          });\n        } else {\n          user.save(form1, localStorage.getItem(\'token\'), \'put\', function () {\n            Swal.fire({\n              icon: "success",\n              text: "User created but have not been activated"\n            });\n          }, function () {\n            Swal.fire({\n              icon: "error",\n              text: "Oops.Operation failed.Check your connection"\n            });\n          });\n        }\n      } else if (result.isDismissed) {\n        Swal.fire({\n          icon: "error",\n          text: "cancelled"\n        });\n      }\n    });\n  }\n}); //personal profile,email,logout\n\n$(\'.profile-dropdown\').on(\'click\', function (e) {\n  //use  event delegation from parent  to  children \n  e.stopPropagation();\n\n  if (e.target.lastChild.data === "Edit Profile") {\n    // invoke  the dialog box \n    console.log("calling dialog");\n    $((0,_lithtmlscript__WEBPACK_IMPORTED_MODULE_7__.dialog)(function () {\n      return "\\n          <form class=\\"needs-validation\\" id=\\"profileform\\">\\n           <div class=\\"form\\">           \\n              <div class=\\"form\\">             \\n              <div class=\\"form\\">\\n              <div class=\\"form-group\\">\\n                  <label for=\\"validationCustom01\\" class=\\"mb-1\\">Location(states or city)* :</label>\\n                  <input class=\\"form-control\\" id=\\"validationCustom01\\" type=\\"text\\" name=\\"location\\" />\\n              </div>\\n              <div class=\\"form-group\\">\\n                  <label for=\\"validationCustom01\\" class=\\"mb-1\\">Gender* :</label>\\n                  <select name=\\"gender\\">\\n                  <option value=\\"male\\">Male</option>\\n                  <option value=\\"female\\">Female</option>\\n                  </select>\\n              </div>\\n              <div class=\\"form\\">\\n              <div class=\\"form-group\\">\\n                  <label for=\\"validationCustom01\\" class=\\"mb-1\\">Mobile* :</label>\\n                  <input class=\\"form-control\\" id=\\"validationCustom01\\" type=\\"text\\" name=\\"mobilenumber\\" />\\n              </div>\\n              <div class=\\"form-group mb-0\\">\\n              <label for=\\"validationCustom02\\" class=\\"mb-1\\">Address* :</label>\\n              <input class=\\"form-control\\" id=\\"validationCustom02\\" type=\\"text\\" name=\\"address\\">\\n              </div>\\n              <div class=\\"form-group mb-0\\">\\n              <label for=\\"validationCustom02\\" class=\\"mb-1\\">Profile Picture* :</label>\\n              <input class=\\"form-control\\" id=\\"validationCustom02\\" type=\\"file\\" name=\\"profilepict\\">\\n          </div>\\n          </div>\\n          </form>\\n          ";\n    }(), function () {\n      return "\\n          <h5 class=\\"modal-title f-w-600\\" id=\\"exampleModalLabel\\">Update your Profile</h5>\\n          <button class=\\"close\\" type=\\"button\\" data-dismiss=\\"modal\\" aria-label=\\"Close\\"><span aria-hidden=\\"true\\">X</span></button>\\n          ";\n    }(), function () {\n      return "\\n          <button class=\\"btn btn-primary\\" type=\\"button\\" onclick=\\"updateprofile(\'profileform\')\\">Update</button>\\n          ";\n    }())).insertAfter(".page-main-header");\n    console.log(\'set dialog\'); //invoke the dialog box \n\n    var mydialogpos = document.querySelector(".modal-dialog");\n    mydialogpos.classList.add("modal-dialog-centered"); // center  it vertically\n    // call ajax to  prefill form\n    //  ajaxcall(`${backendurl}/profile/{userid}`,"",\'get\',\'json\',\'application/json\') ;\n\n    var results = {}; //process asyn calls  \n\n    console.log(\' calling  userid \', localStorage.getItem(\'ack\')); // results = processrequest(`${backendurl}/profile/profile/${localStorage.getItem(\'ack\')}`, "", "get", "application/json",localStorage.getItem(\'token\'));         \n\n    fetch("".concat(_url__WEBPACK_IMPORTED_MODULE_5__.backendurl, "/profile/profile/").concat(localStorage.getItem(\'ack\')), {\n      method: \'get\',\n      credentials: \'same-origin\',\n      headers: {\n        \'Content-Type\': "application/json",\n        \'Authorization\': \'Bearer \' + localStorage.getItem(\'token\')\n      } // body:JSON.stringify(form)\n\n    }).then(function (response) {\n      if (response.status != 200) {\n        throw new Error("network access  error");\n      }\n\n      return response.json();\n    }).then(function (r) {\n      console.log(\'r in function \', r);\n      $("#profileform").autofill(r);\n    });\n    $(\'#exampleModal\').modal(\'show\'); //show modal\n  } else if (e.target.lastChild.data === "Inbox") {\n    console.log("inbox");\n  } else if (e.target.lastChild.data === "Lock Screen") {\n    console.log("lock screen");\n  } else if (e.target.lastChild.data === "Settings") {\n    console.log(\'settings\');\n  } else if (e.target.lastChild.data === "Logout") {\n    console.log("logout");\n  } else if (e.target.lastChild.data === "Change Logo") {\n    // $(dialog("", "", "")).insertAfter(".back-btn");\n    //invoke the dialog box \n    alertify.confirm("Do you want to change Logo?", function () {\n      $((0,_lithtmlscript__WEBPACK_IMPORTED_MODULE_7__.dialog)("", "", "")).insertAfter(".page-main-header");\n      var mydialogpos = document.querySelector(".modal-dialog");\n      mydialogpos.classList.add("modal-dialog-centered"); // center  it verticallycl\n\n      $(".modal-header").html(function () {\n        return dom("h5", {\n          className: "modal-title f-w-600",\n          id: "exampleModalLabel"\n        }, "Upload Logo:");\n      }());\n      $(".modal-body").html(function () {\n        return dom("form", {\n          className: "needs-validation",\n          id: "regform"\n        }, dom("div", {\n          className: "form-group"\n        }, dom("label", {\n          "for": "exampleFormControlFile1"\n        }, dom("small", null, "Upload your Logo?")), dom("input", {\n          type: "file",\n          className: "form-control-file",\n          id: "logo",\n          name: "logo"\n        })));\n      }());\n      $(".modal-footer").html(function () {\n        function handleClick() {\n          var htmlform = document.getElementById(\'regform\');\n          var input1 = htmlform === null || htmlform === void 0 ? void 0 : htmlform.logo; // console.log(\'input1 \',input1.files);\n          //  console.log(\'input1 \',input1.files[0].name);\n\n          if (input1.value === "" || input1.value === undefined) {\n            toastr.error("no file is  choosen");\n            alertify.error(\'No file is choosen\');\n            return;\n          } // console.log(input1);\n          // send to server \n\n\n          var data = new FormData();\n          data.append("vendorlogo", input1.files[0]); // /assets/images/dashboard/crista.png class blur up\n          ///assets/images/dashboard/man.png\n\n          var imglogo = document.getElementsByClassName(\'vendorlogo\');\n          console.log(\'img \', imglogo, \' logo \', input1.files[0].name, \' url \', "".concat(_url__WEBPACK_IMPORTED_MODULE_5__.backendurl, "/jetstore/").concat(input1.files[0].name));\n          imglogo[0].src = "".concat(_url__WEBPACK_IMPORTED_MODULE_5__.backendurl, "/jetstore/").concat(input1.files[0].name);\n          imglogo[1].src = "".concat(_url__WEBPACK_IMPORTED_MODULE_5__.backendurl, "/jetstore/").concat(input1.files[0].name);\n          var vendor = localStorage.getItem(\'vendorname\');\n          console.log(\'vendorname \', vendor);\n          data.append("vendorname", vendor);\n          $(\'#exampleModal\').modal(\'hide\'); //$(\'#exampleModal\').modal(\'dispose\') ;\n\n          setTimeout(function () {\n            $(\'#exampleModal\').remove(); //remove from the dom after some seconds\n          }, 1500);\n          (0,_tsbackendscript_ajaxfunctioncall__WEBPACK_IMPORTED_MODULE_8__.submitform)("".concat(_url__WEBPACK_IMPORTED_MODULE_5__.backendurl, "/vendor/vendor"), data, localStorage.getItem(\'token\'), \'text\', \'post\'); //toastr.success("successfully uploaded");         \n        }\n\n        function close() {\n          setTimeout(function () {\n            $(\'#exampleModal\').remove(); //remove from the dom after some seconds\n          }, 1500);\n          $(\'#exampleModal\').modal(\'hide\');\n        }\n\n        return dom("div", null, dom("button", {\n          className: "btn btn-primary",\n          type: "button",\n          onClick: handleClick\n        }, "Upload"), "\\xA0\\xA0\\xA0", dom("button", {\n          className: "btn btn-secondary",\n          type: "button",\n          onClick: close\n        }, "Close"));\n      }()); //toastr.error(\'No vendor name or unchecked options\');\n\n      $(\'#exampleModal\').modal(\'show\'); //show modal\n      //alertify.success(\'Ok\');\n    }, function () {\n      alertify.error(\'Cancel\');\n    });\n  }\n});\n\nfunction Headline() {\n  console.log("calling jsx");\n  return dom("h5", {\n    className: "headline"\n  }, "Inital");\n}\n\nvar profilesummary = function profilesummary(email, firstname, lastname, pic) {\n  return dom("div", null, dom("img", {\n    src: pic,\n    alt: "",\n    className: "img-fluid img-90 rounded-circle blur-up lazyloaded"\n  }), dom("h5", {\n    className: "f-w-600 mb-0"\n  }, firstname + " " + lastname), dom("span", null, email), dom("div", {\n    className: "social"\n  }, dom("div", {\n    className: "form-group btn-showcase"\n  }, dom("button", {\n    className: "btn social-btn btn-fb d-inline-block"\n  }, " ", dom("i", {\n    className: "fa fa-facebook"\n  })), dom("button", {\n    className: "btn social-btn btn-twitter d-inline-block"\n  }, dom("i", {\n    className: "fa fa-google"\n  })), dom("button", {\n    className: "btn social-btn btn-google d-inline-block mr-0"\n  }, dom("i", {\n    className: "fa fa-twitter"\n  })))));\n};\n\nvar fullprofile = function fullprofile(resObject, email, dob, location) {\n  return dom("div", null, dom("h5", {\n    className: "f-w-600"\n  }, "Profile"), dom("div", {\n    className: "table-responsive profile-table"\n  }, dom("table", {\n    className: "table table-responsive"\n  }, dom("tbody", null, dom("tr", null, dom("td", null, "First Name:"), dom("td", null, resObject.firstname)), dom("tr", null, dom("td", null, "Last Name:"), dom("td", null, resObject.lastname)), dom("tr", null, dom("td", null, "Email:"), dom("td", null, email)), dom("tr", null, dom("td", null, "Gender:"), dom("td", null, resObject.gender)), dom("tr", null, dom("td", null, "Mobile Number:"), dom("td", null, resObject.mobilenumber)), dom("tr", null, dom("td", null, "DOB:"), dom("td", null, dob)), dom("tr", null, dom("td", null, "Location:"), dom("td", null, location))))));\n}; //this is to enable typescript build jsx by default as configured in tsconfig.json\n// const appendChild = (parent, child) => {\n//   if (Array.isArray(child))\n//     child.forEach((nestedChild) => appendChild(parent, nestedChild))\n//   else\n//     parent.appendChild(\n//       child.nodeType ? child : document.createTextNode(child)\n//     )\n// };\n\n\nfunction dom(tag, attrs) {\n  //   const element = document.createElement(tag)\n  // Object.entries(attrs || {}).forEach(([name, value]) => {\n  // \tif (name.startsWith(\'on\') && name.toLowerCase() in window)\n  // \t\telement.addEventListener(name.toLowerCase().substr(2), value)\n  // \telse element.setAttribute(name, value.toString())\n  // })\n  // children.forEach((child) => {\n  // \tappendChild(element, child)\n  //   })\n  //       return element\n  //Custom Components will be functions\n  if (typeof tag === \'function\') {\n    return tag();\n  } // regular html tags will be strings to create the elements\n\n\n  if (typeof tag === \'string\') {\n    // fragments to append multiple children to the initial node\n    var fragments = document.createDocumentFragment();\n    var element = document.createElement(tag);\n\n    for (var _len = arguments.length, children = new Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {\n      children[_key - 2] = arguments[_key];\n    }\n\n    children.forEach(function (child) {\n      if (child instanceof HTMLElement) {\n        fragments.appendChild(child);\n      } else if (typeof child === \'string\') {\n        var textnode = document.createTextNode(child);\n        fragments.appendChild(textnode);\n      } else {\n        // later other things could not be HTMLElement not strings\n        console.log(\'not appendable\', child);\n      }\n    });\n    element.appendChild(fragments); // Merge element with attributes\n    //  console.log(\'attrs ...\', attrs);\n\n    Object.entries(attrs || {}).forEach(function (_ref) {\n      var _ref2 = (0,_babel_runtime_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_2__["default"])(_ref, 2),\n          name = _ref2[0],\n          value = _ref2[1];\n\n      if (name.startsWith(\'on\') && name.toLowerCase() in window) element.addEventListener(name.toLowerCase().substr(2), value); // else element.setAttribute(name, value.toString())\n    });\n    Object.assign(element, attrs);\n    return element;\n  }\n}\n\nvar Header = function Header() {\n  return dom("h5", {\n    className: "modal-title f-w-600",\n    id: "exampleModalLabel"\n  }, "More Info:");\n};\n\nvar finalreg = function finalreg(e) {\n  alert();\n};\n\nvar Footer = function Footer() {\n  function handleClick(e) {\n    e.preventDefault();\n    var form1 = JSON.parse($(\'#contactform\').jform());\n    console.log(\'The link was clicked.\');\n    var form2 = JSON.parse($(\'#regform\').jform()); //form1 = {form1, ...form2}\n\n    var htmlform = document.getElementById(\'regform\');\n\n    var _Array$from11 = Array.from(htmlform === null || htmlform === void 0 ? void 0 : htmlform.vendor),\n        _Array$from12 = (0,_babel_runtime_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_2__["default"])(_Array$from11, 2),\n        input1 = _Array$from12[0],\n        input2 = _Array$from12[1];\n\n    console.log("form i is ", input1.value, " and 2 is ", input2.value); // toastr.error(\'No vendor name or unchecked options\');\n\n    var vendorowner = false;\n    console.log(\' htmlformname \', htmlform.vendorname.value);\n\n    if (htmlform.vendorname.value.length < 1) {\n      toastr.error(\'No vendor name or unchecked options\');\n      throw new Error("error of input");\n      return;\n    }\n\n    console.log(\' firstname \', form2.firstname, new String(form2.firstname).length == 0, \' lastname \', form2.lastname);\n\n    if (new String(form2.firstname).length == 0) {\n      toastr.error(\'firstname cannot be  empty\');\n      throw new Error(\'error\');\n    }\n\n    if (form2.lastname.length === 0) {\n      toastr.error(\'lastname cannot be  empty\');\n      throw new Error(\'error\');\n    }\n\n    if (input1.checked === false && input2.checked === false) {\n      Swal.fire({\n        icon: \'error\',\n        text: \'Options are not checked !\'\n      });\n      return;\n    }\n\n    if (input1.checked === true) {\n      vendorowner = true; // alert(\'1 on \');\n\n      form1.vendorowner = vendorowner;\n    } else if (input2.checked === true) {\n      vendorowner = false; // form1.vendoroption = form2.vendor;\n\n      form1.vendorowner = vendorowner; // alert(\'2 on \') ;\n    }\n\n    console.log(" form1 ", form1); // form1  = {...form2,vendoroption:vendoroption}\n\n    form1.vendorname = form2.vendorname;\n    form1.firstname = form2.firstname;\n    form1.lastname = form2.lastname;\n    console.log(" form1 ", form1);\n    form1.role = [];\n    form1.permission = [];\n    var reg = new _register__WEBPACK_IMPORTED_MODULE_9__.register();\n\n    var msg = function msg() {\n      if (input1.checked === true) {\n        // alert(\'1 on\');\n        Swal.fire({\n          icon: \'success\',\n          text: \'Registration Successful! You will receive an email through which you will activate your account soonest\'\n        }).then(function (result) {\n          if (result.isConfirmed) {\n            console.log(\'cancelling\'); // Swal.close();\n\n            window.location.href = \'../adminlogin\';\n          }\n        });\n      } else if (input2.checked === true) {\n        //  alert(\'2 on \');\n        Swal.fire({\n          icon: \'success\',\n          text: \'Registration Successful! Contact your administrator to activate your account.\'\n        }).then(function (result) {\n          if (result.isConfirmed) {\n            console.log(\'cancelling\'); //Swal.close();\n\n            window.location.href = \'../adminlogin\';\n          }\n        });\n      }\n    };\n\n    var errormg = function errormg() {\n      Swal.fire({\n        icon: \'error\',\n        text: \'Oops.Check your connection!\'\n      });\n    };\n\n    reg.register(form1, msg, errormg);\n    $(\'#exampleModal\').modal(\'hide\'); //show modal\n    // $(\'#exampleModal\').modal(\'dispose\');//show modal\n\n    var mydialogpos = document.querySelector(".modal");\n    mydialogpos.remove();\n  }\n\n  return dom("button", {\n    className: "btn btn-primary",\n    type: "button",\n    onClick: handleClick\n  }, "Continue");\n};\n\nvar RegForm = function RegForm() {\n  return dom("form", {\n    className: "needs-validation",\n    id: "regform"\n  }, dom("div", {\n    className: "form-group"\n  }, dom("label", {\n    "for": "exampleFormControlFile1"\n  }, dom("small", null, "What is the name of your vendor?")), dom("input", {\n    type: "text",\n    className: "form-control-file",\n    id: "vendorname",\n    name: "vendorname"\n  })), dom("div", {\n    className: "form-group"\n  }, dom("label", {\n    "for": "exampleFormControlFile1"\n  }, dom("small", null, "What is your firstname?")), dom("input", {\n    type: "text",\n    className: "form-control-file",\n    id: "firstname",\n    name: "firstname"\n  })), dom("div", {\n    className: "form-group"\n  }, dom("label", {\n    "for": "exampleFormControlFile1"\n  }, dom("small", null, "What is your lastname?")), dom("input", {\n    type: "text",\n    className: "form-control-file",\n    id: "lastname",\n    name: "lastname"\n  })), dom("div", {\n    className: "form-check"\n  }, dom("input", {\n    className: "form-check-input",\n    type: "radio",\n    name: "vendor"\n  }), dom("label", {\n    className: "form-check-label",\n    "for": "defaultCheck1"\n  }, "Yes,I\'m a Vendor Owner")), dom("div", {\n    className: "form-check"\n  }, dom("input", {\n    className: "form-check-input",\n    type: "radio",\n    name: "vendor"\n  }), dom("label", {\n    className: "form-check-label",\n    "for": "defaultCheck2"\n  }, "No,I belong to a Vendor")));\n}; //register form\n\n\n$(\'#contactform\').submit(\'submit\', function (e) {\n  e.preventDefault(); //invoke a dialog\n\n  var contactform = document.getElementById(\'contactform\');\n\n  if ((contactform === null || contactform === void 0 ? void 0 : contactform.password.value) !== (contactform === null || contactform === void 0 ? void 0 : contactform.confirmPassword.value)) {\n    Swal.fire({\n      icon: \'error\',\n      text: \'Password does not match!\'\n    });\n    return; //  $(\'#regerror\').empty().html(\'<br/><div class="alert alert-danger"> <span class="glyphicon glyphicon-info-sign"></span> &nbsp; \'+\'both password and password confirmation must be the same\' +\' !</div>\');\n    // return ;   \n  }\n\n  $((0,_lithtmlscript__WEBPACK_IMPORTED_MODULE_7__.dialog)("", "", "")).insertAfter(".back-btn"); //invoke the dialog box \n\n  var mydialogpos = document.querySelector(".modal-dialog");\n  mydialogpos.classList.add("modal-dialog-centered"); // center  it verticallycl\n\n  $(".modal-header").html(Header());\n  $(".modal-body").html(RegForm());\n  $(".modal-footer").html(Footer()); //toastr.error(\'No vendor name or unchecked options\');\n\n  var agree = document.getElementById(\'customControlAutosizing1\');\n\n  if (!agree.checked) {\n    toastr.error("you have not agreed to terms");\n    return;\n  }\n\n  $(\'#exampleModal\').modal(\'show\'); //show modal\n}); // create coupon \n\n$(\'#savecoupon\').on(\'click\', function (e) {\n  e.preventDefault();\n  Swal.fire({\n    icon: \'question\',\n    // title: \'Multi-Vendor Owner\',\n    text: \'Do you want to create coupon on this product ?\',\n    showCancelButton: true,\n    allowOutsideClick: false\n  }).then(function (result) {\n    if (result.isConfirmed) {\n      var general = JSON.parse($(\'#general2\').jform()); //  console.log(\'general \', general, \'coupontitle\', general.coupontitle);\n\n      var usage = JSON.parse($(\'#usage2\').jform()); //usage\n      // console.log(\'usage \', usage, \' perlimit \', usage.perlimit);\n\n      var rest = JSON.parse($(\'#rest\').jform()); // console.log(\'rest \', rest, \' maxspend \', rest.maxspend);\n      //const totalform = $.extend(($.extend(usage,general)),rest);\n\n      var total = _objectSpread(_objectSpread(_objectSpread({}, general), rest), usage); // console.log(\'total \', { ...general, ...rest, ...usage }, \'minspend \', total.minspend);\n      // check\n\n\n      if (total.maxspend.length < 1 || total.minspend.length < 1 || total.percustomer.length < 1 || total.perlimit.length < 1 || total.couponqty.length < 1) {\n        toastr.error(\'Empty input  is  not permitted\');\n        return;\n      }\n\n      if (total.couponcategory.length < 1 || total.coupontitle.length < 1 || total.enddate.length < 1 || total.startdate.length < 1) {\n        toastr.error(\'Empty input  is  not permitted\');\n        return;\n      }\n\n      if (parseInt(total.maxspend) < 0 || parseInt(total.minspend) < 0 || parseInt(total.percustomer) < 0 || parseInt(total.perlimit) < 0 || parseInt(total.couponqty) < 0 || parseInt(total.discountype) < 0) {\n        console.log(\'entered if \'); // Swal.fire({\n        //   icon: "error",\n        //   text: "Negative inputs not permitted"\n        // }).then((r: any) => {\n        //   if (r.isDismissed) {\n        //     return;\n        //   }\n        // })\n\n        toastr.error(\'Empty 3 input  is  not permitted\');\n        return;\n      }\n\n      total.couponproductid = total.prodsearch;\n      total.vendor = localStorage.getItem(\'vendorname\');\n      var freeshippingstatus = document.getElementById(\'checkbox-primary-1\');\n      var couponstatus = document.getElementById(\'checkbox-primary-2\');\n\n      if (freeshippingstatus.checked) {\n        total.freeshipping = \'yes\';\n      } else {\n        total.freeshipping = \'no\';\n      }\n\n      if (couponstatus.checked) {\n        total.couponstatus = \'yes\';\n      } else {\n        total.couponstatus = \'no\';\n      }\n\n      delete total.prodsearch;\n      console.log(\'final product search ...\', total); //send to server \n\n      var mycoupon = new _coupon__WEBPACK_IMPORTED_MODULE_12__.coupon();\n      mycoupon.savecoupon(total);\n    } else if (result.isDismissed) {\n      Swal.fire({\n        icon: "error",\n        text: "cancelled"\n      });\n    }\n  });\n}); // add sub-category for physical product\n\n$(\'#catsub\').on(\'click\', function (e) {\n  e.preventDefault();\n  $((0,_lithtmlscript__WEBPACK_IMPORTED_MODULE_7__.dialog)("", "", "")).insertAfter(".page-main-header"); //invoke the dialog box\n\n  var mydialogpos = document.querySelector(".modal-dialog");\n  mydialogpos.classList.add("modal-dialog-centered"); // center  it verticallycl\n\n  $(".modal-header").html(function () {\n    return dom("h5", {\n      className: "modal-title f-w-600",\n      id: "exampleModalLabel"\n    }, "Add Sub-Category ");\n  }());\n  $(\'.modal-body\').html(function () {\n    function loadcategory(e) {\n      // load product from  here \n      e.preventDefault(); // append  to  category  from  here \n\n      (0,_tsbackendscript_ajaxfunctioncall__WEBPACK_IMPORTED_MODULE_8__.processrequest2)("".concat(_url__WEBPACK_IMPORTED_MODULE_5__.backendurl, "/categories/category"), \'get\', {\n        \'Content-Type\': "application/json",\n        \'Authorization\': \'Bearer \' + localStorage.getItem(\'token\')\n      }, function (r) {\n        var options = new StringBuilder(); //console.log(\'r\', r)\n\n        options.append("<option value=\'\'>Select Category</option>");\n\n        var _iterator = _createForOfIteratorHelper(r),\n            _step;\n\n        try {\n          for (_iterator.s(); !(_step = _iterator.n()).done;) {\n            var cat = _step.value;\n            // console.log( \' id \',cat.id) ;\n            options.append("<option value=\'".concat(cat.id, "\'>").concat(cat.categoryname, "</option>")); //console.log( \' id \',cat.id) ;\n          } //append category \n\n        } catch (err) {\n          _iterator.e(err);\n        } finally {\n          _iterator.f();\n        }\n\n        $(\'#prdcategory\').empty().html(options.toString());\n      });\n    }\n\n    return dom("form", {\n      className: "needs-validation",\n      id: "catform"\n    }, dom("div", {\n      className: "form"\n    }, dom("div", {\n      className: "form-group"\n    }, dom("label", {\n      "for": "validationCustom01",\n      className: "mb-1"\n    }, "Sub Category Name :"), dom("input", {\n      className: "form-control",\n      id: "validationCustom01",\n      type: "text",\n      name: "subcategoryname"\n    })), dom("div", {\n      className: "form-group"\n    }, dom("select", {\n      className: "form-control",\n      id: "prdcategory",\n      name: "categoryid"\n    }, dom("option", {\n      value: ""\n    }, "Select Category"))), dom("div", {\n      className: "form-group"\n    }, dom("label", {\n      "for": "validationCustom01",\n      className: "mb-1"\n    }, "Price Range:"), dom("input", {\n      className: "form-control",\n      id: "validationCustom03",\n      type: "text",\n      name: "pricerange"\n    })), dom("div", {\n      className: "form-group mb-0"\n    }, dom("label", {\n      "for": "validationCustom02",\n      className: "mb-1"\n    }, "Sub Category Image :"), dom("input", {\n      className: "form-control",\n      id: "validationCustom02",\n      type: "file",\n      name: "imageur"\n    }))));\n  }());\n  $(".modal-footer").html(function () {\n    function savesubCategory(e) {\n      e.preventDefault();\n      processphysicalanddigitalcategory(\'post\', \'Sub Category\', "".concat(_url__WEBPACK_IMPORTED_MODULE_5__.backendurl, "/subcat/createsubcategory"), \'Do you want to create sub-category\', \'catform\', "sub category created successfuly", \'error creating category\');\n    }\n\n    function close(e) {\n      e.preventDefault();\n      $(\'#exampleModal\').modal(\'hide\');\n      setTimeout(function () {\n        $(\'#exampleModal\').remove();\n      }, 800);\n    }\n\n    return dom("div", null, dom("button", {\n      className: "btn btn-primary",\n      type: "button",\n      onClick: function onClick(e) {\n        return savesubCategory(e);\n      }\n    }, "Save"), "\\xA0\\xA0\\xA0", dom("button", {\n      className: "btn btn-secondary",\n      type: "button",\n      "data-dismiss": "modal",\n      onClick: function onClick(e) {\n        return close(e);\n      }\n    }, "Close"));\n  }());\n  $(\'#exampleModal\').modal(\'show\'); //show modal\n  //then append  category to select \n\n  $(\'#prdcategory\').empty().html( // append  to  category  from  here \n  (0,_tsbackendscript_ajaxfunctioncall__WEBPACK_IMPORTED_MODULE_8__.processrequest2)("".concat(_url__WEBPACK_IMPORTED_MODULE_5__.backendurl, "/categories/category"), \'get\', {\n    \'Content-Type\': "application/json",\n    \'Authorization\': \'Bearer \' + localStorage.getItem(\'token\')\n  }, function (r) {\n    var options = new StringBuilder(); //console.log(\'r\', r)\n\n    options.append("<option value=\'\'>Select Category</option>");\n\n    var _iterator2 = _createForOfIteratorHelper(r),\n        _step2;\n\n    try {\n      for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n        var cat = _step2.value;\n        // console.log( \' id \',cat.id) ;\n        options.append("<option value=\'".concat(cat.id, "\'>").concat(cat.categoryname, "</option>")); //console.log( \' id \',cat.id) ;\n      } //append category \n\n    } catch (err) {\n      _iterator2.e(err);\n    } finally {\n      _iterator2.f();\n    }\n\n    $(\'#prdcategory\').empty().html(options.toString());\n  }));\n}); //add category for physical  products\n\n$(\'#savecategory\').on(\'click\', function (e) {\n  e.preventDefault();\n  $((0,_lithtmlscript__WEBPACK_IMPORTED_MODULE_7__.dialog)("", "", "")).insertAfter(".page-main-header"); //invoke the dialog box \n\n  var mydialogpos = document.querySelector(".modal-dialog");\n  mydialogpos.classList.add("modal-dialog-centered"); // center  it verticallycl\n\n  $(".modal-header").html(function () {\n    return dom("h5", {\n      className: "modal-title f-w-600",\n      id: "exampleModalLabel"\n    }, "Add Physical Product");\n  }());\n  $(".modal-body").html(function () {\n    return dom("form", {\n      className: "needs-validation",\n      id: "catform"\n    }, dom("div", {\n      className: "form"\n    }, dom("div", {\n      className: "form-group"\n    }, dom("label", {\n      "for": "validationCustom01",\n      "class": "mb-1"\n    }, "Category Name :"), " ", dom("input", {\n      className: "form-control",\n      id: "validationCustom01",\n      type: "text",\n      name: "categoryname"\n    })), dom("div", {\n      className: "form-group"\n    }, dom("label", {\n      "for": "validationCustom01",\n      "class": "mb-1"\n    }, "Price Range Name :"), " ", dom("input", {\n      className: "form-control",\n      id: "validationCustom01",\n      type: "text",\n      name: "pricerange"\n    })), dom("div", {\n      className: "form-group mb-0"\n    }, dom("label", {\n      "for": "validationCustom02",\n      "class": "mb-1"\n    }, "Category Image :"), " ", dom("input", {\n      className: "form-control",\n      id: "validationCustom02",\n      type: "file",\n      name: "imageurl"\n    }))));\n  }());\n  $(".modal-footer").html(function () {\n    function saveCategory(e) {\n      e.preventDefault();\n      processphysicalanddigitalcategory(\'post\', \'Category\', "".concat(_url__WEBPACK_IMPORTED_MODULE_5__.backendurl, "/categories/category"), \'Do you want to create category\', \'catform\', "category created successfuly", \'error creating category\');\n    }\n\n    function close(e) {\n      e.preventDefault();\n      $(\'#exampleModal\').modal(\'hide\');\n      setTimeout(function () {\n        $(\'#exampleModal\').remove();\n      }, 800);\n    }\n\n    return dom("div", null, dom("button", {\n      className: "btn btn-primary",\n      type: "button",\n      onClick: function onClick(e) {\n        return saveCategory(e);\n      }\n    }, "Save"), "\\xA0\\xA0\\xA0", dom("button", {\n      className: "btn btn-secondary",\n      type: "button",\n      "data-dismiss": "modal",\n      onClick: function onClick(e) {\n        return close(e);\n      }\n    }, "Close"));\n  }()); //toastr.error(\'No vendor name or unchecked options\');\n\n  $(\'#exampleModal\').modal(\'show\'); //show modal\n});\n\nvar processphysicalanddigitalcategory = function processphysicalanddigitalcategory(methodtype, title, url, confirmmsg, formid, successmsg, errormsg) {\n  alertify.confirm(title, confirmmsg, function () {\n    var form = document.getElementById(formid);\n    var formdata = new FormData(form);\n    console.log(\' select \', $("#prdcategory:selected").val()); // alert(formdata.get(\'subcategoryname\') + " categoryid "+ formdata.get(\'categoryid\')) ;\n\n    $(\'#exampleModal\').modal(\'hide\');\n    setTimeout(function () {\n      // $(\'#exampleModal\').hide();\n      $(\'#exampleModal\').remove();\n      console.log(\'resetting tables \');\n      $("#basicScenario2").jsGrid("loadData");\n      console.log(\'reset table \');\n    }, 2000);\n    (0,_tsbackendscript_ajaxfunctioncall__WEBPACK_IMPORTED_MODULE_8__.submitform)(url, formdata, localStorage.getItem(\'token\'), \'text\', methodtype); //send form\n  }, function () {\n    alertify.error(errormsg).set(\'labels\', {\n      ok: \'OK!\',\n      cancel: \'Naa!\'\n    });\n  });\n}; // logout\n\n\n$(\'#logoutme\').on(\'click\', function (e) {\n  e.preventDefault();\n  console.log(\'log out \');\n  Swal.fire({\n    icon: \'question\',\n    // title: \'Multi-Vendor Owner\',\n    text: \'Do you want to Log out ?\',\n    showCancelButton: true,\n    allowOutsideClick: false\n  }).then(function (result) {\n    if (result.isConfirmed) {\n      sessionStorage.clear();\n      window.location.href = \'../adminlogin\';\n    }\n  });\n}); // donwload excel \n\nvar downloads = function downloads(element, name, url) {\n  element.on(\'click\', function (e) {\n    e.preventDefault(); // alert() ;\n\n    Swal.fire({\n      icon: "question",\n      showCancelButton: true,\n      text: "Do you want to downloads the excel file ?"\n    }).then(function (r) {\n      if (r.isConfirmed) {\n        fetch(url, {\n          method: \'get\',\n          headers: {\n            //  \'Accept\': \'application/json, text/plain, */*\',\n            \'Content-Type\': \'application/json; charset=utf-8\',\n            //\'Content-Type\':\'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\',\n            responseType: "blob",\n            \'Authorization\': "Bearer ".concat(localStorage.getItem(\'token\'))\n          } // body: JSON.stringify( {} )\n\n        }).then(function (response) {\n          return response.blob();\n        }).then(function (response) {\n          // element.text(\'downloading\') ;\n          var blob = new Blob([response], {\n            type: \'application/application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\'\n          });\n          var downloadUrl = URL.createObjectURL(blob);\n          var a = document.createElement("a");\n          a.href = downloadUrl;\n          a.download = "".concat(name, ".xlsx");\n          document.body.appendChild(a);\n          a.click();\n          a.remove(); //  element.text(\'download as excel\') ;\n        });\n      } else if (r.isDismissed) {\n        toastr.error("The attempt was  cancelled");\n      }\n    });\n  });\n}; // imglogo[0].src = `${backendurl}/jetstore/${input1.files[0].name}`;\n// imglogo[1].src = `${backendurl}/jetstore/${input1.files[0].name}`;\n// category\n//send message \n\n\nvar sendmessage = function sendmessage(e) {\n  var selecttyperadio = Array.from(document.getElementsByName(\'selectype\'));\n  e.preventDefault();\n  alertify.confirm(\'Message\', \'Do you want to send this Message\', function () {\n    var message = CKEDITOR.instances.editor1.getData();\n    console.log(\'calling\'); // call event subscription \n\n    $.ajax({\n      url: "".concat(_url__WEBPACK_IMPORTED_MODULE_5__.backendurl, "/dispatchEvent"),\n      type: \'GET\',\n      headers: {\n        Authorization: "Bearer ".concat(localStorage.getItem(\'token\'))\n      },\n      dataType: \'text\',\n      data: function () {\n        var inp1 = selecttyperadio[0],\n            inp2 = selecttyperadio[1],\n            inp4 = selecttyperadio[2]; // destructuring of aray of radio buttons\n\n        if (inp1.checked) {\n          return "freshNews=" + message + "&vendorname=" + $(\'#userandvendor\').val();\n        } else if (inp2.checked) {\n          console.log(\'freshnews \', message, \'userid \', $(\'#userandvendor\').val());\n          return "freshNews=" + message + "&userid=" + $(\'#userandvendor\').val();\n        } else if (inp4.checked) {\n          return "freshNews=" + message;\n        }\n      }(),\n      success: function success(response) {\n        console.log(\'response \' + response);\n      }\n    });\n  }, function () {\n    alertify.error(\'Cancel\');\n  });\n};\n\n$(\'#sendmessage\').on(\'click\', function (e) {\n  // sendmessage(e);\n  sendmessage(e);\n});\n\nvar sendmessageversion2 = function sendmessageversion2(e) {\n  e.preventDefault();\n  var selecttyperadio = Array.from(document.getElementsByName(\'selectype\'));\n  var inp1 = selecttyperadio[0],\n      inp2 = selecttyperadio[1],\n      inp4 = selecttyperadio[2]; // destructuring of aray of radio buttons\n\n  if (inp1.checked) {\n    var users_Selected = $(\'#userandvendor\').val();\n    users_Selected.forEach(function (element) {\n      console.log(\' element \', element);\n    });\n  } else if (inp2.checked) {\n    var _users_Selected = $(\'#userandvendor\').val();\n\n    _users_Selected.forEach(function (element) {\n      console.log(\' element \', element);\n    });\n  } else if (inp4.checked) {// subscribetoevent(new EventSource(`${backendurl}/subscribe`),\'latestNews\') ; \n    //setTimeout(sendmessage(e,selecttyperadio),1000) ;\n  }\n}; //page load processing\n\n\nvar subscribetoevent = function subscribetoevent(eventSource, evtype) {\n  // var eventSource = new EventSource(url);\n  // var eventSource = new EventSource(url);\n  eventSource.addEventListener(evtype, function (event) {\n    if (event.data) {\n      console.log(\'from dispatch event \', event.data);\n      toastr.success(\'An Order is placed\'); //  var beepsound = new Audio(\'https://www.soundjay.com/button/sounds/beep-01a.mp3\');\n\n      responsiveVoice.speak(\'An order is placed.\', "US English Female", {\n        volume: 20,\n        pitch: 0.8\n      }); // alertify.success(\'Ok\');\n\n      eventSource.close();\n      console.log($(\'#ordercounter\').text()); // alert($(\'#ordercounter\').text()) ;\n\n      parseInt($(\'#ordercounter\').text()) === 0 ? $(\'#ordercounter\').text(\'1\') : $(\'#ordercounter\').text((parseInt($(\'#ordercounter\').text()) + 1).toString()); // $(\'#ordercounter\').text(parseInt($(\'#ordercounter\').text())===0?\'1\':parseInt($(\'#ordercounter\').text())+1);\n\n      if (datatable !== null && datatable !== undefined) {\n        alert(\'reloading\');\n        datatable.ajax.reload();\n        alert(\'reload\');\n      }\n\n      subscribetoevent(new EventSource("".concat(_url__WEBPACK_IMPORTED_MODULE_5__.backendurl, "/subscribe?vendorname=").concat(localStorage.getItem(\'vendorname\'))), \'vendornews\');\n    }\n  }); // eventSource.addEventListener("message", (event: any) => {\n  //   if (event.data) {\n  //     console.log(\'from dispatch event \', event.data);\n  //     toastr.success(\'message sent successfully\');\n  //     alertify.success(\'Ok\');\n  //     eventSource.close();\n  //   }\n  // });\n  // for error \n\n  eventSource.addEventListener("error", function (event) {\n    if (event.currentTarget.readyState === EventSource.CLOSED) {} else {\n      eventSource.close();\n    }\n  }); // window.onbeforeunload = function () {\n  //   eventSource.close();\n  // }\n  // console.log(\'closing  connection .....\') ;\n  // eventSource.close() ;\n  // return eventSource ;\n}; // document.addEventListener("DOMContentLoaded", function () {\n//   requirejs([\'@asmagin/google-translate-api\'], function (translate:any) {\n//        translate(\'Ik spreek Engels\', {to: \'ig\'}).then((res) => {\n//        console.log(\'right\',res.text);\n//        console.log(res.from.language.iso);   \n//            }).catch((err) => {\n//        console.error(\'error\',err);\n//      });\n//       });\n//     });\n\n\nfunction translateString(_x, _x2) {\n  return _translateString.apply(this, arguments);\n}\n\nfunction _translateString() {\n  _translateString = (0,_babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_0__["default"])( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_3___default().mark(function _callee(str, translateTo) {\n    var text;\n    return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_3___default().wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            translate.engine = "google";\n            translate.key = "AIzaSyDfqVwrOlZJTHGyxS7qnHdQ5XLqVME2EEY";\n            _context.next = 4;\n            return translate(str, translateTo);\n\n          case 4:\n            text = _context.sent;\n            console.log(text);\n\n          case 6:\n          case "end":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _translateString.apply(this, arguments);\n}\n\nvar datatable;\nvar datatable2; // resusable datatable\n\n$(\'#orderproduct\').on(\'click\', function (e) {\n  // alert($(\'#ordid\').val()) ;\n  if (confirm(\'Do you want to send message to this Customer ?\')) {\n    var ordid = $(\'#ordid\').val();\n    var message = CKEDITOR.instances.editor2.getData();\n\n    if (message.length === 0 || message === "" || message === \'Type message to send to this user\') {\n      var content = (0,_tsbackendscript_ajaxfunctioncall__WEBPACK_IMPORTED_MODULE_8__.contenttypewithtoken)(localStorage.getItem(\'token\'));\n      (0,_tsbackendscript_ajaxfunctioncall__WEBPACK_IMPORTED_MODULE_8__.setajax)(\'text\', "".concat(_url__WEBPACK_IMPORTED_MODULE_5__.backendurl, "/order/sendinfoonstock/").concat(ordid), \'get\', "", function (response) {\n        console.log(\'response\', response);\n        toastr.success(\'Message sent successfully\');\n      }, function () {}, content);\n    } else {\n      toastr.error(\'the message cannot be empty\');\n      return;\n    }\n  } else {\n    toastr.error(\'cancelled\');\n  }\n}); //print div\n\nfunction Popup(data) {\n  var myWindow = window.open(\'\', \'my div\', \'height=400,width=600\');\n  myWindow.document.write(\'<html><head><title>my div</title>\');\n  /*optional stylesheet*/\n  //myWindow.document.write(\'<link rel="stylesheet" href="main.css" type="text/css" />\');\n\n  myWindow.document.write(\'</head><body >\');\n  myWindow.document.write(data);\n  myWindow.document.write(\'</body></html>\');\n  myWindow.document.close(); // necessary for IE >= 10\n  //myWindow.onload=function(){ // necessary if the div contain images\n\n  myWindow.focus(); // necessary for IE >= 10\n\n  myWindow.print();\n  setTimeout(function () {\n    window.close();\n  }, 1); // for chrome\n  // myWindow.close();\n  // };\n} //generte invoice \n\n\n$(\'#geninvoice\').on(\'click\', function () {\n  if (confirm(\'Do you want to generate invoice\')) {\n    //document.getElementById("luck").contentDocument.body.innerHTML = $(\'#tableattached\').html();\n    //  setTimeout(function(){\n    //   luck.contentWindow.print();\n    //  },\n    //  10);\n    setTimeout(function () {\n      Popup($(\'#myprint\').html());\n    }, 200);\n  }\n}); //view other attached order and also in trans\n\n$(\'#viewattached\').on(\'click\', function (e) {\n  var content = (0,_tsbackendscript_ajaxfunctioncall__WEBPACK_IMPORTED_MODULE_8__.contenttypewithtoken)(localStorage.getItem(\'token\'));\n  var ordid = $(\'#orderid\').val(); //alert(ordid) ;\n\n  (0,_tsbackendscript_ajaxfunctioncall__WEBPACK_IMPORTED_MODULE_8__.setajax)(\'json\', "".concat(_url__WEBPACK_IMPORTED_MODULE_5__.backendurl, "/order/getorders/").concat(ordid), \'get\', "", function (response) {\n    console.log(\'response\', response); //process the response\n    // firstname,price,total,orderdate,productname,paymentstatus\n\n    var myprint = document.getElementById(\'myprint\');\n    var body2 = response.map(function (element) {\n      console.log(\'element\', element);\n      return "<tr><td>".concat(element.ordid, "</td><td>").concat(element.paymentstatus, "</td>\\n      <td>").concat(element.ordstatus, "</td><td>").concat(element.orderdate, "</td>\\n      <td>").concat(element.total, "</td><td>").concat(element.firstname, "</td>\\n      <td>").concat(element.country, "</td><td>").concat(element.tax, "</td>\\n      <td>").concat(element.productname, "</td><td>").concat(element.price, "</td>\\n      <td>").concat(element.state, "</td>\\n           </tr>");\n    }).join("");\n    console.log("body2 " + body2);\n    $(\'#myprint\').empty().html(body2); //fill print\n    //sendmailtocust(body2) ;\n\n    $(\'#attachedorder\').empty().html(body2);\n    $(\'#tableattached\').slideToggle();\n  }, function () {}, content);\n});\n$(\'#closeorder\').on(\'click\', function (e) {\n  $(\'#orderformbody\').slideToggle();\n  CKEDITOR.instances.editor2.destroy();\n});\n$(\'#viewclose\').on(\'click\', function (e) {\n  $(\'#orderformbody\').slideToggle();\n  CKEDITOR.instances.editor2.destroy();\n});\n$(\'#closeinvoice\').on(\'click\', function (e) {\n  $(\'#tableattached\').slideToggle();\n});\n$(document).on("click", "#redirectlogin", function () {\n  $(\'#exampleModal\').modal(\'hide\'); //show modal\n\n  $(\'#exampleModal\').remove();\n});\n$("#uploadremitted").on(\'click\', function (e) {\n  // setajaxwithform() ;remittalform\n  Swal.fire({\n    icon: \'question\',\n    text: \'Is this a remitted file?Continue if it is?\',\n    showCancelButton: true\n  }).then(function (r) {\n    if (r.isConfirmed) {\n      e.preventDefault();\n      e.stopPropagation(); // const content  = contenttypewithtoken(localStorage.getItem(\'token\')) ; \n\n      var content = {\n        "Authorization": "Bearer " + localStorage.getItem("token")\n      };\n      var form = new FormData(document.getElementById("remittalform")); // var input = document.querySelector(\'input[type="file"]\') as HTMLInputElement ;\n      // form.append(\'file\',input.files[0]) ; \n      // let form2 = JSON.stringify(Object.fromEntries(form.entries()));\n      //console.log(\'form \',form2) ;\n\n      (0,_tsbackendscript_ajaxfunctioncall__WEBPACK_IMPORTED_MODULE_8__.setajaxwithform)(\'text\', "".concat(_url__WEBPACK_IMPORTED_MODULE_5__.backendurl, "/transactions/submitremittalform"), \'post\', form, function (response) {\n        console.log(\'response\', response);\n        toastr.success(\'Message sent successfully\');\n      }, function () {}, content);\n    } else {\n      toastr.error(\'cancelled\');\n    }\n  });\n});\nvar socket = null;\nvar stompClient = null;\nvar usermap = new Map();\n\nvar pageload = function pageload(url) {\n  console.log(\' url \', url); // alert(url) ;\n  //delay for the localstorage to  set \n  //subscribe to event for all users \n\n  setTimeout(function () {\n    (0,_tsbackendscript_ajaxfunctioncall__WEBPACK_IMPORTED_MODULE_8__.processrequest2)("".concat(_url__WEBPACK_IMPORTED_MODULE_5__.backendurl, "/vendor/vendor?vendorname=").concat(localStorage.getItem(\'vendorname\')), "get", {\n      \'Content-Type\': "application/json",\n      \'Authorization\': \'Bearer \' + localStorage.getItem(\'token\')\n    }, function (r) {\n      // console.log(\' r in  index \',r) ;\n      r = JSON.parse(r);\n      var imglogo = document.getElementsByClassName(\'vendorlogo\'); //  console.log(\' url \',`${backendurl}/jetstore/${r.vendorlogo}`);\n\n      if (r.vendorlogo) {\n        imglogo[0].src = "".concat(_url__WEBPACK_IMPORTED_MODULE_5__.backendurl, "/jetstore/").concat(r.vendorlogo);\n        imglogo[1].src = "".concat(_url__WEBPACK_IMPORTED_MODULE_5__.backendurl, "/jetstore/").concat(r.vendorlogo);\n      }\n    }); //load profile image in side bar \n\n    (0,_tsbackendscript_ajaxfunctioncall__WEBPACK_IMPORTED_MODULE_8__.processrequest2)("".concat(_url__WEBPACK_IMPORTED_MODULE_5__.backendurl, "/profile/profile2/").concat(localStorage.getItem(\'ack\')), "get", {\n      \'Content-Type\': "application/json",\n      \'Authorization\': \'Bearer \' + localStorage.getItem(\'token\')\n    }, function (r) {\n      //console.log(\' profile image in  index \', r);\n      r = JSON.parse(r);\n\n      if (r.profilepicture) {\n        $(\'#profileimg\').prop(\'src\', "".concat(_url__WEBPACK_IMPORTED_MODULE_5__.backendurl, "/jetstore/").concat(r.profilepicture));\n      }\n    });\n  }, 2000); //set local variables \n\n  var token = $.trim(localStorage.getItem("token")); //console.log("the token ",token);\n  //alert(token);\n\n  var decoded = jwt_decode(token); //console.log(decoded, \'exp \', decoded[\'exp\'], \'sub \', decoded.sub, \'vendorname \', decoded.vendorname, \' ack \', decoded.ack);\n\n  var now = Date.now().valueOf() / 1000;\n  var tokenexp = parseInt(decoded.exp); //console.log(decoded.username);\n\n  localStorage.setItem(\'vendorname\', decoded.vendorname);\n  localStorage.setItem(\'ack\', decoded.ack);\n  localStorage.setItem(\'username\', decoded.username);\n  $(\'.mt-3\').text(new String(localStorage.getItem(\'username\')).toUpperCase());\n  console.log(\'subscribing to event ....\'); //subscribetoevent(new EventSource(`${backendurl}/subscribe`), \'latestNews\');\n  // subscribetoevent(new EventSource(`${backendurl}/eventbyuser?userid=${localStorage.getItem(\'ack\')}`), \'usernews\');\n\n  subscribetoevent(new EventSource("".concat(_url__WEBPACK_IMPORTED_MODULE_5__.backendurl, "/subscribe?vendorname=").concat(localStorage.getItem(\'vendorname\'))), \'vendornews\');\n  console.log("username2 ", localStorage.getItem(\'username\'));\n  var myname = localStorage.getItem(\'username\').toUpperCase();\n  console.log(\'before switch myname \', myname); // translate(\'Ik spreek Engels\', {to: \'ig\'}).then((res) => {\n  //        console.log(\'right\',res.text);\n  //        console.log(res.from.language.iso);   \n  //            }).catch((err) => {\n  //        console.error(\'error\',err);\n  //      });\n  //console.log(translate) ;\n  //translateString("hello world of language","ig");\n\n  switch (url) {\n    case urlpages[0]:\n      // for index page\n      //alert(\'got here\');\n      console.log(\'myname \', myname, " switch username ", localStorage.getItem(\'username\'));\n      (0,_miscellaneous__WEBPACK_IMPORTED_MODULE_6__.invalidatetoken)(tokenexp); // const myname = new String(localStorage.getItem(\'username\')).toUpperCase();\n\n      console.log(\'myname \', myname);\n      $(\'.alert\').prepend("<strong>Welcome &nbsp;&nbsp;".concat(myname, "</strong>")); // document.querySelector("#thefooter")?.append(Headline()) ;  \n      //for jsx testing which is working\n      //subscribe to event for specific users\n\n      break;\n\n    case urlpages[urlpages.length - 2]:\n      //for  profile\n      (0,_tsbackendscript_ajaxfunctioncall__WEBPACK_IMPORTED_MODULE_8__.checktoken)(localStorage.getItem(\'token\')); // call ajax function to  load  profile  data \n\n      var results = {}; //profilename\n\n      var username = localStorage.getItem(\'username\');\n      $(\'#profilename\').text("".concat(username.toUpperCase()));\n      (0,_tsbackendscript_ajaxfunctioncall__WEBPACK_IMPORTED_MODULE_8__.processrequest2)("".concat(_url__WEBPACK_IMPORTED_MODULE_5__.backendurl, "/profile/profile/").concat(localStorage.getItem(\'ack\')), "get", {\n        \'Content-Type\': "application/json",\n        \'Authorization\': \'Bearer \' + localStorage.getItem(\'token\')\n      }, function (r) {\n        if (r) {\n          // if sucessful\n          //  pull user details by userid.chaining it with fetch\n          r = JSON.parse(r); // console.log(\' calling  user  details \', r);\n          // if (r.profilepicture) {\n          //load profile image for profile page\n\n          setTimeout(function () {\n            console.log(\' profile image loaded \', r.profilepicture);\n            $(\'.profileimg\').prop(\'src\', "".concat(_url__WEBPACK_IMPORTED_MODULE_5__.backendurl, "/jetstore/").concat(r.profilepicture));\n          }, 2000); //}\n          // delay for  sometimes\n\n          setTimeout(function () {\n            (0,_tsbackendscript_ajaxfunctioncall__WEBPACK_IMPORTED_MODULE_8__.processrequest2)("".concat(_url__WEBPACK_IMPORTED_MODULE_5__.backendurl, "/finduser/").concat(localStorage.getItem(\'ack\')), \'get\', {\n              \'Content-Type\': "application/json",\n              \'Authorization\': \'Bearer \' + localStorage.getItem(\'token\')\n            }, function (user) {\n              //console.log(\' user \', user);\n              user = JSON.parse(user);\n              var _user = user,\n                  firstname = _user.firstname,\n                  lastname = _user.lastname,\n                  email = _user.email;\n              console.log(firstname, lastname, email);\n              r.firstname = firstname;\n              r.lastname = lastname;\n              r.email = email;\n              console.log(\' r  total \', r, \' dob \', r.dob, \' location \', r.location);\n              $(\'#top-profile\').empty().html(fullprofile(r, email, r.dob, r.location));\n            });\n          }, 2000);\n        }\n      });\n\n      if ($.isEmptyObject(results)) {\n        console.log(\'no profile  uodate\'); //  $(\'.profile-details\').empty().html("<span>No profile update yet</span>")\n        // $(\'#top-profile\').empty().html("<span>No profile update yet</span>")\n      } else {}\n\n      break;\n\n    case urlpages[urlpages.length - 8]:\n      // for create  user page\n      console.log(\'url \', urlpages[urlpages.length - 8]); // fill users for  search  \n      // console.log(\'usersearch \',$(\'#usersearch\').val())\n\n      $(".usersearch").select2({\n        placeholder: "search your users by name",\n        minimumInputLength: 1,\n        ajax: {\n          url: "".concat(_url__WEBPACK_IMPORTED_MODULE_5__.backendurl, "/usersearch"),\n          headers: {\n            Authorization: "Bearer ".concat(localStorage.getItem(\'token\'))\n          },\n          dataType: \'json\',\n          data: function data(params) {\n            // console.log(\' params \',params);\n            var vendorname2 = localStorage.getItem(\'vendorname\');\n            return {\n              action_users: params.term,\n              // search term\n              vendorname: vendorname2,\n              page: params.page\n            };\n          },\n          processResults: function processResults(data) {\n            // const data2  =  [data] ;\n            // console.log(data);\n            return {\n              results: $.map(data, function (obj) {\n                // console.log(\'obj in  map \',obj);\n                return {\n                  id: obj.id,\n                  text: obj.firstname\n                };\n              })\n            };\n          }\n        }\n      });\n      break;\n\n    case "".concat(_url__WEBPACK_IMPORTED_MODULE_5__.loginurl, "/transactions"):\n      datatable2 = (0,_tsbackendscript_ajaxfunctioncall__WEBPACK_IMPORTED_MODULE_8__.onloaddatatable2)(\'#orderformbody\', \'#trans\', _url__WEBPACK_IMPORTED_MODULE_5__.backendurl, [{\n        data: "orderid",\n        defaultContent: ""\n      }, {\n        data: "userid",\n        defaultContent: ""\n      }, {\n        data: "username",\n        defaultContent: ""\n      }, {\n        data: "date",\n        defaultContent: ""\n      }, {\n        data: "paymentstatus",\n        defaultContent: ""\n      }, {\n        data: "paymentmethod",\n        defaultContent: ""\n      }, {\n        data: "deliverystatus",\n        defaultContent: ""\n      }, {\n        data: "amount",\n        defaultContent: ""\n      }, {\n        data: "remitted",\n        defaultContent: ""\n      }], "transactions/load?vendorname=".concat(localStorage.getItem(\'vendorname\')), datatable2, function () {\n        CKEDITOR.replace(\'editor2\');\n        CKEDITOR.instances[\'editor2\'].setData(\'Type message to send to this user about this stock\');\n      }); //   new $.fn.dataTable.Buttons(datatable2, {\n      //     buttons: [\n      //         \'copy\', \'excel\', \'pdf\'\n      //     ]\n      // } );\n      // datatable2.buttons().container()\n      //     .appendTo( $(\'.col-sm-6:eq(0)\', datatable2.table().container() ) );  \n      // $(\'#trans\').dataTable({\n      //   select: {\n      //     selector: \'td:not(:first-child)\',\n      //     style: \'os\'\n      //   },\n      //   pageLength:20,\n      //   processing: true,\n      //   serverSide: false,\n      //   "ajax": {\n      //     type: \'GET\',\n      //     url: `${backendurl}/transactions/load?vendorname=${localStorage.getItem(\'vendorname\')}`,\n      //    // dataSrc:"",\n      //     headers: {\n      //       "Authorization":"Bearer " +(localStorage.getItem(\'token\') as string).trim()\n      //     },\n      //   },\n      //   "columns": [{data: "orderid",defaultContent :""},\n      //     {data: "userid",defaultContent :""},\n      //    {data: "username",defaultContent :""},\n      //   {data: "date",defaultContent :""},\n      //   {data: "paymentstatus",defaultContent :""},\n      //  {data: "paymentmethod",defaultContent :""},\n      //  {data: "deliverystatus",defaultContent :""},{data: "amount",defaultContent :""},\n      //        ],\n      //   "order": [[1, \'asc\']],\n      //   "sPaginationType": "full_numbers",\n      //   "autowidth":true,\n      //   "destroy": true\n      // });\n\n      break;\n\n    case "".concat(_url__WEBPACK_IMPORTED_MODULE_5__.loginurl, "/order"):\n      // onloaddatawithfetch(`${backendurl}/order/productordered?vendorname=${localStorage.getItem(\'vendorname\')}`)  \n      datatable = (0,_tsbackendscript_ajaxfunctioncall__WEBPACK_IMPORTED_MODULE_8__.onloaddatatable2)(\'#orderformbody\', \'#basic-1\', _url__WEBPACK_IMPORTED_MODULE_5__.backendurl, [{\n        data: "id",\n        defaultContent: ""\n      }, {\n        data: "ordid",\n        defaultContent: ""\n      }, {\n        data: "paymentstatus",\n        defaultContent: ""\n      }, {\n        data: "paymentmethod",\n        defaultContent: ""\n      }, {\n        data: "ordstatus",\n        defaultContent: ""\n      }, {\n        data: "orderdate",\n        defaultContent: ""\n      }, {\n        data: "total",\n        defaultContent: ""\n      }, {\n        data: "firstname",\n        defaultContent: ""\n      }, {\n        data: "country",\n        defaultContent: ""\n      }, {\n        data: "tax",\n        defaultContent: ""\n      }, {\n        data: "productname",\n        defaultContent: ""\n      }, {\n        data: "price",\n        defaultContent: ""\n      }, {\n        data: "state",\n        defaultContent: ""\n      }], "order/productordered?vendorname=".concat(localStorage.getItem(\'vendorname\')), datatable, function () {\n        CKEDITOR.replace(\'editor2\');\n        CKEDITOR.instances[\'editor2\'].setData(\'Type message to send to this user about this stock\');\n      }); // $(\'.sidebar-menu\').tree();\n\n      break;\n\n    case urlpages[12]:\n      // for create  coupon\n      $(\'#couponcategory\').empty().html((0,_tsbackendscript_ajaxfunctioncall__WEBPACK_IMPORTED_MODULE_8__.processrequest2)("".concat(_url__WEBPACK_IMPORTED_MODULE_5__.backendurl, "/categories/category"), \'get\', {\n        \'Content-Type\': "application/json",\n        \'Authorization\': \'Bearer \' + localStorage.getItem(\'token\')\n      }, function (r) {\n        // console.log(\' r \', r) ;\n        var builder = \'\';\n        builder += "<option value=\'\'>Select Category</option>";\n\n        var _iterator3 = _createForOfIteratorHelper(r),\n            _step3;\n\n        try {\n          for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n            var row = _step3.value;\n            builder += "<option value=\'".concat(row.categoryname, "\'>").concat(row.categoryname, "</option>");\n          }\n        } catch (err) {\n          _iterator3.e(err);\n        } finally {\n          _iterator3.f();\n        }\n\n        $(\'#couponcategory\').empty().html(builder.toString());\n      })); //load sub category   \n\n      $(\'#couponsubcategory\').empty().html((0,_tsbackendscript_ajaxfunctioncall__WEBPACK_IMPORTED_MODULE_8__.processrequest2)("".concat(_url__WEBPACK_IMPORTED_MODULE_5__.backendurl, "/subcat/subcategory"), \'get\', {\n        \'Content-Type\': "application/json",\n        \'Authorization\': \'Bearer \' + localStorage.getItem(\'token\')\n      }, function (r) {\n        // console.log(\' sub r \', r) ;\n        var builder = \'\';\n        builder += "<option value=\'\'>Select Subcategory</option>";\n\n        var _iterator4 = _createForOfIteratorHelper(r),\n            _step4;\n\n        try {\n          for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n            var row = _step4.value;\n            builder += "<option value=\'".concat(row.subcategoryname, "\'>").concat(row.subcategoryname, "</option>");\n          }\n        } catch (err) {\n          _iterator4.e(err);\n        } finally {\n          _iterator4.f();\n        }\n\n        $(\'#couponsubcategory\').empty().html(builder.toString());\n      }));\n      $(".prodsearch").select2({\n        placeholder: "search your products by name",\n        minimumInputLength: 1,\n        ajax: {\n          url: "".concat(_url__WEBPACK_IMPORTED_MODULE_5__.backendurl, "/product/findallproduct"),\n          headers: {\n            Authorization: "Bearer ".concat(localStorage.getItem(\'token\'))\n          },\n          dataType: \'json\',\n          data: function data(params) {\n            // console.log(\' params \',params);\n            var vendorname2 = localStorage.getItem(\'vendorname\'); // alert(vendorname2) ;\n\n            return {\n              action_users: params.term,\n              // search term\n              vendorname: vendorname2,\n              page: params.page\n            };\n          },\n          processResults: function processResults(data) {\n            // const data2  =  [data] ;\n            // console.log(data);\n            return {\n              results: $.map(data, function (obj) {\n                // console.log(\'obj in  map \',obj);\n                return {\n                  id: obj.id,\n                  text: obj.productname\n                };\n              })\n            };\n          }\n        }\n      });\n      fetch("".concat(_url__WEBPACK_IMPORTED_MODULE_5__.backendurl, "/coupon/coupon?vendorname=").concat(localStorage.getItem(\'vendorname\'), "&pageSize=10&pageNumber=1"), {\n        method: \'get\',\n        credentials: \'same-origin\',\n        headers: {\n          \'Authorization\': \'Bearer \' + localStorage.getItem(\'token\')\n        }\n      }).then(function (response) {\n        return response.text();\n      }).then(function (response) {\n        // console.log(\'\',response) ;\n        var couponbody = document.getElementById(\'couponbody\');\n        couponbody.innerHTML = response;\n      })["catch"](function (err) {\n        return console.log(err);\n      });\n      break;\n\n    case urlpages[1]:\n      //  for category page\n      //alert(\'seen \'+urlpages[1]) ;\n      // const grid  =  new Grid() ;\n      var data = [{\n        name: \'id\',\n        type: \'hidden\',\n        css: \'hide\'\n      }, {\n        name: "categoryname",\n        type: "text",\n        align: "left",\n        width: 80,\n        validate: function validate(value) {\n          // if (value > 0) {\n          return true; //}\n        }\n      }, {\n        name: "pricerange",\n        align: "left",\n        type: "text",\n        width: 50 // itemTemplate: function (value: any, item: any) {\n        //   console.log(\' value \', value, \' item \', item);\n        // },\n\n      }, // {\n      //   name:"imageurl",align:"left",type:"file",width:80,\n      // },\n      {\n        type: "control"\n      }];\n      (0,_tables__WEBPACK_IMPORTED_MODULE_13__.createtables)("".concat(_url__WEBPACK_IMPORTED_MODULE_5__.backendurl, "/categories/category"), localStorage.getItem(\'token\'), data);\n      downloads($(\'#dwdexcel\'), \'category\', "".concat(_url__WEBPACK_IMPORTED_MODULE_5__.backendurl, "/categories/filereport"));\n      break;\n\n    case urlpages[2]:\n      // for sub category \n      var data2 = [{\n        name: \'id\',\n        type: \'hidden\',\n        css: \'hide\'\n      }, {\n        name: "subcategoryname",\n        type: "text",\n        align: "left",\n        width: 80,\n        validate: function validate(value) {\n          // if (value > 0) {\n          return true; //}\n        }\n      }, {\n        name: "pricerange",\n        align: "left",\n        type: "text",\n        width: 50 // itemTemplate: function (value: any, item: any) {\n        //   console.log(\' value \', value, \' item \', item);\n        // },\n\n      }, {\n        type: "control"\n      }];\n      (0,_tables__WEBPACK_IMPORTED_MODULE_13__.createtables)("".concat(_url__WEBPACK_IMPORTED_MODULE_5__.backendurl, "/subcat/subcategory"), localStorage.getItem(\'token\'), data2);\n      downloads($(\'#dwdexcel\'), \'subcategory\', "".concat(_url__WEBPACK_IMPORTED_MODULE_5__.backendurl, "/subcat/filereport"));\n      break;\n\n    case urlpages[5]:\n      // for products  page\n      // load category\n      //alert(\'products\'); \n      $(\'#sizesofproduct\').select2();\n      $(\'#colourofproduct\').select2();\n      $(\'#categoryid\').empty().html((0,_tsbackendscript_ajaxfunctioncall__WEBPACK_IMPORTED_MODULE_8__.processrequest2)("".concat(_url__WEBPACK_IMPORTED_MODULE_5__.backendurl, "/categories/category"), \'get\', {\n        \'Content-Type\': "application/json",\n        \'Authorization\': \'Bearer \' + localStorage.getItem(\'token\')\n      }, function (r) {\n        // console.log(\' r \', r) ;\n        r = JSON.parse(r); // console.log(\' r \', r) ;\n\n        var builder = \'\';\n        builder += "<option value=\'\'>Select Category</option>";\n\n        var _iterator5 = _createForOfIteratorHelper(r),\n            _step5;\n\n        try {\n          for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {\n            var row = _step5.value;\n            //console.log(\' row \',row)\n            builder += "<option value=\'".concat(row.categoryname, "\'>").concat(row.categoryname, "</option>");\n          }\n        } catch (err) {\n          _iterator5.e(err);\n        } finally {\n          _iterator5.f();\n        }\n\n        $(\'#categoryid\').empty().html(builder.toString());\n      })); //load sub category   \n\n      $(\'#subcategoryid\').empty().html((0,_tsbackendscript_ajaxfunctioncall__WEBPACK_IMPORTED_MODULE_8__.processrequest2)("".concat(_url__WEBPACK_IMPORTED_MODULE_5__.backendurl, "/subcat/subcategory"), \'get\', {\n        \'Content-Type\': "application/json",\n        \'Authorization\': \'Bearer \' + localStorage.getItem(\'token\')\n      }, function (r) {\n        // console.log(\' sub r \', r) ;\n        r = JSON.parse(r);\n        var builder = \'\';\n        builder += "<option value=\'\'>Select Subcategory</option>";\n\n        var _iterator6 = _createForOfIteratorHelper(r),\n            _step6;\n\n        try {\n          for (_iterator6.s(); !(_step6 = _iterator6.n()).done;) {\n            var row = _step6.value;\n            builder += "<option value=\'".concat(row.subcategoryname, "\'>").concat(row.subcategoryname, "</option>");\n          }\n        } catch (err) {\n          _iterator6.e(err);\n        } finally {\n          _iterator6.f();\n        }\n\n        $(\'#subcategoryid\').empty().html(builder.toString());\n      })); // load tax \n\n      $(\'#tax\').empty().html((0,_tsbackendscript_ajaxfunctioncall__WEBPACK_IMPORTED_MODULE_8__.processrequest2)("".concat(_url__WEBPACK_IMPORTED_MODULE_5__.backendurl, "/taxes/updatetax"), \'get\', {\n        \'Content-Type\': "application/json",\n        \'Authorization\': \'Bearer \' + localStorage.getItem(\'token\')\n      }, function (r) {\n        r = JSON.parse(r); //  console.log(\'tax r \', r) ;\n\n        var builder = \'\';\n        builder += "<option value=\'\'>Select Tax on Product</option>";\n\n        var _iterator7 = _createForOfIteratorHelper(r),\n            _step7;\n\n        try {\n          for (_iterator7.s(); !(_step7 = _iterator7.n()).done;) {\n            var row = _step7.value;\n            builder += "<option value=\'".concat(parseFloat(row.taxrate) / 100, "\'>").concat(row.taxdetail, " ").concat(row.taxrate, "%</option>");\n          }\n        } catch (err) {\n          _iterator7.e(err);\n        } finally {\n          _iterator7.f();\n        }\n\n        $(\'#tax\').empty().html(builder.toString());\n      }));\n      $(".usersearch").select2({\n        placeholder: "search your products by name",\n        minimumInputLength: 1,\n        ajax: {\n          url: "".concat(_url__WEBPACK_IMPORTED_MODULE_5__.backendurl, "/product/findallproduct"),\n          headers: {\n            Authorization: "Bearer ".concat(localStorage.getItem(\'token\'))\n          },\n          dataType: \'json\',\n          data: function data(params) {\n            // console.log(\' params \',params);\n            var vendorname2 = localStorage.getItem(\'vendorname\');\n            return {\n              action_users: params.term,\n              // search term\n              vendorname: vendorname2,\n              page: params.page\n            };\n          },\n          processResults: function processResults(data) {\n            // const data2  =  [data] ;\n            // console.log(data);\n            return {\n              results: $.map(data, function (obj) {\n                // console.log(\'obj in  map \',obj);\n                return {\n                  id: obj.id,\n                  text: obj.productname\n                };\n              })\n            };\n          }\n        }\n      });\n      break;\n\n    case urlpages[4]:\n      // for product details\n      $(".prdsearch").select2({\n        placeholder: "search your products by name",\n        minimumInputLength: 1,\n        ajax: {\n          url: "".concat(_url__WEBPACK_IMPORTED_MODULE_5__.backendurl, "/product/findallproduct"),\n          headers: {\n            Authorization: "Bearer ".concat(localStorage.getItem(\'token\'))\n          },\n          dataType: \'json\',\n          data: function data(params) {\n            // console.log(\' params \',params);\n            var vendorname2 = localStorage.getItem(\'vendorname\');\n            return {\n              action_users: params.term,\n              // search term\n              vendorname: vendorname2,\n              page: params.page\n            };\n          },\n          processResults: function processResults(data) {\n            // const data2  =  [data] ;\n            // console.log(data);\n            return {\n              results: $.map(data, function (obj) {\n                // console.log(\'obj in  map \',obj);\n                return {\n                  id: obj.id,\n                  text: obj.productname\n                };\n              })\n            };\n          }\n        }\n      }); // on change for products in  product details \n\n      $(".prdsearch").on(\'change\', function (e) {\n        e.preventDefault();\n        var userid = $(\'.prdsearch\').val();\n        console.log(\'usersearch \', userid);\n        (0,_tsbackendscript_ajaxfunctioncall__WEBPACK_IMPORTED_MODULE_8__.processrequest2)("".concat(_url__WEBPACK_IMPORTED_MODULE_5__.backendurl, "/product/find/").concat(userid, "?detail=details"), \'get\', {\n          \'Content-Type\': "application/json",\n          \'Authorization\': \'Bearer \' + localStorage.getItem(\'token\')\n        }, function (res) {\n          //console.log(" res ",res) ;\n          // delete res.vendorname;\n          //  delete res.imageurl ; \n          res = JSON.parse(res);\n          var prdimage = document.getElementById(\'prdimage\');\n          prdimage.src = "".concat(_url__WEBPACK_IMPORTED_MODULE_5__.backendurl, "/jetstore/").concat(res.imageurl); //   console.log(\' src path \',`${backendurl}/jetstore/${res.imageurl}`) ;\n          // console.log(\'details data \',e);\n\n          if (res.productreview !== null && res.productreview !== undefined) {\n            //console.log(\' review \',res.productreview);\n            var stars = res.productreview.split(\'\');\n            console.log(\' stars \', stars);\n            var options = new StringBuilder();\n\n            for (var i = 0; i < stars.length; i++) {\n              options.append("<option value=\'".concat(i, "\'>").concat(i, "</option>"));\n            }\n\n            $(\'#u-rating-fontawesome-o\').html(options.toString());\n          }\n\n          $(\'#prddes\').text("".concat(res.proddescription));\n          $(\'.product-price\').empty().html("<h3>".concat(res.productprice, "</h3>"));\n          var prdsize = document.getElementById(\'prdsize\');\n          prdsize.textContent = "".concat(res.size); // $(\'.product-title\').after(`${res.productname}`);\n\n          $(\'#qty\').val("".concat(parseInt(res.productquantity)));\n          var prdstatus = document.getElementById(\'prdstatus\');\n          prdstatus.innerHTML = "<strong>Product status</strong> - ".concat(res.productstatus, " <br/>\\n       <strong>Product code - ").concat(res.productcode, " </strong> <br/>\\n       <strong>Product model - ").concat(res.model, "</strong> <br/>\\n          ");\n          var prdsummary = document.getElementById(\'prdsummary\');\n          prdsummary.innerHTML = "<p><strong>Short Summary of Product</strong></p> <p>".concat(res.shortsummary, "</p>");\n          var prddetails = document.getElementById(\'prddetails\');\n          prddetails.style.display = \'block\'; // console.log(\'src \',prdimage.src, \' prdimage \',prdimage,stars) ;\n        });\n      });\n      break;\n\n    case "".concat(_url__WEBPACK_IMPORTED_MODULE_5__.loginurl, "/review"):\n      var reviewdata = [{\n        name: \'id\',\n        type: \'hidden\',\n        css: \'hide\'\n      }, {\n        name: "customername",\n        type: "text",\n        align: "left",\n        width: 80,\n        validate: function validate(value) {\n          // if (value > 0) {\n          return true; //}\n        }\n      }, {\n        name: "review",\n        align: "left",\n        type: "text",\n        width: 50 // itemTemplate: function (value: any, item: any) {\n        //   console.log(\' value \', value, \' item \', item);\n        // },\n\n      }, {\n        name: "testimony",\n        align: "left",\n        type: "text",\n        width: 50 // itemTemplate: function (value: any, item: any) {\n        //   console.log(\' value \', value, \' item \', item);\n        // },\n\n      }, {\n        name: "rate",\n        align: "left",\n        type: "text",\n        width: 50 // itemTemplate: function (value: any, item: any) {\n        //   console.log(\' value \', value, \' item \', item);\n        // },\n\n      }, // {\n      //   name:"imageurl",align:"left",type:"file",width:80,\n      // },\n      {\n        type: "control"\n      }];\n      (0,_tables__WEBPACK_IMPORTED_MODULE_13__.createtables2)("".concat(_url__WEBPACK_IMPORTED_MODULE_5__.backendurl, "/review"), localStorage.getItem(\'token\'), reviewdata, false);\n      break;\n\n    case "".concat(_url__WEBPACK_IMPORTED_MODULE_5__.loginurl, "/customer"):\n      var customerdata = [{\n        name: \'id\',\n        type: \'hidden\',\n        css: \'hide\'\n      }, {\n        name: "firstname",\n        type: "text",\n        align: "left",\n        width: 80,\n        validate: function validate(value) {\n          // if (value > 0) {\n          return true; //}\n        }\n      }, {\n        name: "lastname",\n        align: "left",\n        type: "text",\n        width: 50 // itemTemplate: function (value: any, item: any) {\n        //   console.log(\' value \', value, \' item \', item);\n        // },\n\n      }, {\n        name: "email",\n        align: "left",\n        type: "text",\n        width: 50 // itemTemplate: function (value: any, item: any) {\n        //   console.log(\' value \', value, \' item \', item);\n        // },\n\n      }, {\n        name: "phone",\n        align: "left",\n        type: "text",\n        width: 50 // itemTemplate: function (value: any, item: any) {\n        //   console.log(\' value \', value, \' item \', item);\n        // },\n\n      }, // {\n      //   name:"imageurl",align:"left",type:"file",width:80,\n      // },\n      {\n        type: "control"\n      }];\n      (0,_tables__WEBPACK_IMPORTED_MODULE_13__.createtables2)("".concat(_url__WEBPACK_IMPORTED_MODULE_5__.backendurl, "/customer/register"), localStorage.getItem(\'token\'), customerdata, true);\n      break;\n\n    case "".concat(_url__WEBPACK_IMPORTED_MODULE_5__.loginurl, "/productlist"):\n      searchFiter();\n      break;\n\n    case "".concat(_url__WEBPACK_IMPORTED_MODULE_5__.loginurl, "/messaging"):\n      // $(\'#sizesofproduct\').select2() ;\n      // $(\'#colourofproduct\').select2() ;\n      //cme here later \n      subscribetoevent(new EventSource("".concat(_url__WEBPACK_IMPORTED_MODULE_5__.backendurl, "/subscribe?vendorname=").concat(localStorage.getItem(\'vendorname\'))), \'usernews\');\n      var selecttyperadio = Array.from(document.getElementsByName(\'selectype\')); // let [inp1,inp2,inp3,inp4]  =  selecttyperadio ;\n      //console.log(\'checked \',inp1.checked);\n\n      search("usersearch", selecttyperadio); //chat logic \n\n      socket = new SockJS(_url__WEBPACK_IMPORTED_MODULE_5__.websocketurl);\n      stompClient = Stomp.over(socket);\n      stompClient.connect({}, function () {\n        stompClient.subscribe(\'/chatroom/public\', _tsbackendscript_ajaxfunctioncall__WEBPACK_IMPORTED_MODULE_8__.onMessageReceived); // get data from events before subscribing .\n\n        var eventSource = new EventSource("".concat(_url__WEBPACK_IMPORTED_MODULE_5__.backendurl, "/subscribe?vendorname=").concat(localStorage.getItem(\'vendorname\'))); // receiverName=null;\n\n        eventSource.addEventListener(\'vendornews\', function (event) {\n          if (event.data) {\n            console.log(\'from dispatch event \', event.data + \' is the user id\');\n\n            if (usermap.get(\'receiverName\') === undefined) {\n              usermap.set(\'receiverName\', event.data);\n              var chatMessage = {\n                senderName: localStorage.getItem(\'vendorname\'),\n                // receiverName:usermap.get(\'receiverName\')!==undefined?usermap.get(\'receiverName\'):"",\n                message: "",\n                status: "JOIN"\n              };\n              stompClient.send("/app/message", {}, JSON.stringify(chatMessage));\n              stompClient.subscribe(\'/user/\' + localStorage.getItem(\'vendorname\') + \'/private\', _tsbackendscript_ajaxfunctioncall__WEBPACK_IMPORTED_MODULE_8__.onMessageReceived);\n              console.log(chatMessage, \'usermap.get \' + usermap.get(\'receiverName\'));\n            }\n\n            eventSource.close();\n          }\n        });\n      }, function () {\n        console.log("unable to connect");\n      });\n      $(\'#sendbtn\').on(\'click\', function (e) {\n        e.preventDefault();\n        var chatMessage = {\n          senderName: localStorage.getItem(\'vendorname\'),\n          receiverName: usermap.get(\'receiverName\'),\n          // the user\n          message: $(\'#chatmsg\').val(),\n          status: "MESSAGE"\n        };\n        $(\'#messagearea\').append("<br/><li style=\\"color:blue\\"><strong>".concat($(\'#chatmsg\').val(), "</strong><br/></li>"));\n        console.log(\'details \', $(\'#chatmsg\').val(), usermap);\n        $(\'#chatmsg\').val(\'\');\n        document.getElementById(\'messagearea\').scrollTop = document.getElementById(\'messagearea\').scrollHeight;\n        stompClient.send("/app/private-message", {}, JSON.stringify(chatMessage));\n      });\n      break;\n\n    case "".concat(_url__WEBPACK_IMPORTED_MODULE_5__.loginurl, "/messageview"):\n      //alert() ;\n      break;\n\n    default:\n  }\n}; //search option in messaging\n// const searchoption  = (url:string,inputArray:HTMLInputElement[])=>{\n//  search(url,inputArray) ;\n// };\n\n\nvar search = function search(_url, inputArray) {\n  //console.log(inputArray) ;\n  var _inputArray = (0,_babel_runtime_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_2__["default"])(inputArray, 2),\n      inp1 = _inputArray[0],\n      inp2 = _inputArray[1];\n\n  $(".userandvendor").select2({\n    placeholder: "search users/vendors and send message",\n    minimumInputLength: 1,\n    ajax: {\n      url: function url() {\n        if (inp1.checked) {\n          $(\'.usersearch2\').prop(\'disabled\', false);\n          console.log(\'called vendors\', inp1.checked);\n          return "".concat(_url__WEBPACK_IMPORTED_MODULE_5__.backendurl, "/").concat(_url);\n        } else if (inp2.checked) {\n          $(\'.usersearch2\').prop(\'disabled\', false);\n          console.log(\'called users\', inp2.checked);\n          return "".concat(_url__WEBPACK_IMPORTED_MODULE_5__.backendurl, "/").concat(_url);\n        }\n      },\n      headers: {\n        Authorization: "Bearer ".concat(localStorage.getItem(\'token\'))\n      },\n      dataType: \'json\',\n      data: function data(params) {\n        // console.log(\' params \',params);\n        var vendorname2 = localStorage.getItem(\'vendorname\');\n\n        if (inp1.checked) {\n          return {\n            action_users: params.term,\n            // search term\n            //vendorname: vendorname2,\n            page: params.page\n          };\n        } else if (inp2.checked) {\n          return {\n            action_users: params.term,\n            // search term\n            vendorname: vendorname2,\n            page: params.page\n          };\n        }\n      },\n      processResults: function processResults(data) {\n        console.log(\' data \', data);\n\n        if (inp1.checked) {\n          console.log(\'vendorname\', data);\n          return {\n            results: $.map(data, function (obj) {\n              return {\n                id: obj.id,\n                text: obj.vendorname\n              };\n            })\n          };\n        } else if (inp2.checked) {\n          console.log(\'firstname\', data);\n          return {\n            results: $.map(data, function (obj) {\n              return {\n                id: obj.id,\n                text: obj.firstname\n              };\n            })\n          };\n        }\n      }\n    }\n  });\n}; // searchfilter \n\n\nfunction searchFiter(pagenum) {\n  pagenum = pagenum ? pagenum : 0;\n  document.cookie = "current_page" + pagenum;\n  $.ajax({\n    type: \'get\',\n    url: "".concat(_url__WEBPACK_IMPORTED_MODULE_5__.backendurl, "/product/allproduct"),\n    headers: {\n      Authorization: "Bearer ".concat(localStorage.getItem(\'token\'))\n    },\n    data: "pageNumber=".concat(pagenum, "&pageSize=", 10),\n    success: function success(data) {\n      //console.log(data) ;\n      var prdcontainer = document.getElementById(\'prdcontainer\');\n      prdcontainer.innerHTML = data;\n    }\n  });\n} // searchfilter for coupon\n\n\nfunction searchFiter2(pagenum) {\n  pagenum = pagenum ? pagenum : 0;\n  document.cookie = "current_page" + pagenum;\n  $.ajax({\n    type: \'get\',\n    url: "".concat(_url__WEBPACK_IMPORTED_MODULE_5__.backendurl, "/coupon/coupon"),\n    headers: {\n      Authorization: "Bearer ".concat(localStorage.getItem(\'token\'))\n    },\n    data: "vendorname=".concat(localStorage.getItem(\'vendorname\'), "&pageNumber=").concat(pagenum, "&pageSize=", 10),\n    success: function success(data) {\n      console.log(data);\n      var couponbody = document.getElementById(\'couponbody\');\n      couponbody.innerHTML = data;\n    }\n  });\n} // search for product on change \n\n\n$(\'.usersearch\').on(\'change\', function (e) {\n  e.preventDefault();\n  var userid = $(\'.usersearch\').val();\n  (0,_tsbackendscript_ajaxfunctioncall__WEBPACK_IMPORTED_MODULE_8__.processrequest2)("".concat(_url__WEBPACK_IMPORTED_MODULE_5__.backendurl, "/product/find/").concat(userid), \'get\', {\n    \'Content-Type\': "application/json",\n    \'Authorization\': \'Bearer \' + localStorage.getItem(\'token\')\n  }, function (res) {\n    console.log(\'product res \', res);\n    res = JSON.parse(res);\n    delete res.vendorname;\n    delete res.imageurl;\n    delete res.dateofcreation;\n    var todayTime = new Date(res.expirydate);\n    var month = todayTime.getMonth() + 1;\n    var day = todayTime.getDate();\n    var year = todayTime.getFullYear();\n    var expdate = year + "-" + "0" + month + "-" + day;\n    res.expirydate = expdate; //console.log(\' res \',res,\' date \',res.expirydate) ;\n\n    $("#add-product-form").autofill(res);\n    var form = document.getElementById("add-product-form");\n    form.expirydate.value = res.expirydate;\n    CKEDITOR.instances.editor1.setData(res.proddescription); // console.log(\'id\',$(\'#id\').val()) ; \n  });\n}); // search  users \n\n$(\'.usersearch\').on(\'change\', function (e) {\n  e.preventDefault(); // console.log($(\'.usersearch\').val());\n\n  var userid = $(\'.usersearch\').val(); // fill up the form \n\n  fetch("".concat(_url__WEBPACK_IMPORTED_MODULE_5__.backendurl, "/vendoruser?vendorname=").concat(localStorage.getItem(\'vendorname\'), "&id=").concat(userid), {\n    method: \'GET\',\n    credentials: \'same-origin\',\n    headers: {\n      // \'Accept\': \'application/json\',\n      \'Content-Type\': \'application/json\',\n      // "X-Requested-With": "XMLHttpRequest",\n      \'Authorization\': "Bearer ".concat(localStorage.getItem(\'token\'))\n    } //body:JSON.stringify(d)\n\n  }).then(function (responseJson) {\n    console.log(responseJson);\n    return responseJson.json();\n  }).then(function (r) {\n    var _document$getElementB;\n\n    console.log(\'response ...\', r);\n    delete r.id;\n    delete r.vendorname;\n    delete r.password;\n    delete r.vendorowner;\n    delete r.type;\n    delete r.token;\n    delete r.userdate;\n    console.log((_document$getElementB = document.getElementById(\'usersearch\')) === null || _document$getElementB === void 0 ? void 0 : _document$getElementB.textContent);\n    var userstatus = document.getElementById(\'userstatus\'); //  selecttext.textContent  = \'\' ;\n\n    $("#userdetails").autofill(r);\n\n    if (r.userstatus === \'1\') {\n      userstatus.checked = true;\n    }\n\n    var userdetails = document.getElementById(\'userdetails\');\n\n    var _Array$from13 = Array.from(userdetails.vendorowner),\n        _Array$from14 = (0,_babel_runtime_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_2__["default"])(_Array$from13, 2),\n        yes = _Array$from14[0],\n        no = _Array$from14[1];\n\n    if (r.vendorowner === \'1\') {\n      yes.checked = true;\n    } else if (r.vendorowner !== \'1\') {\n      no.checked = true;\n    }\n\n    $(\'#usererror\').empty().html(\'<br/><div class="alert alert-warning"> <span class="glyphicon glyphicon-info-sign"></span> &nbsp; \' + \'Password field should be empty unless you want to update password for your users\' + \'!</div>\');\n  })["catch"](function (error) {\n    console.log(error);\n  });\n}); //clear  save button\n\n$(\'#clear\').on(\'click\', function (e) {\n  e.preventDefault();\n  alertify.confirm("Form Reset", "Do you want to reset form ?", function () {\n    var _document$getElementB2;\n\n    $(\'#usererror\').empty();\n    var userid = $(\'.usersearch\').val();\n    console.log((_document$getElementB2 = document.getElementById(\'usersearch\')) === null || _document$getElementB2 === void 0 ? void 0 : _document$getElementB2.textContent);\n    var selecttext = document.getElementById(\'usersearch\');\n    selecttext.textContent = \'\'; // reset form \n\n    var userperm = document.getElementById(\'userpermission\');\n    userperm.reset();\n    var userdetails = document.getElementById(\'userdetails\');\n    userdetails.reset();\n    toastr.success(\'form reset successfully\');\n  }, function () {\n    alertify.error(\'Cancel\');\n  });\n});\n$(document).ready(function () {\n  //const myform: HTMLFormElement = document.querySelector(\'#top-profile\')!;\n  if (URL) {\n    var currenthref = window.location.href;\n    var url = new URL(currenthref);\n    console.log(\'test url \', _url__WEBPACK_IMPORTED_MODULE_5__.theprotocol + url.host + url.pathname);\n    pageload(_url__WEBPACK_IMPORTED_MODULE_5__.theprotocol + url.host + url.pathname); // pageload(url.href);\n  } else {\n    alert(\'this browser seem to be too old\');\n  } //  render(()=>html`<button class="btn btn-primary" type="button" @click=${test()}>Update</button>`,document.body);\n\n});\nDropzone.options.multiFileUpload = {\n  // paramName: "file",\n  method: "post",\n  url: "http://localhost:1022/product/uploadfiles?vendorname=".concat(localStorage.getItem("vendorname")),\n  headers: {\n    "Authorization": "Bearer ".concat(localStorage.getItem(\'token\'))\n  },\n  withCredentials: true,\n  addRemoveLinks: true,\n  maxFilesize: 100,\n  maxFiles: 100,\n  acceptedFiles: ".png,.jpg,.jpeg,.bmp",\n  accept: function accept(file, done) {\n    console.log("uploaded");\n    done();\n  },\n  autoProcessQueue: false,\n  uploadMultiple: true,\n  parallelUploads: 50,\n  init: function init() {\n    this.on("addedfile", function (file) {\n      console.log(\'file added ....\');\n    });\n    this.on(\'error\', function (file, errorMessage) {\n      console.log(errorMessage);\n    });\n    var myDropzone = this; // closure\n\n    var submitButton = document.querySelector("#filesdata");\n    submitButton.addEventListener("click", function (e) {\n      e.preventDefault();\n      e.stopPropagation();\n      Swal.fire({\n        icon: \'question\',\n        text: \'Do you want to upload files and data\',\n        showCancelButton: true\n      }).then(function (r) {\n        if (r.isConfirmed) {\n          //set ajax function here to process first\n          $("#filesdata").empty().html("<img src=\\"".concat(_url__WEBPACK_IMPORTED_MODULE_5__.loginurl, "/dist/images/btn-ajax-loader.gif\\"/> &nbsp; processing your uploads.please wait ..."));\n\n          var _URL = "".concat(_url__WEBPACK_IMPORTED_MODULE_5__.backendurl, "/product/product");\n\n          var formData = document.getElementById(\'addfile\');\n          var prdfile = formData.prdfile; // if no file is choosen\n          // console.log(prdfile,prdfile.value) ;\n\n          if (prdfile.value === undefined || prdfile.value === "") {\n            toastr.error(\'No excel files is uploaded yet\');\n            console.log(\'prdfile is testing \');\n            throw new Error(" Error. ");\n          } //console.log(\'prdfile \') ;\n\n\n          var filename = prdfile.files[0].name;\n          var xlsx = filename.split(\'.\')[1]; //alert(xlsx) ;\n          //console.log(\'xlxs \',xlsx===\'xlx\') ;                   \n\n          if (xlsx !== \'xlsx\') {\n            // if it not excel\n            toastr.error(\'Only Excel file is permitted\');\n            setTimeout(function () {\n              $("#filesdata").empty().html("<button type=\'submit\' class=\'btn btn-md btn-primary\' id=\'filesdata\'>Upload Files And Data</button>"); //  toastr.error(\'uploading of files failed ...\'); \n            }, 2000);\n            return;\n          }\n\n          var form = new FormData(formData);\n          $.ajax({\n            url: _URL,\n            type: \'POST\',\n            headers: {\n              "Authorization": "Bearer ".concat(localStorage.getItem(\'token\'))\n            },\n            dataType: \'text\',\n            contentType: false,\n            data: form,\n            processData: false,\n            beforeSend: function beforeSend() {// $("#filesdata").empty().html(`<img src="${loginurl}/dist/images/btn-ajax-loader.gif"/> &nbsp; processing your uploads.please wait ...`);      \t\t\n            },\n            success: function success(result) {\n              //   submitButton.textContent  = `Upload Files And Data`;\n              console.log(\'button click\', result);\n              setTimeout(function () {\n                //delay for the uploaded  to be processed\n                myDropzone.processQueue(); // Tell Dropzone to process all queued files.\n              }, 5000);\n            },\n            error: function error(err) {\n              $("#filesdata").empty().html("<button type=\'submit\' class=\'btn btn-md btn-primary\' id=\'filesdata\'>Upload Files And Data</button>");\n              toastr.error(\'uploading of files failed ...\');\n            }\n          });\n        }\n      });\n    }); // this.sendingMu("sending",function(file:any,xhr:any,formData:any){\n    //   formData.append("vendorname",localStorage.getItem("vendorname"));\n    //   toastr.success(\'sending\');\n    // }) ;\n\n    this.on("successmultiple", function (files, response) {\n      setTimeout(function () {\n        $("#filesdata").empty().html("<button type=\'submit\' class=\'btn btn-md btn-primary\' id=\'filesdata\'>Upload Files And Data</button>");\n        toastr.success(\'All Images and data successfully uploaded and processed\');\n        console.log(\' response \', response);\n      }, 1500);\n    });\n    this.on("errormultiple", function (files, response) {\n      toastr.error(\'there is  a  problem\'); //console.log(response)\n    });\n    this.on("completemultiple", function (files, response) {});\n    this.on(\'complete\', function (file) {\n      myDropzone.removeFile(file);\n    });\n  }\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///0\n')},(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__)=>{"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "default": () => (/* binding */ _asyncToGenerator)\n/* harmony export */ });\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nfunction _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMS5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQTtBQUNBOztBQUVlO0FBQ2Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0EsS0FBSztBQUNMO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly93ZWJhcHAvLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vYXN5bmNUb0dlbmVyYXRvci5qcz9jYzI4Il0sInNvdXJjZXNDb250ZW50IjpbImZ1bmN0aW9uIGFzeW5jR2VuZXJhdG9yU3RlcChnZW4sIHJlc29sdmUsIHJlamVjdCwgX25leHQsIF90aHJvdywga2V5LCBhcmcpIHtcbiAgdHJ5IHtcbiAgICB2YXIgaW5mbyA9IGdlbltrZXldKGFyZyk7XG4gICAgdmFyIHZhbHVlID0gaW5mby52YWx1ZTtcbiAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICByZWplY3QoZXJyb3IpO1xuICAgIHJldHVybjtcbiAgfVxuXG4gIGlmIChpbmZvLmRvbmUpIHtcbiAgICByZXNvbHZlKHZhbHVlKTtcbiAgfSBlbHNlIHtcbiAgICBQcm9taXNlLnJlc29sdmUodmFsdWUpLnRoZW4oX25leHQsIF90aHJvdyk7XG4gIH1cbn1cblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gX2FzeW5jVG9HZW5lcmF0b3IoZm4pIHtcbiAgcmV0dXJuIGZ1bmN0aW9uICgpIHtcbiAgICB2YXIgc2VsZiA9IHRoaXMsXG4gICAgICAgIGFyZ3MgPSBhcmd1bWVudHM7XG4gICAgcmV0dXJuIG5ldyBQcm9taXNlKGZ1bmN0aW9uIChyZXNvbHZlLCByZWplY3QpIHtcbiAgICAgIHZhciBnZW4gPSBmbi5hcHBseShzZWxmLCBhcmdzKTtcblxuICAgICAgZnVuY3Rpb24gX25leHQodmFsdWUpIHtcbiAgICAgICAgYXN5bmNHZW5lcmF0b3JTdGVwKGdlbiwgcmVzb2x2ZSwgcmVqZWN0LCBfbmV4dCwgX3Rocm93LCBcIm5leHRcIiwgdmFsdWUpO1xuICAgICAgfVxuXG4gICAgICBmdW5jdGlvbiBfdGhyb3coZXJyKSB7XG4gICAgICAgIGFzeW5jR2VuZXJhdG9yU3RlcChnZW4sIHJlc29sdmUsIHJlamVjdCwgX25leHQsIF90aHJvdywgXCJ0aHJvd1wiLCBlcnIpO1xuICAgICAgfVxuXG4gICAgICBfbmV4dCh1bmRlZmluZWQpO1xuICAgIH0pO1xuICB9O1xufSJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///1\n')},(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__)=>{"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "default": () => (/* binding */ _defineProperty)\n/* harmony export */ });\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMi5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQWU7QUFDZjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0wsSUFBSTtBQUNKO0FBQ0E7O0FBRUE7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL3dlYmFwcC8uL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9kZWZpbmVQcm9wZXJ0eS5qcz9kYmVjIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIF9kZWZpbmVQcm9wZXJ0eShvYmosIGtleSwgdmFsdWUpIHtcbiAgaWYgKGtleSBpbiBvYmopIHtcbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkob2JqLCBrZXksIHtcbiAgICAgIHZhbHVlOiB2YWx1ZSxcbiAgICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgICBjb25maWd1cmFibGU6IHRydWUsXG4gICAgICB3cml0YWJsZTogdHJ1ZVxuICAgIH0pO1xuICB9IGVsc2Uge1xuICAgIG9ialtrZXldID0gdmFsdWU7XG4gIH1cblxuICByZXR1cm4gb2JqO1xufSJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///2\n')},(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__)=>{"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "default": () => (/* binding */ _slicedToArray)\n/* harmony export */ });\n/* harmony import */ var _arrayWithHoles_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(4);\n/* harmony import */ var _iterableToArrayLimit_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(5);\n/* harmony import */ var _unsupportedIterableToArray_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(6);\n/* harmony import */ var _nonIterableRest_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(8);\n\n\n\n\nfunction _slicedToArray(arr, i) {\n  return (0,_arrayWithHoles_js__WEBPACK_IMPORTED_MODULE_0__["default"])(arr) || (0,_iterableToArrayLimit_js__WEBPACK_IMPORTED_MODULE_1__["default"])(arr, i) || (0,_unsupportedIterableToArray_js__WEBPACK_IMPORTED_MODULE_2__["default"])(arr, i) || (0,_nonIterableRest_js__WEBPACK_IMPORTED_MODULE_3__["default"])();\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUFpRDtBQUNZO0FBQ1k7QUFDdEI7QUFDcEM7QUFDZixTQUFTLDhEQUFjLFNBQVMsb0VBQW9CLFlBQVksMEVBQTBCLFlBQVksK0RBQWU7QUFDckgiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly93ZWJhcHAvLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vc2xpY2VkVG9BcnJheS5qcz84ZjlmIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBhcnJheVdpdGhIb2xlcyBmcm9tIFwiLi9hcnJheVdpdGhIb2xlcy5qc1wiO1xuaW1wb3J0IGl0ZXJhYmxlVG9BcnJheUxpbWl0IGZyb20gXCIuL2l0ZXJhYmxlVG9BcnJheUxpbWl0LmpzXCI7XG5pbXBvcnQgdW5zdXBwb3J0ZWRJdGVyYWJsZVRvQXJyYXkgZnJvbSBcIi4vdW5zdXBwb3J0ZWRJdGVyYWJsZVRvQXJyYXkuanNcIjtcbmltcG9ydCBub25JdGVyYWJsZVJlc3QgZnJvbSBcIi4vbm9uSXRlcmFibGVSZXN0LmpzXCI7XG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBfc2xpY2VkVG9BcnJheShhcnIsIGkpIHtcbiAgcmV0dXJuIGFycmF5V2l0aEhvbGVzKGFycikgfHwgaXRlcmFibGVUb0FycmF5TGltaXQoYXJyLCBpKSB8fCB1bnN1cHBvcnRlZEl0ZXJhYmxlVG9BcnJheShhcnIsIGkpIHx8IG5vbkl0ZXJhYmxlUmVzdCgpO1xufSJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///3\n')},(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__)=>{"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "default": () => (/* binding */ _arrayWithHoles)\n/* harmony export */ });\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNC5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQWU7QUFDZjtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vd2ViYXBwLy4vbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2FycmF5V2l0aEhvbGVzLmpzP2ZjZDgiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gX2FycmF5V2l0aEhvbGVzKGFycikge1xuICBpZiAoQXJyYXkuaXNBcnJheShhcnIpKSByZXR1cm4gYXJyO1xufSJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///4\n')},(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__)=>{"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "default": () => (/* binding */ _iterableToArrayLimit)\n/* harmony export */ });\nfunction _iterableToArrayLimit(arr, i) {\n  var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"];\n\n  if (_i == null) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n\n  var _s, _e;\n\n  try {\n    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i["return"] != null) _i["return"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNS5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQWU7QUFDZjs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBLDRCQUE0QiwrQkFBK0I7QUFDM0Q7O0FBRUE7QUFDQTtBQUNBLElBQUk7QUFDSjtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQTtBQUNBOztBQUVBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly93ZWJhcHAvLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vaXRlcmFibGVUb0FycmF5TGltaXQuanM/ZTJmZSJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBfaXRlcmFibGVUb0FycmF5TGltaXQoYXJyLCBpKSB7XG4gIHZhciBfaSA9IGFyciA9PSBudWxsID8gbnVsbCA6IHR5cGVvZiBTeW1ib2wgIT09IFwidW5kZWZpbmVkXCIgJiYgYXJyW1N5bWJvbC5pdGVyYXRvcl0gfHwgYXJyW1wiQEBpdGVyYXRvclwiXTtcblxuICBpZiAoX2kgPT0gbnVsbCkgcmV0dXJuO1xuICB2YXIgX2FyciA9IFtdO1xuICB2YXIgX24gPSB0cnVlO1xuICB2YXIgX2QgPSBmYWxzZTtcblxuICB2YXIgX3MsIF9lO1xuXG4gIHRyeSB7XG4gICAgZm9yIChfaSA9IF9pLmNhbGwoYXJyKTsgIShfbiA9IChfcyA9IF9pLm5leHQoKSkuZG9uZSk7IF9uID0gdHJ1ZSkge1xuICAgICAgX2Fyci5wdXNoKF9zLnZhbHVlKTtcblxuICAgICAgaWYgKGkgJiYgX2Fyci5sZW5ndGggPT09IGkpIGJyZWFrO1xuICAgIH1cbiAgfSBjYXRjaCAoZXJyKSB7XG4gICAgX2QgPSB0cnVlO1xuICAgIF9lID0gZXJyO1xuICB9IGZpbmFsbHkge1xuICAgIHRyeSB7XG4gICAgICBpZiAoIV9uICYmIF9pW1wicmV0dXJuXCJdICE9IG51bGwpIF9pW1wicmV0dXJuXCJdKCk7XG4gICAgfSBmaW5hbGx5IHtcbiAgICAgIGlmIChfZCkgdGhyb3cgX2U7XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIF9hcnI7XG59Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///5\n')},(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__)=>{"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "default": () => (/* binding */ _unsupportedIterableToArray)\n/* harmony export */ });\n/* harmony import */ var _arrayLikeToArray_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(7);\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === "string") return (0,_arrayLikeToArray_js__WEBPACK_IMPORTED_MODULE_0__["default"])(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === "Object" && o.constructor) n = o.constructor.name;\n  if (n === "Map" || n === "Set") return Array.from(o);\n  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return (0,_arrayLikeToArray_js__WEBPACK_IMPORTED_MODULE_0__["default"])(o, minLen);\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNi5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFxRDtBQUN0QztBQUNmO0FBQ0Esb0NBQW9DLGdFQUFnQjtBQUNwRDtBQUNBO0FBQ0E7QUFDQSxzRkFBc0YsZ0VBQWdCO0FBQ3RHIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vd2ViYXBwLy4vbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL3Vuc3VwcG9ydGVkSXRlcmFibGVUb0FycmF5LmpzPzAwOWMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGFycmF5TGlrZVRvQXJyYXkgZnJvbSBcIi4vYXJyYXlMaWtlVG9BcnJheS5qc1wiO1xuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gX3Vuc3VwcG9ydGVkSXRlcmFibGVUb0FycmF5KG8sIG1pbkxlbikge1xuICBpZiAoIW8pIHJldHVybjtcbiAgaWYgKHR5cGVvZiBvID09PSBcInN0cmluZ1wiKSByZXR1cm4gYXJyYXlMaWtlVG9BcnJheShvLCBtaW5MZW4pO1xuICB2YXIgbiA9IE9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbChvKS5zbGljZSg4LCAtMSk7XG4gIGlmIChuID09PSBcIk9iamVjdFwiICYmIG8uY29uc3RydWN0b3IpIG4gPSBvLmNvbnN0cnVjdG9yLm5hbWU7XG4gIGlmIChuID09PSBcIk1hcFwiIHx8IG4gPT09IFwiU2V0XCIpIHJldHVybiBBcnJheS5mcm9tKG8pO1xuICBpZiAobiA9PT0gXCJBcmd1bWVudHNcIiB8fCAvXig/OlVpfEkpbnQoPzo4fDE2fDMyKSg/OkNsYW1wZWQpP0FycmF5JC8udGVzdChuKSkgcmV0dXJuIGFycmF5TGlrZVRvQXJyYXkobywgbWluTGVuKTtcbn0iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///6\n')},(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__)=>{"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "default": () => (/* binding */ _arrayLikeToArray)\n/* harmony export */ });\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNy5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQWU7QUFDZjs7QUFFQSx5Q0FBeUMsU0FBUztBQUNsRDtBQUNBOztBQUVBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly93ZWJhcHAvLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vYXJyYXlMaWtlVG9BcnJheS5qcz8yOWE3Il0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIF9hcnJheUxpa2VUb0FycmF5KGFyciwgbGVuKSB7XG4gIGlmIChsZW4gPT0gbnVsbCB8fCBsZW4gPiBhcnIubGVuZ3RoKSBsZW4gPSBhcnIubGVuZ3RoO1xuXG4gIGZvciAodmFyIGkgPSAwLCBhcnIyID0gbmV3IEFycmF5KGxlbik7IGkgPCBsZW47IGkrKykge1xuICAgIGFycjJbaV0gPSBhcnJbaV07XG4gIH1cblxuICByZXR1cm4gYXJyMjtcbn0iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///7\n')},(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__)=>{"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "default": () => (/* binding */ _nonIterableRest)\n/* harmony export */ });\nfunction _nonIterableRest() {\n  throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiOC5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQWU7QUFDZjtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vd2ViYXBwLy4vbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL25vbkl0ZXJhYmxlUmVzdC5qcz9jMTQ2Il0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIF9ub25JdGVyYWJsZVJlc3QoKSB7XG4gIHRocm93IG5ldyBUeXBlRXJyb3IoXCJJbnZhbGlkIGF0dGVtcHQgdG8gZGVzdHJ1Y3R1cmUgbm9uLWl0ZXJhYmxlIGluc3RhbmNlLlxcbkluIG9yZGVyIHRvIGJlIGl0ZXJhYmxlLCBub24tYXJyYXkgb2JqZWN0cyBtdXN0IGhhdmUgYSBbU3ltYm9sLml0ZXJhdG9yXSgpIG1ldGhvZC5cIik7XG59Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///8\n')},(module,__unused_webpack_exports,__webpack_require__)=>{eval('// TODO(Babel 8): Remove this file.\n\nvar runtime = __webpack_require__(10)();\nmodule.exports = runtime;\n\n// Copied from https://github.com/facebook/regenerator/blob/main/packages/runtime/runtime.js#L736=\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  if (typeof globalThis === "object") {\n    globalThis.regeneratorRuntime = runtime;\n  } else {\n    Function("r", "regeneratorRuntime = r")(runtime);\n  }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiOS5qcyIsIm1hcHBpbmdzIjoiQUFBQTs7QUFFQSxjQUFjLG1CQUFPLENBQUMsRUFBK0I7QUFDckQ7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsRUFBRTtBQUNGO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vd2ViYXBwLy4vbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL3JlZ2VuZXJhdG9yL2luZGV4LmpzP2M5YTciXSwic291cmNlc0NvbnRlbnQiOlsiLy8gVE9ETyhCYWJlbCA4KTogUmVtb3ZlIHRoaXMgZmlsZS5cblxudmFyIHJ1bnRpbWUgPSByZXF1aXJlKFwiLi4vaGVscGVycy9yZWdlbmVyYXRvclJ1bnRpbWVcIikoKTtcbm1vZHVsZS5leHBvcnRzID0gcnVudGltZTtcblxuLy8gQ29waWVkIGZyb20gaHR0cHM6Ly9naXRodWIuY29tL2ZhY2Vib29rL3JlZ2VuZXJhdG9yL2Jsb2IvbWFpbi9wYWNrYWdlcy9ydW50aW1lL3J1bnRpbWUuanMjTDczNj1cbnRyeSB7XG4gIHJlZ2VuZXJhdG9yUnVudGltZSA9IHJ1bnRpbWU7XG59IGNhdGNoIChhY2NpZGVudGFsU3RyaWN0TW9kZSkge1xuICBpZiAodHlwZW9mIGdsb2JhbFRoaXMgPT09IFwib2JqZWN0XCIpIHtcbiAgICBnbG9iYWxUaGlzLnJlZ2VuZXJhdG9yUnVudGltZSA9IHJ1bnRpbWU7XG4gIH0gZWxzZSB7XG4gICAgRnVuY3Rpb24oXCJyXCIsIFwicmVnZW5lcmF0b3JSdW50aW1lID0gclwiKShydW50aW1lKTtcbiAgfVxufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///9\n')},(module,__unused_webpack_exports,__webpack_require__)=>{eval('var _typeof = (__webpack_require__(11)["default"]);\n\nfunction _regeneratorRuntime() {\n  "use strict";\n  /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */\n\n  module.exports = _regeneratorRuntime = function _regeneratorRuntime() {\n    return exports;\n  }, module.exports.__esModule = true, module.exports["default"] = module.exports;\n  var exports = {},\n      Op = Object.prototype,\n      hasOwn = Op.hasOwnProperty,\n      $Symbol = "function" == typeof Symbol ? Symbol : {},\n      iteratorSymbol = $Symbol.iterator || "@@iterator",\n      asyncIteratorSymbol = $Symbol.asyncIterator || "@@asyncIterator",\n      toStringTagSymbol = $Symbol.toStringTag || "@@toStringTag";\n\n  function define(obj, key, value) {\n    return Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: !0,\n      configurable: !0,\n      writable: !0\n    }), obj[key];\n  }\n\n  try {\n    define({}, "");\n  } catch (err) {\n    define = function define(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator,\n        generator = Object.create(protoGenerator.prototype),\n        context = new Context(tryLocsList || []);\n    return generator._invoke = function (innerFn, self, context) {\n      var state = "suspendedStart";\n      return function (method, arg) {\n        if ("executing" === state) throw new Error("Generator is already running");\n\n        if ("completed" === state) {\n          if ("throw" === method) throw arg;\n          return doneResult();\n        }\n\n        for (context.method = method, context.arg = arg;;) {\n          var delegate = context.delegate;\n\n          if (delegate) {\n            var delegateResult = maybeInvokeDelegate(delegate, context);\n\n            if (delegateResult) {\n              if (delegateResult === ContinueSentinel) continue;\n              return delegateResult;\n            }\n          }\n\n          if ("next" === context.method) context.sent = context._sent = context.arg;else if ("throw" === context.method) {\n            if ("suspendedStart" === state) throw state = "completed", context.arg;\n            context.dispatchException(context.arg);\n          } else "return" === context.method && context.abrupt("return", context.arg);\n          state = "executing";\n          var record = tryCatch(innerFn, self, context);\n\n          if ("normal" === record.type) {\n            if (state = context.done ? "completed" : "suspendedYield", record.arg === ContinueSentinel) continue;\n            return {\n              value: record.arg,\n              done: context.done\n            };\n          }\n\n          "throw" === record.type && (state = "completed", context.method = "throw", context.arg = record.arg);\n        }\n      };\n    }(innerFn, self, context), generator;\n  }\n\n  function tryCatch(fn, obj, arg) {\n    try {\n      return {\n        type: "normal",\n        arg: fn.call(obj, arg)\n      };\n    } catch (err) {\n      return {\n        type: "throw",\n        arg: err\n      };\n    }\n  }\n\n  exports.wrap = wrap;\n  var ContinueSentinel = {};\n\n  function Generator() {}\n\n  function GeneratorFunction() {}\n\n  function GeneratorFunctionPrototype() {}\n\n  var IteratorPrototype = {};\n  define(IteratorPrototype, iteratorSymbol, function () {\n    return this;\n  });\n  var getProto = Object.getPrototypeOf,\n      NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype);\n  var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype);\n\n  function defineIteratorMethods(prototype) {\n    ["next", "throw", "return"].forEach(function (method) {\n      define(prototype, method, function (arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n\n      if ("throw" !== record.type) {\n        var result = record.arg,\n            value = result.value;\n        return value && "object" == _typeof(value) && hasOwn.call(value, "__await") ? PromiseImpl.resolve(value.__await).then(function (value) {\n          invoke("next", value, resolve, reject);\n        }, function (err) {\n          invoke("throw", err, resolve, reject);\n        }) : PromiseImpl.resolve(value).then(function (unwrapped) {\n          result.value = unwrapped, resolve(result);\n        }, function (error) {\n          return invoke("throw", error, resolve, reject);\n        });\n      }\n\n      reject(record.arg);\n    }\n\n    var previousPromise;\n\n    this._invoke = function (method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function (resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg();\n    };\n  }\n\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n\n    if (undefined === method) {\n      if (context.delegate = null, "throw" === context.method) {\n        if (delegate.iterator["return"] && (context.method = "return", context.arg = undefined, maybeInvokeDelegate(delegate, context), "throw" === context.method)) return ContinueSentinel;\n        context.method = "throw", context.arg = new TypeError("The iterator does not provide a \'throw\' method");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n    if ("throw" === record.type) return context.method = "throw", context.arg = record.arg, context.delegate = null, ContinueSentinel;\n    var info = record.arg;\n    return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, "return" !== context.method && (context.method = "next", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = "throw", context.arg = new TypeError("iterator result is not an object"), context.delegate = null, ContinueSentinel);\n  }\n\n  function pushTryEntry(locs) {\n    var entry = {\n      tryLoc: locs[0]\n    };\n    1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = "normal", delete record.arg, entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    this.tryEntries = [{\n      tryLoc: "root"\n    }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0);\n  }\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) return iteratorMethod.call(iterable);\n      if ("function" == typeof iterable.next) return iterable;\n\n      if (!isNaN(iterable.length)) {\n        var i = -1,\n            next = function next() {\n          for (; ++i < iterable.length;) {\n            if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next;\n          }\n\n          return next.value = undefined, next.done = !0, next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    return {\n      next: doneResult\n    };\n  }\n\n  function doneResult() {\n    return {\n      value: undefined,\n      done: !0\n    };\n  }\n\n  return GeneratorFunction.prototype = GeneratorFunctionPrototype, define(Gp, "constructor", GeneratorFunctionPrototype), define(GeneratorFunctionPrototype, "constructor", GeneratorFunction), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, "GeneratorFunction"), exports.isGeneratorFunction = function (genFun) {\n    var ctor = "function" == typeof genFun && genFun.constructor;\n    return !!ctor && (ctor === GeneratorFunction || "GeneratorFunction" === (ctor.displayName || ctor.name));\n  }, exports.mark = function (genFun) {\n    return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, "GeneratorFunction")), genFun.prototype = Object.create(Gp), genFun;\n  }, exports.awrap = function (arg) {\n    return {\n      __await: arg\n    };\n  }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () {\n    return this;\n  }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    void 0 === PromiseImpl && (PromiseImpl = Promise);\n    var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl);\n    return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) {\n      return result.done ? result.value : iter.next();\n    });\n  }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, "Generator"), define(Gp, iteratorSymbol, function () {\n    return this;\n  }), define(Gp, "toString", function () {\n    return "[object Generator]";\n  }), exports.keys = function (object) {\n    var keys = [];\n\n    for (var key in object) {\n      keys.push(key);\n    }\n\n    return keys.reverse(), function next() {\n      for (; keys.length;) {\n        var key = keys.pop();\n        if (key in object) return next.value = key, next.done = !1, next;\n      }\n\n      return next.done = !0, next;\n    };\n  }, exports.values = values, Context.prototype = {\n    constructor: Context,\n    reset: function reset(skipTempReset) {\n      if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = "next", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) {\n        "t" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined);\n      }\n    },\n    stop: function stop() {\n      this.done = !0;\n      var rootRecord = this.tryEntries[0].completion;\n      if ("throw" === rootRecord.type) throw rootRecord.arg;\n      return this.rval;\n    },\n    dispatchException: function dispatchException(exception) {\n      if (this.done) throw exception;\n      var context = this;\n\n      function handle(loc, caught) {\n        return record.type = "throw", record.arg = exception, context.next = loc, caught && (context.method = "next", context.arg = undefined), !!caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i],\n            record = entry.completion;\n        if ("root" === entry.tryLoc) return handle("end");\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, "catchLoc"),\n              hasFinally = hasOwn.call(entry, "finallyLoc");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0);\n            if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc);\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0);\n          } else {\n            if (!hasFinally) throw new Error("try statement without catch or finally");\n            if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc);\n          }\n        }\n      }\n    },\n    abrupt: function abrupt(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n\n        if (entry.tryLoc <= this.prev && hasOwn.call(entry, "finallyLoc") && this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      finallyEntry && ("break" === type || "continue" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null);\n      var record = finallyEntry ? finallyEntry.completion : {};\n      return record.type = type, record.arg = arg, finallyEntry ? (this.method = "next", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record);\n    },\n    complete: function complete(record, afterLoc) {\n      if ("throw" === record.type) throw record.arg;\n      return "break" === record.type || "continue" === record.type ? this.next = record.arg : "return" === record.type ? (this.rval = this.arg = record.arg, this.method = "return", this.next = "end") : "normal" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel;\n    },\n    finish: function finish(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel;\n      }\n    },\n    "catch": function _catch(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n\n          if ("throw" === record.type) {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n\n          return thrown;\n        }\n      }\n\n      throw new Error("illegal catch attempt");\n    },\n    delegateYield: function delegateYield(iterable, resultName, nextLoc) {\n      return this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      }, "next" === this.method && (this.arg = undefined), ContinueSentinel;\n    }\n  }, exports;\n}\n\nmodule.exports = _regeneratorRuntime, module.exports.__esModule = true, module.exports["default"] = module.exports;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///10\n')},module=>{eval('function _typeof(obj) {\n  "@babel/helpers - typeof";\n\n  return (module.exports = _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;\n  }, module.exports.__esModule = true, module.exports["default"] = module.exports), _typeof(obj);\n}\n\nmodule.exports = _typeof, module.exports.__esModule = true, module.exports["default"] = module.exports;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTEuanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0EsR0FBRyxFQUFFLHlCQUF5QixTQUFTLHlCQUF5QjtBQUNoRTs7QUFFQSwwQkFBMEIseUJBQXlCLFNBQVMseUJBQXlCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vd2ViYXBwLy4vbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvdHlwZW9mLmpzPzE0YmMiXSwic291cmNlc0NvbnRlbnQiOlsiZnVuY3Rpb24gX3R5cGVvZihvYmopIHtcbiAgXCJAYmFiZWwvaGVscGVycyAtIHR5cGVvZlwiO1xuXG4gIHJldHVybiAobW9kdWxlLmV4cG9ydHMgPSBfdHlwZW9mID0gXCJmdW5jdGlvblwiID09IHR5cGVvZiBTeW1ib2wgJiYgXCJzeW1ib2xcIiA9PSB0eXBlb2YgU3ltYm9sLml0ZXJhdG9yID8gZnVuY3Rpb24gKG9iaikge1xuICAgIHJldHVybiB0eXBlb2Ygb2JqO1xuICB9IDogZnVuY3Rpb24gKG9iaikge1xuICAgIHJldHVybiBvYmogJiYgXCJmdW5jdGlvblwiID09IHR5cGVvZiBTeW1ib2wgJiYgb2JqLmNvbnN0cnVjdG9yID09PSBTeW1ib2wgJiYgb2JqICE9PSBTeW1ib2wucHJvdG90eXBlID8gXCJzeW1ib2xcIiA6IHR5cGVvZiBvYmo7XG4gIH0sIG1vZHVsZS5leHBvcnRzLl9fZXNNb2R1bGUgPSB0cnVlLCBtb2R1bGUuZXhwb3J0c1tcImRlZmF1bHRcIl0gPSBtb2R1bGUuZXhwb3J0cyksIF90eXBlb2Yob2JqKTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBfdHlwZW9mLCBtb2R1bGUuZXhwb3J0cy5fX2VzTW9kdWxlID0gdHJ1ZSwgbW9kdWxlLmV4cG9ydHNbXCJkZWZhdWx0XCJdID0gbW9kdWxlLmV4cG9ydHM7Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///11\n')},(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "login": () => (/* binding */ login)\n/* harmony export */ });\n/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(13);\n/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(14);\n/* harmony import */ var _ajaxfunctioncall__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(15);\n/* harmony import */ var _url__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(18);\n\n\n\n\nvar login = /*#__PURE__*/function () {\n  function login() {\n    (0,_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__["default"])(this, login);\n\n    this.username = "";\n    this.password = "";\n  }\n\n  (0,_babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__["default"])(login, [{\n    key: "loginaction",\n    value: function loginaction(form, token) {\n      if (form) {\n        // if it exists \n        // formdata \n        console.log(\'creating form ....\'); // console.log(form,form.get("username"));\n\n        this.username = form.get("username");\n        this.password = form.get("password");\n        console.log("username ", this.username, "password ", this.password);\n        (0,_ajaxfunctioncall__WEBPACK_IMPORTED_MODULE_2__.submitform)("".concat(_url__WEBPACK_IMPORTED_MODULE_3__.loginurl, "/api/login"), {\n          username: this.username,\n          password: this.password\n        }, null, \'text\', \'post\'); //send form\n      }\n\n      console.log(\'login completed truly\');\n    }\n  }]);\n\n  return login;\n}();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTIuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7OztBQUFBO0FBQ0E7QUFDTyxJQUFNRSxLQUFiO0VBR0UsaUJBQWE7SUFBQTs7SUFDVixLQUFLQyxRQUFMLEdBQWMsRUFBZDtJQUNBLEtBQUtDLFFBQUwsR0FBYyxFQUFkO0VBQ0M7O0VBTk47SUFBQTtJQUFBLE9BT0cscUJBQVlDLElBQVosRUFBMEJDLEtBQTFCLEVBQTRDO01BQzNDLElBQUdELElBQUgsRUFBUTtRQUFFO1FBQ0g7UUFDSkUsT0FBTyxDQUFDQyxHQUFSLENBQVksb0JBQVosRUFGSyxDQUdOOztRQUNDLEtBQUtMLFFBQUwsR0FBaUJFLElBQUksQ0FBQ0ksR0FBTCxDQUFTLFVBQVQsQ0FBakI7UUFDQSxLQUFLTCxRQUFMLEdBQWlCQyxJQUFJLENBQUNJLEdBQUwsQ0FBUyxVQUFULENBQWpCO1FBQ0FGLE9BQU8sQ0FBQ0MsR0FBUixDQUFZLFdBQVosRUFBd0IsS0FBS0wsUUFBN0IsRUFBc0MsV0FBdEMsRUFBa0QsS0FBS0MsUUFBdkQ7UUFDRkosNkRBQVUsV0FBSUMsMENBQUosaUJBQXlCO1VBQUNFLFFBQVEsRUFBQyxLQUFLQSxRQUFmO1VBQXdCQyxRQUFRLEVBQUMsS0FBS0E7UUFBdEMsQ0FBekIsRUFBeUUsSUFBekUsRUFBOEUsTUFBOUUsRUFBcUYsTUFBckYsQ0FBVixDQVBPLENBT2dHO01BQ25HOztNQUNERyxPQUFPLENBQUNDLEdBQVIsQ0FBWSx1QkFBWjtJQUNEO0VBbEJQOztFQUFBO0FBQUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly93ZWJhcHAvLi90c19zY3JpcHRzL3RzYmFja2VuZHNjcmlwdC9sb2dpbi50cz9mZDNhIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7c3VibWl0Zm9ybX0gZnJvbSBcIi4vYWpheGZ1bmN0aW9uY2FsbFwiIDtcclxuaW1wb3J0IHtiYWNrZW5kdXJsLGxvZ2ludXJsfSBmcm9tIFwiLi4vdXJsXCIgO1xyXG5leHBvcnQgY2xhc3MgbG9naW57XHJcbiAgcHJpdmF0ZSB1c2VybmFtZTpzdHJpbmcgO1xyXG4gIHByaXZhdGUgcGFzc3dvcmQ6c3RyaW5nIDtcclxuICBjb25zdHJ1Y3Rvcigpe1xyXG4gICAgIHRoaXMudXNlcm5hbWU9XCJcIiA7XHJcbiAgICAgdGhpcy5wYXNzd29yZD1cIlwiO1xyXG4gICAgIH1cclxuICAgbG9naW5hY3Rpb24oZm9ybTpGb3JtRGF0YSx0b2tlbjpzdHJpbmcpOnZvaWR7XHJcbiAgICBpZihmb3JtKXsgLy8gaWYgaXQgZXhpc3RzIFxyXG4gICAgICAgICAgIC8vIGZvcm1kYXRhIFxyXG4gICAgICAgY29uc29sZS5sb2coJ2NyZWF0aW5nIGZvcm0gLi4uLicpO1xyXG4gICAgICAvLyBjb25zb2xlLmxvZyhmb3JtLGZvcm0uZ2V0KFwidXNlcm5hbWVcIikpO1xyXG4gICAgICAgdGhpcy51c2VybmFtZSA9ICBmb3JtLmdldChcInVzZXJuYW1lXCIpIGFzIHN0cmluZyA7XHJcbiAgICAgICB0aGlzLnBhc3N3b3JkID0gIGZvcm0uZ2V0KFwicGFzc3dvcmRcIikgYXMgc3RyaW5nO1xyXG4gICAgICAgY29uc29sZS5sb2coXCJ1c2VybmFtZSBcIix0aGlzLnVzZXJuYW1lLFwicGFzc3dvcmQgXCIsdGhpcy5wYXNzd29yZCk7XHJcbiAgICAgc3VibWl0Zm9ybShgJHtsb2dpbnVybH0vYXBpL2xvZ2luYCx7dXNlcm5hbWU6dGhpcy51c2VybmFtZSxwYXNzd29yZDp0aGlzLnBhc3N3b3JkfSxudWxsLCd0ZXh0JywncG9zdCcpOy8vc2VuZCBmb3JtXHJcbiAgICAgICAgfVxyXG4gICAgICAgIGNvbnNvbGUubG9nKCdsb2dpbiBjb21wbGV0ZWQgdHJ1bHknKTtcclxuICAgICAgfVxyXG59XHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuIl0sIm5hbWVzIjpbInN1Ym1pdGZvcm0iLCJsb2dpbnVybCIsImxvZ2luIiwidXNlcm5hbWUiLCJwYXNzd29yZCIsImZvcm0iLCJ0b2tlbiIsImNvbnNvbGUiLCJsb2ciLCJnZXQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///12\n')},(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__)=>{"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "default": () => (/* binding */ _classCallCheck)\n/* harmony export */ });\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError("Cannot call a class as a function");\n  }\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTMuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFlO0FBQ2Y7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly93ZWJhcHAvLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vY2xhc3NDYWxsQ2hlY2suanM/OWRjMiJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBfY2xhc3NDYWxsQ2hlY2soaW5zdGFuY2UsIENvbnN0cnVjdG9yKSB7XG4gIGlmICghKGluc3RhbmNlIGluc3RhbmNlb2YgQ29uc3RydWN0b3IpKSB7XG4gICAgdGhyb3cgbmV3IFR5cGVFcnJvcihcIkNhbm5vdCBjYWxsIGEgY2xhc3MgYXMgYSBmdW5jdGlvblwiKTtcbiAgfVxufSJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///13\n')},(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__)=>{"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "default": () => (/* binding */ _createClass)\n/* harmony export */ });\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if ("value" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, "prototype", {\n    writable: false\n  });\n  return Constructor;\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTQuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBO0FBQ0Esa0JBQWtCLGtCQUFrQjtBQUNwQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFZTtBQUNmO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly93ZWJhcHAvLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vY3JlYXRlQ2xhc3MuanM/Nzk5ZSJdLCJzb3VyY2VzQ29udGVudCI6WyJmdW5jdGlvbiBfZGVmaW5lUHJvcGVydGllcyh0YXJnZXQsIHByb3BzKSB7XG4gIGZvciAodmFyIGkgPSAwOyBpIDwgcHJvcHMubGVuZ3RoOyBpKyspIHtcbiAgICB2YXIgZGVzY3JpcHRvciA9IHByb3BzW2ldO1xuICAgIGRlc2NyaXB0b3IuZW51bWVyYWJsZSA9IGRlc2NyaXB0b3IuZW51bWVyYWJsZSB8fCBmYWxzZTtcbiAgICBkZXNjcmlwdG9yLmNvbmZpZ3VyYWJsZSA9IHRydWU7XG4gICAgaWYgKFwidmFsdWVcIiBpbiBkZXNjcmlwdG9yKSBkZXNjcmlwdG9yLndyaXRhYmxlID0gdHJ1ZTtcbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBkZXNjcmlwdG9yLmtleSwgZGVzY3JpcHRvcik7XG4gIH1cbn1cblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gX2NyZWF0ZUNsYXNzKENvbnN0cnVjdG9yLCBwcm90b1Byb3BzLCBzdGF0aWNQcm9wcykge1xuICBpZiAocHJvdG9Qcm9wcykgX2RlZmluZVByb3BlcnRpZXMoQ29uc3RydWN0b3IucHJvdG90eXBlLCBwcm90b1Byb3BzKTtcbiAgaWYgKHN0YXRpY1Byb3BzKSBfZGVmaW5lUHJvcGVydGllcyhDb25zdHJ1Y3Rvciwgc3RhdGljUHJvcHMpO1xuICBPYmplY3QuZGVmaW5lUHJvcGVydHkoQ29uc3RydWN0b3IsIFwicHJvdG90eXBlXCIsIHtcbiAgICB3cml0YWJsZTogZmFsc2VcbiAgfSk7XG4gIHJldHVybiBDb25zdHJ1Y3Rvcjtcbn0iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///14\n')},(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "checktoken": () => (/* binding */ checktoken),\n/* harmony export */   "contenttype": () => (/* binding */ contenttype),\n/* harmony export */   "contenttypewithtoken": () => (/* binding */ contenttypewithtoken),\n/* harmony export */   "formsubmit": () => (/* binding */ formsubmit),\n/* harmony export */   "getAvatarColor": () => (/* binding */ getAvatarColor),\n/* harmony export */   "onMessageReceived": () => (/* binding */ onMessageReceived),\n/* harmony export */   "onPrivateMessage": () => (/* binding */ onPrivateMessage),\n/* harmony export */   "onloaddatatable2": () => (/* binding */ onloaddatatable2),\n/* harmony export */   "onloaddatawithfetch": () => (/* binding */ onloaddatawithfetch),\n/* harmony export */   "processrequest2": () => (/* binding */ processrequest2),\n/* harmony export */   "sendmailtocust": () => (/* binding */ sendmailtocust),\n/* harmony export */   "setajax": () => (/* binding */ setajax),\n/* harmony export */   "setajaxwithform": () => (/* binding */ setajaxwithform),\n/* harmony export */   "setajaxwithpromise": () => (/* binding */ setajaxwithpromise),\n/* harmony export */   "submitform": () => (/* binding */ submitform)\n/* harmony export */ });\n/* harmony import */ var _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(1);\n/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(9);\n/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _lithtmlscript__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(16);\n/* harmony import */ var _miscellaneous__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(17);\n\n\n //declare var response:any;\n//these are ajax calls\n//login\n\n\nvar checktoken = function checktoken(token) {\n  //const token= localStorage.getItem(\'token\') ;\n  var decoded = jwt_decode(token);\n  var now = Date.now().valueOf() / 1000;\n  var tokenexp = parseInt(decoded.exp);\n  (0,_miscellaneous__WEBPACK_IMPORTED_MODULE_3__.invalidatetoken)(tokenexp);\n};\nvar contenttype = {\n  "accept": "application/json",\n  "Content-Type": "application/json"\n};\nvar contenttypewithtoken = function contenttypewithtoken(token) {\n  return {\n    "accept": "application/json",\n    "Content-Type": "application/json",\n    "Authorization": "Bearer " + token\n  };\n};\nfunction setajaxwithpromise(datatype, url, method, data, processresponse, beforesend, header) {\n  return new Promise(function (resolve, reject) {\n    $.ajax({\n      url: url,\n      type: method,\n      data: data,\n      datatype: datatype,\n      headers: header,\n      beforeSend: beforesend,\n      success: function success(data) {\n        resolve(processresponse(data));\n      },\n      error: function error(jqXHR, textStatus, errorThrown) {\n        reject(jqXHR);\n      }\n    });\n  });\n}\nvar setajax = function setajax(datatype, url, method, data, processresponse, beforesend, header) {\n  //the beforesend will set headers and authorization i it is required \n  console.log(\' datatype \', datatype, \' url \', url, \' method \', method);\n  $.ajax({\n    type: method,\n    url: url,\n    data: data,\n    dataType: datatype,\n    headers: header,\n    beforeSend: beforesend,\n    success: function success(response) {\n      processresponse(response);\n    },\n    statusCode: {\n      500: function _(xhr) {\n        if (window.location.href.includes(\'wishlist\')) {\n          toastr.error(\'Invalid Username/Password/Wrong credentials\');\n        }\n\n        if (window.location.href.includes(\'cart\')) {\n          toastr.error(\'Invalid Username/Password/Wrong credentials\');\n        }\n      }\n    },\n    error: function error(jqXHR, textStatus, errorThrown) {\n      console.log(textStatus, errorThrown);\n    }\n  });\n};\nvar setajaxwithform = function setajaxwithform(datatype, url, method, data, processresponse, beforesend, header) {\n  //the beforesend will set headers and authorization i it is required \n  console.log(\' datatype \', datatype, \' url \', url, \' method \', method);\n  $.ajax({\n    url: url,\n    type: method,\n    headers: header,\n    dataType: datatype,\n    contentType: false,\n    processData: false,\n    data: data,\n    beforeSend: beforesend,\n    success: function success(response) {\n      processresponse(response);\n    },\n    statusCode: {\n      500: function _(xhr) {\n        toastr.error(\'Invalid Username/Password/Wrong credentials\');\n      }\n    },\n    error: function error(jqXHR, textStatus, errorThrown) {\n      console.log(textStatus, errorThrown);\n    }\n  });\n};\nvar submitform = function submitform(url, data, token, returntype, methodtype) {\n  console.log("url ", url, \'check \', data instanceof FormData);\n\n  if (!$.isEmptyObject(token) && data instanceof FormData) {\n    checktoken(token); // validate token\n\n    $.ajax({\n      url: url,\n      type: methodtype,\n      headers: {\n        Authorization: "Bearer ".concat(token)\n      },\n      dataType: returntype,\n      contentType: false,\n      data: data,\n      processData: false,\n      beforeSend: function beforeSend() {\n        //$("#log").empty().html("<img src=\'./myresources/jetlogistics/images/btn-ajax-loader.gif\'/> &nbsp; Signing In ...");      \t\t       \n        console.log(\'inside ajax .......\');\n      },\n      success: function success(response) {\n        console.log(response); //  localStorage.setItem("token",response) ;\n        //  setTimeout(function() {\n        //       $(".form-button").empty().html("<img src=\'./dist/images/btn-ajax-loader.gif\'/> &nbsp; Signing In ...please wait ....");\n        //       window.location.href="../adminindex" ;\n        //             },2000);\n\n        toastr.success("successfully uploaded/created");\n      },\n      error: function error(err) {\n        console.log(err);\n        Swal.fire({\n          icon: \'error\',\n          text: \'Operation Failed.\'\n        });\n        throw new Error(\'Operation failed .\');\n      },\n      complete: function complete() {// return ;\n      }\n    });\n    return;\n  } else if (!$.isEmptyObject(token) && data instanceof Object) {\n    checktoken(token); // validate token\n\n    $.ajax({\n      url: url,\n      type: methodtype,\n      headers: {\n        Authorization: "Bearer ".concat(token)\n      },\n      dataType: returntype,\n      contentType: \'application/json\',\n      data: JSON.stringify(data),\n      beforeSend: function beforeSend() {\n        //$("#log").empty().html("<img src=\'./myresources/jetlogistics/images/btn-ajax-loader.gif\'/> &nbsp; Signing In ...");      \t\t       \n        console.log(\'inside ajax .......\');\n      },\n      success: function success(response) {\n        console.log(response); //   var decoded = jwt_decode(response);\t \n        //   console.log(decoded,\'exp \',decoded[\'exp\'] , \'sub \',decoded.sub);\n        // localStorage.setItem("token",response) ;\n        //    localStorage.setItem("userid",decoded.sub) ;\n        // $(".form-button").empty().html(`<button id="login">Login</button>`);\n        //  window.location.href="../adminindex" ;\n        //  setTimeout(function() {\n        //       $(".form-button").empty().html("<img src=\'./dist/images/btn-ajax-loader.gif\'/> &nbsp; Signing In ...please wait ....");\n        //       window.location.href="../adminindex" ;\n        //             },2000); \n\n        toastr.success("created/uploaded successfull ....");\n      },\n      error: function error(err) {\n        console.log(err);\n        Swal.fire({\n          icon: \'error\',\n          text: \'Operation Failed.\'\n        });\n      }\n    });\n    return;\n  } //this one is if token is empty , it  can permit all \n\n\n  $.ajax({\n    url: url,\n    type: methodtype,\n    dataType: returntype,\n    contentType: \'application/json\',\n    data: JSON.stringify(data),\n    beforeSend: function beforeSend() {\n      //$("#log").empty().html("<img src=\'./myresources/jetlogistics/images/btn-ajax-loader.gif\'/> &nbsp; Signing In ...");      \t\t       \n      console.log(\'inside ajax .......\');\n    },\n    success: function success(response) {\n      //alert(\'creating response \') ;\n      // console.log(response);\n      //   console.log(decoded,\'exp \',decoded[\'exp\'] , \'sub \',decoded.sub);\n      // console.log(" response ", response);\n      // alert(response);\n      localStorage.setItem("token", response); //   localStorage.setItem("userid",decoded.sub) ;\n      // $(".form-button").empty().html(`<button id="login">Login</button>`);\n      //  window.location.href="../adminindex" ;\n\n      setTimeout(function () {\n        $(".form-button").empty().html("<img src=\'./dist/images/btn-ajax-loader.gif\'/> &nbsp; Signing In ...please wait ....");\n        console.log(\'redirecting ......\');\n        window.location.href = "../adminindex";\n      }, 1500);\n    },\n    error: function error(err) {\n      console.log(err);\n      $("#error").fadeIn(500, function (e) {\n        $("#error").empty().html(\'<br/><div class="alert alert-danger"> <span class="glyphicon glyphicon-info-sign"></span> &nbsp; \' + \'wrong username/password\' + \' !</div>\');\n      });\n    }\n  });\n};\nvar formsubmit = function formsubmit(url, data, token, returntype, methodtype, successmsg, errormsg) {\n  //console.log(\'data stringify \',JSON.stringify(data),\' data\',data) ;\n  if (token) {\n    checktoken(token); // validate token\n\n    return $.ajax({\n      url: url,\n      type: methodtype,\n      headers: {\n        Authorization: "Bearer ".concat(token)\n      },\n      dataType: returntype,\n      contentType: \'application/json\',\n      data: JSON.stringify(data),\n      beforeSend: function beforeSend() {\n        //$("#log").empty().html("<img src=\'./myresources/jetlogistics/images/btn-ajax-loader.gif\'/> &nbsp; Signing In ...");      \t\t       \n        console.log(\'inside ajax .......\');\n      },\n      success: function success(response) {\n        console.log(\'response \', response);\n        successmsg();\n      },\n      error: function error(err) {\n        console.log(\'error \', err);\n\n        if (err.status === 400) {\n          errormsg(\'Please use a registered  email\');\n          return;\n        }\n\n        errormsg();\n      }\n    });\n    return;\n  }\n\n  return $.ajax({\n    url: url,\n    type: methodtype,\n    dataType: returntype,\n    contentType: \'application/json\',\n    data: JSON.stringify(data),\n    beforeSend: function beforeSend() {\n      //$("#log").empty().html("<img src=\'./myresources/jetlogistics/images/btn-ajax-loader.gif\'/> &nbsp; Signing In ...");      \t\t       \n      console.log(\'inside ajax .......\');\n    },\n    success: function success(response) {\n      successmsg();\n    },\n    error: function error(err) {\n      console.log(\'error \', err);\n      errormsg();\n    }\n  });\n};\nvar processrequest2 = /*#__PURE__*/function () {\n  var _ref = (0,_babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_0__["default"])( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1___default().mark(function _callee(url, methodtype, headers, myfunc) {\n    var res, _res;\n\n    return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1___default().wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (!(methodtype === \'get\')) {\n              _context.next = 4;\n              break;\n            }\n\n            _context.next = 3;\n            return fetch(url, {\n              method: methodtype,\n              credentials: \'same-origin\',\n              headers: headers\n            }).then(function (response) {\n              if (response.status != 200) {\n                throw new Error("network access  error");\n              }\n\n              return response.text();\n            }).then(function (r) {\n              // console.log(\'r in function \',r) ;\n              myfunc(r);\n            });\n\n          case 3:\n            res = _context.sent;\n\n          case 4:\n            if (!(methodtype === \'post\' || methodtype === \'put\' || methodtype === \'delete\')) {\n              _context.next = 8;\n              break;\n            }\n\n            _context.next = 7;\n            return fetch(url, {\n              method: methodtype,\n              credentials: \'same-origin\',\n              headers: headers\n            }).then(function (response) {\n              if (response.status != 200) {\n                throw new Error("network access  error");\n              }\n\n              return response.json();\n            }).then(function (r) {\n              // console.log(\'r in function \',r) ;\n              myfunc(r);\n            });\n\n          case 7:\n            _res = _context.sent;\n\n          case 8:\n          case "end":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function processrequest2(_x, _x2, _x3, _x4) {\n    return _ref.apply(this, arguments);\n  };\n}();\nvar onloaddatatable2 = function onloaddatatable2(slider, id, path, dataarray, url, datatable, postfunc) {\n  console.log("".concat(path, "/").concat(url));\n  $(document).ready(function () {\n    datatable = $(id).DataTable({\n      paging: true,\n      //dom: \'Bfrtip\',\n      dom: \'Bfrltip\',\n      buttons: [\'excelHtml5\', \'pdfHtml5\', \'print\', {\n        text: \'Reload\',\n        action: function action(e, dt, node, config) {\n          dt.ajax.reload();\n        }\n      } //  {\n      //      extend: \'searchPanes\',\n      //      config: {\n      //          cascadePanes: true,\n      //          serverSide:false,\n      //          threshold: 1,\n      //          columns: [1,2,3,4,5],\n      //          orthogonal: { search: \'filter\', display: \'display\' }, \n      //      }\n      //  }\n      ],\n      select: {\n        selector: \'td:not(:first-child)\',\n        style: \'os\'\n      },\n      pageLength: 20,\n      searching: true,\n      ordering: true,\n      processing: true,\n      serverSide: false,\n      "ajax": {\n        type: \'GET\',\n        url: "".concat(path, "/").concat(url),\n        // dataSrc:"",\n        headers: {\n          //    "content-type": "application/json",\n          //     "accept": "application/json",\n          "Authorization": "Bearer " + localStorage.getItem(\'token\').trim()\n        } //  data:function(d:any){\n        //     return JSON.parse(d) ;\n        //  },\n        //  success:function(response:any){\n        //   console.log(\'response \',response) ;\n        //  }\n\n      },\n      "columns": dataarray,\n      "order": [[1, \'asc\']],\n      "sPaginationType": "full_numbers",\n      "scrollY": 200,\n      "scrollX": true,\n      "autowidth": true,\n      "destroy": true\n    }); // Add event listener for opening and closing details\n\n    $("".concat(id, " tbody")).on(\'click\', \'tr\', function (e) {\n      var data = datatable.row(e.target).data();\n      console.log(data, slider);\n      $(slider).autofill(data);\n      $(slider + " :input").prop(\'readonly\', true);\n      postfunc();\n      $(slider).slideToggle();\n    }); // $(`${id} tbody`).on(\'click\', \'td.dt-control\', function () {\n    //      var tr = $(this).closest(\'tr\');\n    //      var row = datatable.row(tr);\n    //      console.log(row) ;\n    // });\n  });\n  return datatable;\n};\nvar onloaddatawithfetch = function onloaddatawithfetch(url) {\n  var table;\n  document.addEventListener(\'DOMContentLoaded\', function () {\n    table = $("#trans").DataTable({\n      ajax: function ajax(d, cb) {\n        fetch(url, {\n          method: \'get\',\n          // credentials: \'same-origin\',\n          headers: {\n            "content-type": "application/json",\n            "accept": "application/json",\n            "Authorization": "Bearer " + localStorage.getItem(\'token\').trim()\n          }\n        }).then(function (response) {\n          console.log(\' response.json() \', response.clone().json());\n          response.json();\n        }).then(function (data) {\n          return cb(data);\n        });\n      },\n      "columns": [{\n        data: "orderid"\n      }, {\n        data: "paymentstatus"\n      }, {\n        data: "paymentmethod"\n      }, {\n        data: "orderstatus"\n      }, {\n        data: "orderdate"\n      }],\n      "order": [[1, \'asc\']],\n      destroy: true\n    });\n  });\n  return table;\n};\nvar sendmailtocust = function sendmailtocust(body) {\n  $((0,_lithtmlscript__WEBPACK_IMPORTED_MODULE_2__.secondialog)(function () {\n    return body;\n  }, function () {\n    return "<h5 class=\\"modal-title\\">Email Sender box</h5>";\n  }, function () {\n    return "<div class=\\"row\\">\\n          <div class=\\"col-md-6\\">\\n        <button class=\\"btn btn-danger\\" id=\\"redirecttologin\\">Cancel</button>\\n         </div>\\n        </div>";\n  })).insertAfter(".order-datatable");\n  $(\'#exampleModal\').modal(\'show\'); //show modal\n};\nfunction onMessageReceived(payload) {\n  console.log("message " + payload.body.message);\n  $(\'#messagearea\').append("<br/><li style=\\"color:".concat(getAvatarColor(JSON.parse(payload.body).message), "\\"><strong>").concat(JSON.parse(payload.body).message, "</strong></li><br/>"));\n}\nvar colors = [\'#2196F3\', \'#32c787\', \'#00BCD4\', \'#ff5652\', \'#ffc107\', \'#ff85af\', \'#FF9800\', \'#39bbb0\'];\nfunction getAvatarColor(messageSender) {\n  var hash = 0;\n\n  for (var i = 0; i < messageSender.length; i++) {\n    hash = 31 * hash + messageSender.charCodeAt(i);\n  }\n\n  var index = Math.abs(hash % colors.length);\n  return colors[index];\n}\nvar onPrivateMessage = function onPrivateMessage(payload) {\n  console.log(\'vendor \', payload.body);\n  $(\'#msgarea\').append("<br/><li style=\\"color:".concat(getAvatarColor(JSON.parse(payload.body).message), "\\"><strong>").concat(JSON.parse(payload.body).message, "</strong></li><br/>"));\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///15\n')},(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "dialog": () => (/* binding */ dialog),\n/* harmony export */   "secondialog": () => (/* binding */ secondialog)\n/* harmony export */ });\nvar dialog = function dialog(form, header, footer) {\n  return "\\n   <div class=\\"modal fade\\" id=\\"exampleModal\\" tabindex=\\"-1\\" role=\\"dialog\\" data-backdrop=\\"static\\" aria-labelledby=\\"exampleModalLabel\\" aria-hidden=\\"true\\">\\n   <div class=\\"modal-dialog\\" role=\\"document\\">\\n       <div class=\\"modal-content\\">\\n           <div class=\\"modal-header\\">\\n             ".concat(header, " \\n           </div>\\n           <div class=\\"modal-body\\">\\n             <div id=\\"error\\"></div>\\n              ").concat(form, "\\n           </div>\\n           <div class=\\"modal-footer\\">\\n                ").concat(footer, "\\n               <button class=\\"btn btn-secondary\\" type=\\"button\\" data-dismiss=\\"modal\\">Close</button>\\n           </div>\\n       </div>\\n   </div>\\n</div>\\n   ");\n};\nvar secondialog = function secondialog(form, header, footer) {\n  return "\\n  <div class=\\"modal fade\\" id=\\"exampleModal\\" tabindex=\\"-1\\" role=\\"dialog\\" data-backdrop=\\"static\\" aria-labelledby=\\"exampleModalLabel\\" aria-hidden=\\"true\\">\\n  <div class=\\"modal-dialog\\" role=\\"document\\">\\n      <div class=\\"modal-content\\">\\n          <div class=\\"modal-header\\">\\n            ".concat(header(), " \\n          </div>\\n          <div class=\\"modal-body\\">\\n            <div id=\\"error\\"></div>\\n             ").concat(form(), "\\n          </div>\\n          <div class=\\"modal-footer\\">\\n               ").concat(footer(), "\\n          </div>\\n      </div>\\n  </div>\\n</div>\\n  ");\n}; // <form class="needs-validation">\n// <div class="form">\n//     <div class="form-group">\n//         <label for="validationCustom01" class="mb-1">Category Name :</label>\n//         <input class="form-control" id="validationCustom01" type="text">\n//     </div>\n//     <div class="form-group mb-0">\n//         <label for="validationCustom02" class="mb-1">Category Image :</label>\n//         <input class="form-control" id="validationCustom02" type="file">\n//     </div>\n// </div>\n// </form>\n//header \n// <h5 class="modal-title f-w-600" id="exampleModalLabel">Add Physical Product</h5>\n// <button class="close" type="button" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">Ã</span></button>\n// <button class="btn btn-primary" type="button">Save</button>//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTYuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBTyxJQUFNQSxNQUFNLEdBQUksU0FBVkEsTUFBVSxDQUFDQyxJQUFELEVBQVVDLE1BQVYsRUFBcUJDLE1BQXJCLEVBQWtDO0VBQ3RELHlVQUtZRCxNQUxaLCtIQVNhRCxJQVRiLDJGQVllRSxNQVpmO0FBbUJGLENBcEJNO0FBcUJBLElBQU1DLFdBQVcsR0FBSSxTQUFmQSxXQUFlLENBQUNILElBQUQsRUFBZUMsTUFBZixFQUErQkMsTUFBL0IsRUFBaUQ7RUFDM0Usb1VBS1lELE1BQU0sRUFMbEIsMkhBU2FELElBQUksRUFUakIsd0ZBWWVFLE1BQU0sRUFackI7QUFrQkQsQ0FuQk0sRUFvQlA7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBRUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly93ZWJhcHAvLi90c19zY3JpcHRzL2xpdGh0bWxzY3JpcHQudHM/YjQzNSJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgY29uc3QgZGlhbG9nICA9IChmb3JtOmFueSxoZWFkZXI6YW55LGZvb3RlcjphbnkpPT57XHJcbiAgIHJldHVybiBgXHJcbiAgIDxkaXYgY2xhc3M9XCJtb2RhbCBmYWRlXCIgaWQ9XCJleGFtcGxlTW9kYWxcIiB0YWJpbmRleD1cIi0xXCIgcm9sZT1cImRpYWxvZ1wiIGRhdGEtYmFja2Ryb3A9XCJzdGF0aWNcIiBhcmlhLWxhYmVsbGVkYnk9XCJleGFtcGxlTW9kYWxMYWJlbFwiIGFyaWEtaGlkZGVuPVwidHJ1ZVwiPlxyXG4gICA8ZGl2IGNsYXNzPVwibW9kYWwtZGlhbG9nXCIgcm9sZT1cImRvY3VtZW50XCI+XHJcbiAgICAgICA8ZGl2IGNsYXNzPVwibW9kYWwtY29udGVudFwiPlxyXG4gICAgICAgICAgIDxkaXYgY2xhc3M9XCJtb2RhbC1oZWFkZXJcIj5cclxuICAgICAgICAgICAgICR7aGVhZGVyfSBcclxuICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICA8ZGl2IGNsYXNzPVwibW9kYWwtYm9keVwiPlxyXG4gICAgICAgICAgICAgPGRpdiBpZD1cImVycm9yXCI+PC9kaXY+XHJcbiAgICAgICAgICAgICAgJHtmb3JtfVxyXG4gICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgIDxkaXYgY2xhc3M9XCJtb2RhbC1mb290ZXJcIj5cclxuICAgICAgICAgICAgICAgICR7Zm9vdGVyfVxyXG4gICAgICAgICAgICAgICA8YnV0dG9uIGNsYXNzPVwiYnRuIGJ0bi1zZWNvbmRhcnlcIiB0eXBlPVwiYnV0dG9uXCIgZGF0YS1kaXNtaXNzPVwibW9kYWxcIj5DbG9zZTwvYnV0dG9uPlxyXG4gICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgPC9kaXY+XHJcbiAgIDwvZGl2PlxyXG48L2Rpdj5cclxuICAgYFxyXG59XHJcbmV4cG9ydCBjb25zdCBzZWNvbmRpYWxvZyAgPSAoZm9ybTpGdW5jdGlvbixoZWFkZXI6RnVuY3Rpb24sZm9vdGVyOkZ1bmN0aW9uKT0+e1xyXG4gIHJldHVybiAoYFxyXG4gIDxkaXYgY2xhc3M9XCJtb2RhbCBmYWRlXCIgaWQ9XCJleGFtcGxlTW9kYWxcIiB0YWJpbmRleD1cIi0xXCIgcm9sZT1cImRpYWxvZ1wiIGRhdGEtYmFja2Ryb3A9XCJzdGF0aWNcIiBhcmlhLWxhYmVsbGVkYnk9XCJleGFtcGxlTW9kYWxMYWJlbFwiIGFyaWEtaGlkZGVuPVwidHJ1ZVwiPlxyXG4gIDxkaXYgY2xhc3M9XCJtb2RhbC1kaWFsb2dcIiByb2xlPVwiZG9jdW1lbnRcIj5cclxuICAgICAgPGRpdiBjbGFzcz1cIm1vZGFsLWNvbnRlbnRcIj5cclxuICAgICAgICAgIDxkaXYgY2xhc3M9XCJtb2RhbC1oZWFkZXJcIj5cclxuICAgICAgICAgICAgJHtoZWFkZXIoKX0gXHJcbiAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgIDxkaXYgY2xhc3M9XCJtb2RhbC1ib2R5XCI+XHJcbiAgICAgICAgICAgIDxkaXYgaWQ9XCJlcnJvclwiPjwvZGl2PlxyXG4gICAgICAgICAgICAgJHtmb3JtKCl9XHJcbiAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgIDxkaXYgY2xhc3M9XCJtb2RhbC1mb290ZXJcIj5cclxuICAgICAgICAgICAgICAgJHtmb290ZXIoKX1cclxuICAgICAgICAgIDwvZGl2PlxyXG4gICAgICA8L2Rpdj5cclxuICA8L2Rpdj5cclxuPC9kaXY+XHJcbiAgYCk7XHJcbn1cclxuLy8gPGZvcm0gY2xhc3M9XCJuZWVkcy12YWxpZGF0aW9uXCI+XHJcbi8vIDxkaXYgY2xhc3M9XCJmb3JtXCI+XHJcbi8vICAgICA8ZGl2IGNsYXNzPVwiZm9ybS1ncm91cFwiPlxyXG4vLyAgICAgICAgIDxsYWJlbCBmb3I9XCJ2YWxpZGF0aW9uQ3VzdG9tMDFcIiBjbGFzcz1cIm1iLTFcIj5DYXRlZ29yeSBOYW1lIDo8L2xhYmVsPlxyXG4vLyAgICAgICAgIDxpbnB1dCBjbGFzcz1cImZvcm0tY29udHJvbFwiIGlkPVwidmFsaWRhdGlvbkN1c3RvbTAxXCIgdHlwZT1cInRleHRcIj5cclxuLy8gICAgIDwvZGl2PlxyXG4vLyAgICAgPGRpdiBjbGFzcz1cImZvcm0tZ3JvdXAgbWItMFwiPlxyXG4vLyAgICAgICAgIDxsYWJlbCBmb3I9XCJ2YWxpZGF0aW9uQ3VzdG9tMDJcIiBjbGFzcz1cIm1iLTFcIj5DYXRlZ29yeSBJbWFnZSA6PC9sYWJlbD5cclxuLy8gICAgICAgICA8aW5wdXQgY2xhc3M9XCJmb3JtLWNvbnRyb2xcIiBpZD1cInZhbGlkYXRpb25DdXN0b20wMlwiIHR5cGU9XCJmaWxlXCI+XHJcbi8vICAgICA8L2Rpdj5cclxuLy8gPC9kaXY+XHJcbi8vIDwvZm9ybT5cclxuXHJcbi8vaGVhZGVyIFxyXG4vLyA8aDUgY2xhc3M9XCJtb2RhbC10aXRsZSBmLXctNjAwXCIgaWQ9XCJleGFtcGxlTW9kYWxMYWJlbFwiPkFkZCBQaHlzaWNhbCBQcm9kdWN0PC9oNT5cclxuLy8gPGJ1dHRvbiBjbGFzcz1cImNsb3NlXCIgdHlwZT1cImJ1dHRvblwiIGRhdGEtZGlzbWlzcz1cIm1vZGFsXCIgYXJpYS1sYWJlbD1cIkNsb3NlXCI+PHNwYW4gYXJpYS1oaWRkZW49XCJ0cnVlXCI+w4PClzwvc3Bhbj48L2J1dHRvbj5cclxuXHJcbi8vIDxidXR0b24gY2xhc3M9XCJidG4gYnRuLXByaW1hcnlcIiB0eXBlPVwiYnV0dG9uXCI+U2F2ZTwvYnV0dG9uPiJdLCJuYW1lcyI6WyJkaWFsb2ciLCJmb3JtIiwiaGVhZGVyIiwiZm9vdGVyIiwic2Vjb25kaWFsb2ciXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///16\n')},(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"doDecryption\": () => (/* binding */ doDecryption),\n/* harmony export */   \"doEncryption\": () => (/* binding */ doEncryption),\n/* harmony export */   \"invalidateSession\": () => (/* binding */ invalidateSession),\n/* harmony export */   \"invalidateSessionAndToken\": () => (/* binding */ invalidateSessionAndToken),\n/* harmony export */   \"invalidatetoken\": () => (/* binding */ invalidatetoken),\n/* harmony export */   \"invalidatetoken2\": () => (/* binding */ invalidatetoken2),\n/* harmony export */   \"redirectiftokenisnull\": () => (/* binding */ redirectiftokenisnull)\n/* harmony export */ });\nvar invalidatetoken = function invalidatetoken(exp) {\n  var now = Date.now().valueOf() / 1000;\n  console.log('validating token ....');\n\n  if (typeof exp !== 'undefined' && exp < now) {\n    localStorage.removeItem(\"token\");\n    localStorage.removeItem('userid');\n    console.log('after removing token');\n    window.location.href = \"../adminlogin\";\n    throw new Error(\"token expired\");\n  }\n\n  console.log('token valid ');\n  return;\n}; //clears session for sessionstorage and token\n\n\nvar invalidateSessionAndToken = function invalidateSessionAndToken(jwt_decode, token) {\n  console.log(\"decoding token \", localStorage.getItem('customertoken'));\n\n  if (localStorage.getItem('customertoken')) {\n    var decoded = jwt_decode(localStorage.getItem(token));\n\n    if (decoded !== undefined && decoded !== null) {\n      console.log(\"decoded token \", decoded);\n      var exp = parseInt(decoded.exp);\n      var now = Date.now().valueOf() / 1000;\n      console.log('validating token ....');\n\n      if (typeof exp !== 'undefined' && exp < now) {\n        localStorage.removeItem(token);\n        localStorage.clear();\n        sessionStorage.clear();\n        console.log('after removing token');\n        $('#customercart').empty().html(\"<center><p>Session expired.Please login again</p></center>\");\n        throw new Error(\"token expired\");\n      }\n    }\n  } else {\n    alert('pls login to access');\n    window.location.href = './index';\n  }\n};\n\nvar invalidateSession = function invalidateSession(jwt_decode, token) {\n  console.log(\"decoding token \", localStorage.getItem('customertoken'));\n\n  if (localStorage.getItem('customertoken') !== null) {\n    var decoded = jwt_decode(localStorage.getItem(token));\n\n    if (decoded) {\n      console.log(\"decoded token \", decoded);\n      var exp = parseInt(decoded.exp);\n      var now = Date.now().valueOf() / 1000;\n      console.log('validating token ....');\n\n      if (typeof exp !== 'undefined' && exp < now) {\n        localStorage.removeItem(token);\n        localStorage.clear();\n        sessionStorage.clear();\n        console.log('after removing token and session expired');\n\n        if (confirm('Session expired.Please reload')) {\n          window.location.href = './marketplace';\n        } //$('#customercart').empty().html(`<center><p>Session expired.Please login again</p></center>`);\n\n\n        throw new Error(\"token expired\");\n      }\n    }\n  }\n\n  console.log('got here ');\n}; // for frontend \n\nvar invalidatetoken2 = function invalidatetoken2(jwt_decode, token) {\n  // alert('review');\n  if (!localStorage.getItem(token)) {\n    //if not login\n    toastr.error('Please login');\n    throw new Error(\"no login yet\");\n  }\n\n  var decoded = jwt_decode(localStorage.getItem(token)); //console.log('decoded ',decoded);\n  //alert('review2');\n  //return ;\n\n  var exp = parseInt(decoded.exp);\n  var now = Date.now().valueOf() / 1000;\n  console.log('validating token ....');\n\n  if (typeof exp !== 'undefined' && exp < now) {\n    localStorage.removeItem(token); // localStorage.removeItem('userid');\n    // window.location.href=\"../jetcart/index\" ;\n\n    toastr.error('Please login');\n    console.log('after removing token');\n    throw new Error(\"token expired\");\n  }\n\n  console.log('token valid ');\n  return;\n};\n\nvar redirectiftokenisnull = function redirectiftokenisnull(token) {\n  if (token === null) {\n    window.location.href = \"../adminlogin\";\n  }\n};\n\nvar doEncryption = function doEncryption(plaintText, encryptedBase64Key, apicall) {\n  console.log('plaintText', plaintText, ' encryptedBase64Key ', encryptedBase64Key);\n  var parsedBase64Key = CryptoJS.enc.Base64.parse(encryptedBase64Key);\n  var encryptedData = null; // Encryption process\n\n  console.log(\"plaintText = \" + plaintText); // this is Base64-encoded encrypted data\n\n  encryptedData = CryptoJS.AES.encrypt(plaintText, parsedBase64Key, {\n    mode: CryptoJS.mode.ECB,\n    padding: CryptoJS.pad.Pkcs7\n  });\n  console.log(\"encryptedData in func = \" + encryptedData); // var payload2  = {payload:\"\"} ;\n  //  payload2.payload  = encryptedData ; \n  // console.log('payload ',JSON.stringify(payload2)) ;\n\n  apicall(\"{payload:\".concat(encryptedData, \"}\"));\n  return encryptedData;\n};\n\nvar doDecryption = function doDecryption(encryptedCipherText, encryptedBase64Key) {\n  var parsedBase64Key = CryptoJS.enc.Base64.parse(encryptedBase64Key); //var encryptedCipherText = 'U2WvSc8oTur1KkrB6VGNDmA3XxJb9cC+T9RnqT4kD90=' ; // or encryptedData;\n\n  var decryptedData = CryptoJS.AES.decrypt(encryptedCipherText, parsedBase64Key, {\n    mode: CryptoJS.mode.ECB,\n    padding: CryptoJS.pad.Pkcs7\n  });\n  console.log(\"DecryptedData = \" + decryptedData); // this is the decrypted data as a string\n\n  var decryptedText = decryptedData.toString(CryptoJS.enc.Utf8);\n  console.log(\"DecryptedText = \" + decryptedText);\n};\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///17\n")},(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "backendurl": () => (/* binding */ backendurl),\n/* harmony export */   "brands": () => (/* binding */ brands),\n/* harmony export */   "color": () => (/* binding */ color),\n/* harmony export */   "loginurl": () => (/* binding */ loginurl),\n/* harmony export */   "size": () => (/* binding */ size),\n/* harmony export */   "theprotocol": () => (/* binding */ theprotocol),\n/* harmony export */   "websocketurl": () => (/* binding */ websocketurl)\n/* harmony export */ });\nvar backendurl = "http://localhost:1022"; //export const backendurl="https://cristabackend.herokuapp.com" ;\n//export const backendurl  = "https://jetestore.herokuapp.com" ;\n\nvar loginurl = "http://localhost:1021"; //export const loginurl  = "https://jetecommerce.herokuapp.com"\n\nvar theprotocol = \'http://\'; //export const loginurl  =  "https://jecode teshop.herokuapp.com" ;\n\nvar websocketurl = \'http://localhost:1023/ws\';\nvar brands = new Map(); // for brands \n\nvar size = new Map(); // for size\n\nvar color = new Map(); // for color//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTguanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7OztBQUFPLElBQU1BLFVBQVUsR0FBQyx1QkFBakIsRUFDUDtBQUNBOztBQUNPLElBQU1DLFFBQVEsR0FBSSx1QkFBbEIsRUFDUDs7QUFDTyxJQUFNQyxXQUFXLEdBQUksU0FBckIsRUFDUDs7QUFFTyxJQUFNQyxZQUFZLEdBQUksMEJBQXRCO0FBRUEsSUFBSUMsTUFBTSxHQUFHLElBQUlDLEdBQUosRUFBYixFQUF3Qzs7QUFDeEMsSUFBSUMsSUFBSSxHQUFHLElBQUlELEdBQUosRUFBWCxFQUF1Qzs7QUFDdkMsSUFBSUUsS0FBSyxHQUFHLElBQUlGLEdBQUosRUFBWixFQUF3QyIsInNvdXJjZXMiOlsid2VicGFjazovL3dlYmFwcC8uL3RzX3NjcmlwdHMvdXJsLnRzPzg2MDIiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGNvbnN0IGJhY2tlbmR1cmw9XCJodHRwOi8vbG9jYWxob3N0OjEwMjJcIiA7XHJcbi8vZXhwb3J0IGNvbnN0IGJhY2tlbmR1cmw9XCJodHRwczovL2NyaXN0YWJhY2tlbmQuaGVyb2t1YXBwLmNvbVwiIDtcclxuLy9leHBvcnQgY29uc3QgYmFja2VuZHVybCAgPSBcImh0dHBzOi8vamV0ZXN0b3JlLmhlcm9rdWFwcC5jb21cIiA7XHJcbmV4cG9ydCBjb25zdCBsb2dpbnVybCAgPSBcImh0dHA6Ly9sb2NhbGhvc3Q6MTAyMVwiIDtcclxuLy9leHBvcnQgY29uc3QgbG9naW51cmwgID0gXCJodHRwczovL2pldGVjb21tZXJjZS5oZXJva3VhcHAuY29tXCJcclxuZXhwb3J0IGNvbnN0IHRoZXByb3RvY29sICA9ICdodHRwOi8vJyA7XHJcbi8vZXhwb3J0IGNvbnN0IGxvZ2ludXJsICA9ICBcImh0dHBzOi8vamVjb2RlIHRlc2hvcC5oZXJva3VhcHAuY29tXCIgO1xyXG5cclxuZXhwb3J0IGNvbnN0IHdlYnNvY2tldHVybCAgPSAnaHR0cDovL2xvY2FsaG9zdDoxMDIzL3dzJyA7XHJcblxyXG5leHBvcnQgbGV0IGJyYW5kcyA9IG5ldyBNYXA8c3RyaW5nLHN0cmluZz4oKTsgIC8vIGZvciBicmFuZHMgXHJcbmV4cG9ydCBsZXQgc2l6ZSA9IG5ldyBNYXA8c3RyaW5nLCBzdHJpbmc+KCk7ICAvLyBmb3Igc2l6ZVxyXG5leHBvcnQgbGV0IGNvbG9yID0gbmV3IE1hcDxzdHJpbmcsIHN0cmluZz4oKTsgIC8vIGZvciBjb2xvclxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcbiJdLCJuYW1lcyI6WyJiYWNrZW5kdXJsIiwibG9naW51cmwiLCJ0aGVwcm90b2NvbCIsIndlYnNvY2tldHVybCIsImJyYW5kcyIsIk1hcCIsInNpemUiLCJjb2xvciJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///18\n')},(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "register": () => (/* binding */ register)\n/* harmony export */ });\n/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(13);\n/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(14);\n/* harmony import */ var _tsbackendscript_ajaxfunctioncall__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(15);\n/* harmony import */ var _url__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(18);\n\n\n\n\nvar register = /*#__PURE__*/function () {\n  function register() {\n    (0,_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__["default"])(this, register);\n  }\n\n  (0,_babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__["default"])(register, [{\n    key: "register",\n    value: function register(data, successmg, errormsg) {\n      //submitform(`${loginurl}/register`,data,"",\'text\',\'post\'); //send form\n      (0,_tsbackendscript_ajaxfunctioncall__WEBPACK_IMPORTED_MODULE_2__.formsubmit)("".concat(_url__WEBPACK_IMPORTED_MODULE_3__.backendurl, "/register"), data, null, \'text\', \'post\', successmg, errormsg);\n    }\n  }]);\n\n  return register;\n}();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTkuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7OztBQUFBO0FBQ0E7QUFFTyxJQUFNRSxRQUFiO0VBQ0ksb0JBQWE7SUFBQTtFQUNaOztFQUZMO0lBQUE7SUFBQSxPQUdJLGtCQUFTQyxJQUFULEVBQXFCQyxTQUFyQixFQUFtQ0MsUUFBbkMsRUFBZ0Q7TUFDbkQ7TUFDSUwsNkVBQVUsV0FBSUMsNENBQUosZ0JBQTBCRSxJQUExQixFQUErQixJQUEvQixFQUFvQyxNQUFwQyxFQUEyQyxNQUEzQyxFQUFrREMsU0FBbEQsRUFBNERDLFFBQTVELENBQVY7SUFDQTtFQU5MOztFQUFBO0FBQUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly93ZWJhcHAvLi90c19zY3JpcHRzL3JlZ2lzdGVyLnRzPzhjZTciXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtzdWJtaXRmb3JtLGZvcm1zdWJtaXR9IGZyb20gXCIuL3RzYmFja2VuZHNjcmlwdC9hamF4ZnVuY3Rpb25jYWxsXCIgO1xyXG5pbXBvcnQge2JhY2tlbmR1cmwsbG9naW51cmx9IGZyb20gXCIuL3VybFwiIDtcclxuZGVjbGFyZSB2YXIgU3dhbDogYW55O1xyXG5leHBvcnQgY2xhc3MgcmVnaXN0ZXJ7XHJcbiAgICBjb25zdHJ1Y3Rvcigpe1xyXG4gICAgfVxyXG4gICAgcmVnaXN0ZXIoZGF0YTpPYmplY3Qsc3VjY2Vzc21nOmFueSxlcnJvcm1zZzphbnkpe1xyXG4gLy9zdWJtaXRmb3JtKGAke2xvZ2ludXJsfS9yZWdpc3RlcmAsZGF0YSxcIlwiLCd0ZXh0JywncG9zdCcpOyAvL3NlbmQgZm9ybVxyXG4gICAgIGZvcm1zdWJtaXQoYCR7YmFja2VuZHVybH0vcmVnaXN0ZXJgLGRhdGEsbnVsbCwndGV4dCcsJ3Bvc3QnLHN1Y2Nlc3NtZyxlcnJvcm1zZyk7XHJcbiAgICB9XHJcbn0iXSwibmFtZXMiOlsiZm9ybXN1Ym1pdCIsImJhY2tlbmR1cmwiLCJyZWdpc3RlciIsImRhdGEiLCJzdWNjZXNzbWciLCJlcnJvcm1zZyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///19\n')},(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"User\": () => (/* binding */ User)\n/* harmony export */ });\n/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(13);\n/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(14);\n/* harmony import */ var _tsbackendscript_ajaxfunctioncall__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(15);\n/* harmony import */ var _url__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(18);\n\n\n\n\nvar User = /*#__PURE__*/function () {\n  function User() {\n    (0,_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, User);\n  }\n\n  (0,_babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(User, [{\n    key: \"save\",\n    value: function save(userform, token, methodtype, successmsg, errormsg) {\n      //const token  = localStorage.getItem('token');\n      if (methodtype === 'put') {\n        console.log('form put ', userform); // return ;\n\n        (0,_tsbackendscript_ajaxfunctioncall__WEBPACK_IMPORTED_MODULE_2__.formsubmit)(\"\".concat(_url__WEBPACK_IMPORTED_MODULE_3__.backendurl, \"/update\"), userform, token, 'text', methodtype, successmsg, errormsg); //send form\n      } //   if(methodtype === 'put' && token===null){\n      //   console.log('form put without token ',userform);\n      //   return ;\n      // formsubmit(`${backendurl}/user`,userform,null,'json',methodtype,successmsg,errormsg); //send form\n      //   }\n\n    }\n  }]);\n\n  return User;\n}();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMjAuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7OztBQUFBO0FBQ0E7QUFDTyxJQUFNRSxJQUFiO0VBQUE7SUFBQTtFQUFBOztFQUFBO0lBQUE7SUFBQSxPQUNJLGNBQUtDLFFBQUwsRUFBcUJDLEtBQXJCLEVBQXVDQyxVQUF2QyxFQUF5REMsVUFBekQsRUFBd0VDLFFBQXhFLEVBQXFGO01BQ2xGO01BQ0EsSUFBR0YsVUFBVSxLQUFLLEtBQWxCLEVBQXdCO1FBQ3ZCRyxPQUFPLENBQUNDLEdBQVIsQ0FBWSxXQUFaLEVBQXdCTixRQUF4QixFQUR1QixDQUV4Qjs7UUFDQ0gsNkVBQVUsV0FBSUMsNENBQUosY0FBd0JFLFFBQXhCLEVBQWlDQyxLQUFqQyxFQUF1QyxNQUF2QyxFQUE4Q0MsVUFBOUMsRUFBeURDLFVBQXpELEVBQW9FQyxRQUFwRSxDQUFWLENBSHVCLENBR2lFO01BQ3hGLENBTmlGLENBT3JGO01BQ0E7TUFDQTtNQUNBO01BQ0E7O0lBQ0M7RUFiTDs7RUFBQTtBQUFBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vd2ViYXBwLy4vdHNfc2NyaXB0cy91c2VyLnRzPzc4Y2IiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtmb3Jtc3VibWl0fSBmcm9tIFwiLi90c2JhY2tlbmRzY3JpcHQvYWpheGZ1bmN0aW9uY2FsbFwiIDtcclxuaW1wb3J0IHtiYWNrZW5kdXJsLGxvZ2ludXJsfSBmcm9tIFwiLi91cmxcIiA7XHJcbmV4cG9ydCBjbGFzcyBVc2Vye1xyXG4gICAgc2F2ZSh1c2VyZm9ybTpPYmplY3QsdG9rZW46c3RyaW5nfG51bGwsbWV0aG9kdHlwZTpzdHJpbmcsc3VjY2Vzc21zZzphbnksZXJyb3Jtc2c6YW55KXtcclxuICAgICAgIC8vY29uc3QgdG9rZW4gID0gbG9jYWxTdG9yYWdlLmdldEl0ZW0oJ3Rva2VuJyk7XHJcbiAgICAgICBpZihtZXRob2R0eXBlID09PSAncHV0Jyl7XHJcbiAgICAgICAgY29uc29sZS5sb2coJ2Zvcm0gcHV0ICcsdXNlcmZvcm0pO1xyXG4gICAgICAgLy8gcmV0dXJuIDtcclxuICAgICAgICBmb3Jtc3VibWl0KGAke2JhY2tlbmR1cmx9L3VwZGF0ZWAsdXNlcmZvcm0sdG9rZW4sJ3RleHQnLG1ldGhvZHR5cGUsc3VjY2Vzc21zZyxlcnJvcm1zZyk7Ly9zZW5kIGZvcm1cclxuICAgICAgIH1cclxuICAgIC8vICAgaWYobWV0aG9kdHlwZSA9PT0gJ3B1dCcgJiYgdG9rZW49PT1udWxsKXtcclxuICAgIC8vICAgY29uc29sZS5sb2coJ2Zvcm0gcHV0IHdpdGhvdXQgdG9rZW4gJyx1c2VyZm9ybSk7XHJcbiAgICAvLyAgIHJldHVybiA7XHJcbiAgICAvLyBmb3Jtc3VibWl0KGAke2JhY2tlbmR1cmx9L3VzZXJgLHVzZXJmb3JtLG51bGwsJ2pzb24nLG1ldGhvZHR5cGUsc3VjY2Vzc21zZyxlcnJvcm1zZyk7IC8vc2VuZCBmb3JtXHJcbiAgICAvLyAgIH1cclxuICAgIH1cclxufVxyXG5leHBvcnQge31cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG4iXSwibmFtZXMiOlsiZm9ybXN1Ym1pdCIsImJhY2tlbmR1cmwiLCJVc2VyIiwidXNlcmZvcm0iLCJ0b2tlbiIsIm1ldGhvZHR5cGUiLCJzdWNjZXNzbXNnIiwiZXJyb3Jtc2ciLCJjb25zb2xlIiwibG9nIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///20\n")},(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"product\": () => (/* binding */ product)\n/* harmony export */ });\n/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(13);\n/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(14);\n/* harmony import */ var _tsbackendscript_ajaxfunctioncall__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(15);\n/* harmony import */ var _url__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(18);\n\n\n\n\nvar product = /*#__PURE__*/function () {\n  function product() {\n    (0,_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, product);\n  }\n\n  (0,_babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(product, [{\n    key: \"saveproduct\",\n    value: function saveproduct(_product) {\n      //  const productform:any  =  document.getElementById(\"add-product-form\") ;\n      if (_product instanceof FormData) {\n        // const form  = new  FormData(product) ;\n        console.log('in formdata if ', 'productname ', 'prddescription', _product.get('description'));\n\n        var _token = localStorage.getItem('token');\n\n        (0,_tsbackendscript_ajaxfunctioncall__WEBPACK_IMPORTED_MODULE_2__.submitform)(\"\".concat(_url__WEBPACK_IMPORTED_MODULE_3__.backendurl, \"/product/create\"), _product, _token, 'text', 'post'); //send form\n\n        return;\n      }\n\n      var form = new FormData(_product);\n      console.log('productname ', form.get('productname')); // console.log(form) ;     \n\n      var token = localStorage.getItem('token');\n      (0,_tsbackendscript_ajaxfunctioncall__WEBPACK_IMPORTED_MODULE_2__.submitform)(\"\".concat(_url__WEBPACK_IMPORTED_MODULE_3__.loginurl, \"/product\"), form, token, 'json', 'post'); //send form\n    }\n  }]);\n\n  return product;\n}();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMjEuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7OztBQUFBO0FBQ0E7QUFFTyxJQUFNRyxPQUFiO0VBQUE7SUFBQTtFQUFBOztFQUFBO0lBQUE7SUFBQSxPQUNLLHFCQUFZQSxRQUFaLEVBQStDO01BQy9DO01BQ0UsSUFBR0EsUUFBTyxZQUFZQyxRQUF0QixFQUErQjtRQUM5QjtRQUNBQyxPQUFPLENBQUNDLEdBQVIsQ0FBWSxpQkFBWixFQUE4QixjQUE5QixFQUE2QyxnQkFBN0MsRUFBOERILFFBQU8sQ0FBQ0ksR0FBUixDQUFZLGFBQVosQ0FBOUQ7O1FBQ0EsSUFBTUMsTUFBSyxHQUFJQyxZQUFZLENBQUNDLE9BQWIsQ0FBcUIsT0FBckIsQ0FBZjs7UUFDQVYsNkVBQVUsV0FBSUMsNENBQUosc0JBQWdDRSxRQUFoQyxFQUF3Q0ssTUFBeEMsRUFBOEMsTUFBOUMsRUFBcUQsTUFBckQsQ0FBVixDQUo4QixDQUl5Qzs7UUFDdkU7TUFDSTs7TUFDTCxJQUFNRyxJQUFJLEdBQUksSUFBS1AsUUFBTCxDQUFjRCxRQUFkLENBQWQ7TUFDQUUsT0FBTyxDQUFDQyxHQUFSLENBQVksY0FBWixFQUEyQkssSUFBSSxDQUFDSixHQUFMLENBQVMsYUFBVCxDQUEzQixFQVY2QyxDQVc5Qzs7TUFDQyxJQUFNQyxLQUFLLEdBQUlDLFlBQVksQ0FBQ0MsT0FBYixDQUFxQixPQUFyQixDQUFmO01BQ0FWLDZFQUFVLFdBQUlFLDBDQUFKLGVBQXVCUyxJQUF2QixFQUE0QkgsS0FBNUIsRUFBa0MsTUFBbEMsRUFBeUMsTUFBekMsQ0FBVixDQWI2QyxDQWFjO0lBQzVEO0VBZk47O0VBQUE7QUFBQSIsInNvdXJjZXMiOlsid2VicGFjazovL3dlYmFwcC8uL3RzX3NjcmlwdHMvcHJvZHVjdC50cz9kNzcwIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7c3VibWl0Zm9ybX0gZnJvbSBcIi4vdHNiYWNrZW5kc2NyaXB0L2FqYXhmdW5jdGlvbmNhbGxcIiA7XHJcbmltcG9ydCB7YmFja2VuZHVybCxsb2dpbnVybH0gZnJvbSBcIi4vdXJsXCIgO1xyXG5cclxuZXhwb3J0IGNsYXNzIHByb2R1Y3R7ICBcclxuICAgICBzYXZlcHJvZHVjdChwcm9kdWN0OihIVE1MRm9ybUVsZW1lbnR8Rm9ybURhdGEpKXtcclxuICAgICAvLyAgY29uc3QgcHJvZHVjdGZvcm06YW55ICA9ICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcImFkZC1wcm9kdWN0LWZvcm1cIikgO1xyXG4gICAgICAgaWYocHJvZHVjdCBpbnN0YW5jZW9mIEZvcm1EYXRhKXtcclxuICAgICAgICAvLyBjb25zdCBmb3JtICA9IG5ldyAgRm9ybURhdGEocHJvZHVjdCkgO1xyXG4gICAgICAgIGNvbnNvbGUubG9nKCdpbiBmb3JtZGF0YSBpZiAnLCdwcm9kdWN0bmFtZSAnLCdwcmRkZXNjcmlwdGlvbicscHJvZHVjdC5nZXQoJ2Rlc2NyaXB0aW9uJykpICAgXHJcbiAgICAgICAgY29uc3QgdG9rZW4gID0gbG9jYWxTdG9yYWdlLmdldEl0ZW0oJ3Rva2VuJyk7XHJcbiAgICAgICAgc3VibWl0Zm9ybShgJHtiYWNrZW5kdXJsfS9wcm9kdWN0L2NyZWF0ZWAscHJvZHVjdCx0b2tlbiwndGV4dCcsJ3Bvc3QnKTsvL3NlbmQgZm9ybVxyXG4gICAgICAgIHJldHVybiA7XHJcbiAgICAgICAgICAgfVxyXG4gICAgICAgY29uc3QgZm9ybSAgPSBuZXcgIEZvcm1EYXRhKHByb2R1Y3QpIDtcclxuICAgICAgIGNvbnNvbGUubG9nKCdwcm9kdWN0bmFtZSAnLGZvcm0uZ2V0KCdwcm9kdWN0bmFtZScpKVxyXG4gICAgICAvLyBjb25zb2xlLmxvZyhmb3JtKSA7ICAgICBcclxuICAgICAgIGNvbnN0IHRva2VuICA9IGxvY2FsU3RvcmFnZS5nZXRJdGVtKCd0b2tlbicpO1xyXG4gICAgICAgc3VibWl0Zm9ybShgJHtsb2dpbnVybH0vcHJvZHVjdGAsZm9ybSx0b2tlbiwnanNvbicsJ3Bvc3QnKTsvL3NlbmQgZm9ybVxyXG4gICAgIH0gXHJcbn1cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcbiJdLCJuYW1lcyI6WyJzdWJtaXRmb3JtIiwiYmFja2VuZHVybCIsImxvZ2ludXJsIiwicHJvZHVjdCIsIkZvcm1EYXRhIiwiY29uc29sZSIsImxvZyIsImdldCIsInRva2VuIiwibG9jYWxTdG9yYWdlIiwiZ2V0SXRlbSIsImZvcm0iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///21\n")},(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "coupon": () => (/* binding */ coupon)\n/* harmony export */ });\n/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(13);\n/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(14);\n/* harmony import */ var _tsbackendscript_ajaxfunctioncall__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(15);\n/* harmony import */ var _url__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(18);\n\n\n\n\nvar coupon = /*#__PURE__*/function () {\n  function coupon() {\n    (0,_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__["default"])(this, coupon);\n  }\n\n  (0,_babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__["default"])(coupon, [{\n    key: "savecoupon",\n    value: function savecoupon(_coupon) {\n      console.log(\' coupon \', _coupon);\n      var token = localStorage.getItem(\'token\');\n      (0,_tsbackendscript_ajaxfunctioncall__WEBPACK_IMPORTED_MODULE_2__.submitform)("".concat(_url__WEBPACK_IMPORTED_MODULE_3__.backendurl, "/coupon/coupon"), _coupon, token, \'text\', \'post\'); //send form\n    }\n  }]);\n\n  return coupon;\n}();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMjIuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7OztBQUFBO0FBQ0E7QUFDTyxJQUFNRSxNQUFiO0VBQUE7SUFBQTtFQUFBOztFQUFBO0lBQUE7SUFBQSxPQUNJLG9CQUFXQSxPQUFYLEVBQTJCO01BQ3pCQyxPQUFPLENBQUNDLEdBQVIsQ0FBWSxVQUFaLEVBQXVCRixPQUF2QjtNQUNJLElBQU1HLEtBQUssR0FBSUMsWUFBWSxDQUFDQyxPQUFiLENBQXFCLE9BQXJCLENBQWY7TUFDQVAsNkVBQVUsV0FBSUMsNENBQUoscUJBQStCQyxPQUEvQixFQUFzQ0csS0FBdEMsRUFBNEMsTUFBNUMsRUFBbUQsTUFBbkQsQ0FBVixDQUhxQixDQUdnRDtJQUN0RTtFQUxUOztFQUFBO0FBQUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly93ZWJhcHAvLi90c19zY3JpcHRzL2NvdXBvbi50cz9lM2Y1Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7c3VibWl0Zm9ybX0gZnJvbSBcIi4vdHNiYWNrZW5kc2NyaXB0L2FqYXhmdW5jdGlvbmNhbGxcIiA7XHJcbmltcG9ydCB7YmFja2VuZHVybCxsb2dpbnVybH0gZnJvbSBcIi4vdXJsXCIgO1xyXG5leHBvcnQgY2xhc3MgY291cG9ue1xyXG4gICAgc2F2ZWNvdXBvbihjb3Vwb246KE9iamVjdCkpeyBcclxuICAgICAgY29uc29sZS5sb2coJyBjb3Vwb24gJyxjb3Vwb24pIDsgICAgICAgICBcclxuICAgICAgICAgIGNvbnN0IHRva2VuICA9IGxvY2FsU3RvcmFnZS5nZXRJdGVtKCd0b2tlbicpO1xyXG4gICAgICAgICAgc3VibWl0Zm9ybShgJHtiYWNrZW5kdXJsfS9jb3Vwb24vY291cG9uYCxjb3Vwb24sdG9rZW4sJ3RleHQnLCdwb3N0Jyk7Ly9zZW5kIGZvcm1cclxuICAgICAgICB9IFxyXG59XHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuIl0sIm5hbWVzIjpbInN1Ym1pdGZvcm0iLCJiYWNrZW5kdXJsIiwiY291cG9uIiwiY29uc29sZSIsImxvZyIsInRva2VuIiwibG9jYWxTdG9yYWdlIiwiZ2V0SXRlbSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///22\n')},(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createtables\": () => (/* binding */ createtables),\n/* harmony export */   \"createtables2\": () => (/* binding */ createtables2),\n/* harmony export */   \"templatefunction\": () => (/* binding */ templatefunction),\n/* harmony export */   \"templatefunctionget\": () => (/* binding */ templatefunctionget)\n/* harmony export */ });\nvar templatefunction = function templatefunction(url, token, crudinput, methodtype) {\n  // console.log('crudinput ',crudinput,' token ',token) ;\n  return $.ajax({\n    type: methodtype,\n    url: url,\n    headers: {\n      Authorization: \"Bearer \".concat(token) // 'Content-Type': 'application/json',\n\n    },\n    // dataType:'json',\n    // data:JSON.stringify(crudinput),\n    error: function error(err) {\n      console.log('err ', err); //  errorfunc() ;\n    }\n  });\n};\nvar templatefunctionget = function templatefunctionget(url, token, crudinput, methodtype) {\n  console.log('crudinput ', crudinput);\n  return $.ajax({\n    type: methodtype,\n    url: url,\n    headers: {\n      Authorization: \"Bearer \".concat(token)\n    },\n    data: crudinput,\n    // dataType:'json',\n    // data:crudinput,\n    error: function error(err) {\n      console.log('err ', err); //  errorfunc() ;\n    }\n  });\n};\nvar createtables = function createtables(url, token, fieldsdata) {\n  $(\"#basicScenario2\").jsGrid({\n    width: \"100%\",\n    height: \"250px\",\n    filtering: true,\n    // inserting:true,\n    editing: true,\n    sorting: true,\n    paging: true,\n    autoload: true,\n    noDataContent: \"No Data is found\",\n    pageSize: 10,\n    //loadIndication: true,\n    loadMessage: \"Please, wait...\",\n    pageButtonCount: 5,\n    confirmDeleting: true,\n    deleteConfirm: \"Do you really want to delete data ?\",\n    controller: {\n      loadData: function loadData(filter) {\n        console.log('filter ', filter);\n        return templatefunction(url, token, filter, 'get');\n      },\n      insertItem: function insertItem(item) {\n        // refresh grid\n        console.log('item ', item);\n        setTimeout(function () {\n          console.log('reloading items ');\n          $(\"#basicScenario2\").jsGrid(\"loadData\"); //  reloads the  grid\n        }, 7000);\n        return templatefunctionget(url, localStorage.getItem('token'), item, 'post');\n      },\n      updateItem: function updateItem(item) {\n        // refresh grid\n        setTimeout(function () {\n          console.log('reloading items ');\n          $(\"#basicScenario2\").jsGrid(\"loadData\"); //  reloads the  grid\n        }, 7000);\n        return templatefunctionget(url, localStorage.getItem('token'), item, 'put');\n      },\n      deleteItem: function deleteItem(item) {\n        setTimeout(function () {\n          console.log('reloading items ');\n          $(\"#basicScenario2\").jsGrid(\"loadData\"); //  reloads the  grid\n        }, 7000);\n        return templatefunctionget(url, localStorage.getItem('token'), item, 'delete');\n      }\n    },\n    fields: fieldsdata\n  });\n}; // createtables2\n\nvar createtables2 = function createtables2(url, token, fieldsdata, insertcond) {\n  $(\"#basicScenario2\").jsGrid({\n    width: \"100%\",\n    height: \"250px\",\n    filtering: true,\n    inserting: insertcond,\n    editing: true,\n    sorting: true,\n    paging: true,\n    autoload: true,\n    noDataContent: \"No Data is found\",\n    pageSize: 10,\n    //loadIndication: true,\n    loadMessage: \"Please, wait...\",\n    pageButtonCount: 5,\n    confirmDeleting: true,\n    deleteConfirm: \"Do you really want to delete data ?\",\n    controller: {\n      loadData: function loadData(filter) {\n        console.log('filter in get ', filter);\n        return templatefunction(url, token, filter, 'get');\n      },\n      insertItem: function insertItem(item) {\n        // refresh grid\n        console.log('item ', item);\n        setTimeout(function () {\n          console.log('reloading items ');\n          $(\"#basicScenario2\").jsGrid(\"loadData\"); //  reloads the  grid\n        }, 2000);\n        return templatefunctionget(url, localStorage.getItem('token'), item, 'post');\n      },\n      updateItem: function updateItem(item) {\n        // refresh grid\n        setTimeout(function () {\n          console.log('reloading items ');\n          $(\"#basicScenario2\").jsGrid(\"loadData\"); //  reloads the  grid\n        }, 2000);\n        return templatefunctionget(url, localStorage.getItem('token'), item, 'put');\n      },\n      deleteItem: function deleteItem(item) {\n        setTimeout(function () {\n          console.log('reloading items ');\n          $(\"#basicScenario2\").jsGrid(\"loadData\"); //  reloads the  grid\n        }, 2000);\n        return templatefunctionget(url, localStorage.getItem('token'), item, 'delete');\n      }\n    },\n    fields: fieldsdata\n  });\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///23\n")}],__webpack_module_cache__={};function __webpack_require__(Q){var c=__webpack_module_cache__[Q];if(void 0!==c)return c.exports;var I=__webpack_module_cache__[Q]={exports:{}};return __webpack_modules__[Q](I,I.exports,__webpack_require__),I.exports}__webpack_require__.n=Q=>{var c=Q&&Q.__esModule?()=>Q.default:()=>Q;return __webpack_require__.d(c,{a:c}),c},__webpack_require__.d=(Q,c)=>{for(var I in c)__webpack_require__.o(c,I)&&!__webpack_require__.o(Q,I)&&Object.defineProperty(Q,I,{enumerable:!0,get:c[I]})},__webpack_require__.o=(Q,c)=>Object.prototype.hasOwnProperty.call(Q,c),__webpack_require__.r=Q=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(Q,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(Q,"__esModule",{value:!0})};var __webpack_exports__=__webpack_require__(0)})();