(()=>{var __webpack_modules__=[,(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__)=>{"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "default": () => (/* binding */ _asyncToGenerator)\n/* harmony export */ });\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nfunction _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMS5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQTtBQUNBOztBQUVlO0FBQ2Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0EsS0FBSztBQUNMO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly93ZWJhcHAvLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vYXN5bmNUb0dlbmVyYXRvci5qcz9jYzI4Il0sInNvdXJjZXNDb250ZW50IjpbImZ1bmN0aW9uIGFzeW5jR2VuZXJhdG9yU3RlcChnZW4sIHJlc29sdmUsIHJlamVjdCwgX25leHQsIF90aHJvdywga2V5LCBhcmcpIHtcbiAgdHJ5IHtcbiAgICB2YXIgaW5mbyA9IGdlbltrZXldKGFyZyk7XG4gICAgdmFyIHZhbHVlID0gaW5mby52YWx1ZTtcbiAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICByZWplY3QoZXJyb3IpO1xuICAgIHJldHVybjtcbiAgfVxuXG4gIGlmIChpbmZvLmRvbmUpIHtcbiAgICByZXNvbHZlKHZhbHVlKTtcbiAgfSBlbHNlIHtcbiAgICBQcm9taXNlLnJlc29sdmUodmFsdWUpLnRoZW4oX25leHQsIF90aHJvdyk7XG4gIH1cbn1cblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gX2FzeW5jVG9HZW5lcmF0b3IoZm4pIHtcbiAgcmV0dXJuIGZ1bmN0aW9uICgpIHtcbiAgICB2YXIgc2VsZiA9IHRoaXMsXG4gICAgICAgIGFyZ3MgPSBhcmd1bWVudHM7XG4gICAgcmV0dXJuIG5ldyBQcm9taXNlKGZ1bmN0aW9uIChyZXNvbHZlLCByZWplY3QpIHtcbiAgICAgIHZhciBnZW4gPSBmbi5hcHBseShzZWxmLCBhcmdzKTtcblxuICAgICAgZnVuY3Rpb24gX25leHQodmFsdWUpIHtcbiAgICAgICAgYXN5bmNHZW5lcmF0b3JTdGVwKGdlbiwgcmVzb2x2ZSwgcmVqZWN0LCBfbmV4dCwgX3Rocm93LCBcIm5leHRcIiwgdmFsdWUpO1xuICAgICAgfVxuXG4gICAgICBmdW5jdGlvbiBfdGhyb3coZXJyKSB7XG4gICAgICAgIGFzeW5jR2VuZXJhdG9yU3RlcChnZW4sIHJlc29sdmUsIHJlamVjdCwgX25leHQsIF90aHJvdywgXCJ0aHJvd1wiLCBlcnIpO1xuICAgICAgfVxuXG4gICAgICBfbmV4dCh1bmRlZmluZWQpO1xuICAgIH0pO1xuICB9O1xufSJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///1\n')},(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__)=>{"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "default": () => (/* binding */ _defineProperty)\n/* harmony export */ });\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMi5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQWU7QUFDZjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0wsSUFBSTtBQUNKO0FBQ0E7O0FBRUE7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL3dlYmFwcC8uL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9kZWZpbmVQcm9wZXJ0eS5qcz9kYmVjIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIF9kZWZpbmVQcm9wZXJ0eShvYmosIGtleSwgdmFsdWUpIHtcbiAgaWYgKGtleSBpbiBvYmopIHtcbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkob2JqLCBrZXksIHtcbiAgICAgIHZhbHVlOiB2YWx1ZSxcbiAgICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgICBjb25maWd1cmFibGU6IHRydWUsXG4gICAgICB3cml0YWJsZTogdHJ1ZVxuICAgIH0pO1xuICB9IGVsc2Uge1xuICAgIG9ialtrZXldID0gdmFsdWU7XG4gIH1cblxuICByZXR1cm4gb2JqO1xufSJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///2\n')},(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__)=>{"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "default": () => (/* binding */ _slicedToArray)\n/* harmony export */ });\n/* harmony import */ var _arrayWithHoles_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(4);\n/* harmony import */ var _iterableToArrayLimit_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(5);\n/* harmony import */ var _unsupportedIterableToArray_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(6);\n/* harmony import */ var _nonIterableRest_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(8);\n\n\n\n\nfunction _slicedToArray(arr, i) {\n  return (0,_arrayWithHoles_js__WEBPACK_IMPORTED_MODULE_0__["default"])(arr) || (0,_iterableToArrayLimit_js__WEBPACK_IMPORTED_MODULE_1__["default"])(arr, i) || (0,_unsupportedIterableToArray_js__WEBPACK_IMPORTED_MODULE_2__["default"])(arr, i) || (0,_nonIterableRest_js__WEBPACK_IMPORTED_MODULE_3__["default"])();\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUFpRDtBQUNZO0FBQ1k7QUFDdEI7QUFDcEM7QUFDZixTQUFTLDhEQUFjLFNBQVMsb0VBQW9CLFlBQVksMEVBQTBCLFlBQVksK0RBQWU7QUFDckgiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly93ZWJhcHAvLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vc2xpY2VkVG9BcnJheS5qcz84ZjlmIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBhcnJheVdpdGhIb2xlcyBmcm9tIFwiLi9hcnJheVdpdGhIb2xlcy5qc1wiO1xuaW1wb3J0IGl0ZXJhYmxlVG9BcnJheUxpbWl0IGZyb20gXCIuL2l0ZXJhYmxlVG9BcnJheUxpbWl0LmpzXCI7XG5pbXBvcnQgdW5zdXBwb3J0ZWRJdGVyYWJsZVRvQXJyYXkgZnJvbSBcIi4vdW5zdXBwb3J0ZWRJdGVyYWJsZVRvQXJyYXkuanNcIjtcbmltcG9ydCBub25JdGVyYWJsZVJlc3QgZnJvbSBcIi4vbm9uSXRlcmFibGVSZXN0LmpzXCI7XG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBfc2xpY2VkVG9BcnJheShhcnIsIGkpIHtcbiAgcmV0dXJuIGFycmF5V2l0aEhvbGVzKGFycikgfHwgaXRlcmFibGVUb0FycmF5TGltaXQoYXJyLCBpKSB8fCB1bnN1cHBvcnRlZEl0ZXJhYmxlVG9BcnJheShhcnIsIGkpIHx8IG5vbkl0ZXJhYmxlUmVzdCgpO1xufSJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///3\n')},(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__)=>{"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "default": () => (/* binding */ _arrayWithHoles)\n/* harmony export */ });\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNC5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQWU7QUFDZjtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vd2ViYXBwLy4vbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2FycmF5V2l0aEhvbGVzLmpzP2ZjZDgiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gX2FycmF5V2l0aEhvbGVzKGFycikge1xuICBpZiAoQXJyYXkuaXNBcnJheShhcnIpKSByZXR1cm4gYXJyO1xufSJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///4\n')},(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__)=>{"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "default": () => (/* binding */ _iterableToArrayLimit)\n/* harmony export */ });\nfunction _iterableToArrayLimit(arr, i) {\n  var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"];\n\n  if (_i == null) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n\n  var _s, _e;\n\n  try {\n    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i["return"] != null) _i["return"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNS5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQWU7QUFDZjs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBLDRCQUE0QiwrQkFBK0I7QUFDM0Q7O0FBRUE7QUFDQTtBQUNBLElBQUk7QUFDSjtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQTtBQUNBOztBQUVBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly93ZWJhcHAvLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vaXRlcmFibGVUb0FycmF5TGltaXQuanM/ZTJmZSJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBfaXRlcmFibGVUb0FycmF5TGltaXQoYXJyLCBpKSB7XG4gIHZhciBfaSA9IGFyciA9PSBudWxsID8gbnVsbCA6IHR5cGVvZiBTeW1ib2wgIT09IFwidW5kZWZpbmVkXCIgJiYgYXJyW1N5bWJvbC5pdGVyYXRvcl0gfHwgYXJyW1wiQEBpdGVyYXRvclwiXTtcblxuICBpZiAoX2kgPT0gbnVsbCkgcmV0dXJuO1xuICB2YXIgX2FyciA9IFtdO1xuICB2YXIgX24gPSB0cnVlO1xuICB2YXIgX2QgPSBmYWxzZTtcblxuICB2YXIgX3MsIF9lO1xuXG4gIHRyeSB7XG4gICAgZm9yIChfaSA9IF9pLmNhbGwoYXJyKTsgIShfbiA9IChfcyA9IF9pLm5leHQoKSkuZG9uZSk7IF9uID0gdHJ1ZSkge1xuICAgICAgX2Fyci5wdXNoKF9zLnZhbHVlKTtcblxuICAgICAgaWYgKGkgJiYgX2Fyci5sZW5ndGggPT09IGkpIGJyZWFrO1xuICAgIH1cbiAgfSBjYXRjaCAoZXJyKSB7XG4gICAgX2QgPSB0cnVlO1xuICAgIF9lID0gZXJyO1xuICB9IGZpbmFsbHkge1xuICAgIHRyeSB7XG4gICAgICBpZiAoIV9uICYmIF9pW1wicmV0dXJuXCJdICE9IG51bGwpIF9pW1wicmV0dXJuXCJdKCk7XG4gICAgfSBmaW5hbGx5IHtcbiAgICAgIGlmIChfZCkgdGhyb3cgX2U7XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIF9hcnI7XG59Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///5\n')},(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__)=>{"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "default": () => (/* binding */ _unsupportedIterableToArray)\n/* harmony export */ });\n/* harmony import */ var _arrayLikeToArray_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(7);\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === "string") return (0,_arrayLikeToArray_js__WEBPACK_IMPORTED_MODULE_0__["default"])(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === "Object" && o.constructor) n = o.constructor.name;\n  if (n === "Map" || n === "Set") return Array.from(o);\n  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return (0,_arrayLikeToArray_js__WEBPACK_IMPORTED_MODULE_0__["default"])(o, minLen);\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNi5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFxRDtBQUN0QztBQUNmO0FBQ0Esb0NBQW9DLGdFQUFnQjtBQUNwRDtBQUNBO0FBQ0E7QUFDQSxzRkFBc0YsZ0VBQWdCO0FBQ3RHIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vd2ViYXBwLy4vbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL3Vuc3VwcG9ydGVkSXRlcmFibGVUb0FycmF5LmpzPzAwOWMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGFycmF5TGlrZVRvQXJyYXkgZnJvbSBcIi4vYXJyYXlMaWtlVG9BcnJheS5qc1wiO1xuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gX3Vuc3VwcG9ydGVkSXRlcmFibGVUb0FycmF5KG8sIG1pbkxlbikge1xuICBpZiAoIW8pIHJldHVybjtcbiAgaWYgKHR5cGVvZiBvID09PSBcInN0cmluZ1wiKSByZXR1cm4gYXJyYXlMaWtlVG9BcnJheShvLCBtaW5MZW4pO1xuICB2YXIgbiA9IE9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbChvKS5zbGljZSg4LCAtMSk7XG4gIGlmIChuID09PSBcIk9iamVjdFwiICYmIG8uY29uc3RydWN0b3IpIG4gPSBvLmNvbnN0cnVjdG9yLm5hbWU7XG4gIGlmIChuID09PSBcIk1hcFwiIHx8IG4gPT09IFwiU2V0XCIpIHJldHVybiBBcnJheS5mcm9tKG8pO1xuICBpZiAobiA9PT0gXCJBcmd1bWVudHNcIiB8fCAvXig/OlVpfEkpbnQoPzo4fDE2fDMyKSg/OkNsYW1wZWQpP0FycmF5JC8udGVzdChuKSkgcmV0dXJuIGFycmF5TGlrZVRvQXJyYXkobywgbWluTGVuKTtcbn0iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///6\n')},(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__)=>{"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "default": () => (/* binding */ _arrayLikeToArray)\n/* harmony export */ });\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNy5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQWU7QUFDZjs7QUFFQSx5Q0FBeUMsU0FBUztBQUNsRDtBQUNBOztBQUVBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly93ZWJhcHAvLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vYXJyYXlMaWtlVG9BcnJheS5qcz8yOWE3Il0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIF9hcnJheUxpa2VUb0FycmF5KGFyciwgbGVuKSB7XG4gIGlmIChsZW4gPT0gbnVsbCB8fCBsZW4gPiBhcnIubGVuZ3RoKSBsZW4gPSBhcnIubGVuZ3RoO1xuXG4gIGZvciAodmFyIGkgPSAwLCBhcnIyID0gbmV3IEFycmF5KGxlbik7IGkgPCBsZW47IGkrKykge1xuICAgIGFycjJbaV0gPSBhcnJbaV07XG4gIH1cblxuICByZXR1cm4gYXJyMjtcbn0iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///7\n')},(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__)=>{"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "default": () => (/* binding */ _nonIterableRest)\n/* harmony export */ });\nfunction _nonIterableRest() {\n  throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiOC5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQWU7QUFDZjtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vd2ViYXBwLy4vbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL25vbkl0ZXJhYmxlUmVzdC5qcz9jMTQ2Il0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIF9ub25JdGVyYWJsZVJlc3QoKSB7XG4gIHRocm93IG5ldyBUeXBlRXJyb3IoXCJJbnZhbGlkIGF0dGVtcHQgdG8gZGVzdHJ1Y3R1cmUgbm9uLWl0ZXJhYmxlIGluc3RhbmNlLlxcbkluIG9yZGVyIHRvIGJlIGl0ZXJhYmxlLCBub24tYXJyYXkgb2JqZWN0cyBtdXN0IGhhdmUgYSBbU3ltYm9sLml0ZXJhdG9yXSgpIG1ldGhvZC5cIik7XG59Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///8\n')},(module,__unused_webpack_exports,__webpack_require__)=>{eval('// TODO(Babel 8): Remove this file.\n\nvar runtime = __webpack_require__(10)();\nmodule.exports = runtime;\n\n// Copied from https://github.com/facebook/regenerator/blob/main/packages/runtime/runtime.js#L736=\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  if (typeof globalThis === "object") {\n    globalThis.regeneratorRuntime = runtime;\n  } else {\n    Function("r", "regeneratorRuntime = r")(runtime);\n  }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiOS5qcyIsIm1hcHBpbmdzIjoiQUFBQTs7QUFFQSxjQUFjLG1CQUFPLENBQUMsRUFBK0I7QUFDckQ7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsRUFBRTtBQUNGO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vd2ViYXBwLy4vbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL3JlZ2VuZXJhdG9yL2luZGV4LmpzP2M5YTciXSwic291cmNlc0NvbnRlbnQiOlsiLy8gVE9ETyhCYWJlbCA4KTogUmVtb3ZlIHRoaXMgZmlsZS5cblxudmFyIHJ1bnRpbWUgPSByZXF1aXJlKFwiLi4vaGVscGVycy9yZWdlbmVyYXRvclJ1bnRpbWVcIikoKTtcbm1vZHVsZS5leHBvcnRzID0gcnVudGltZTtcblxuLy8gQ29waWVkIGZyb20gaHR0cHM6Ly9naXRodWIuY29tL2ZhY2Vib29rL3JlZ2VuZXJhdG9yL2Jsb2IvbWFpbi9wYWNrYWdlcy9ydW50aW1lL3J1bnRpbWUuanMjTDczNj1cbnRyeSB7XG4gIHJlZ2VuZXJhdG9yUnVudGltZSA9IHJ1bnRpbWU7XG59IGNhdGNoIChhY2NpZGVudGFsU3RyaWN0TW9kZSkge1xuICBpZiAodHlwZW9mIGdsb2JhbFRoaXMgPT09IFwib2JqZWN0XCIpIHtcbiAgICBnbG9iYWxUaGlzLnJlZ2VuZXJhdG9yUnVudGltZSA9IHJ1bnRpbWU7XG4gIH0gZWxzZSB7XG4gICAgRnVuY3Rpb24oXCJyXCIsIFwicmVnZW5lcmF0b3JSdW50aW1lID0gclwiKShydW50aW1lKTtcbiAgfVxufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///9\n')},(module,__unused_webpack_exports,__webpack_require__)=>{eval('var _typeof = (__webpack_require__(11)["default"]);\n\nfunction _regeneratorRuntime() {\n  "use strict";\n  /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */\n\n  module.exports = _regeneratorRuntime = function _regeneratorRuntime() {\n    return exports;\n  }, module.exports.__esModule = true, module.exports["default"] = module.exports;\n  var exports = {},\n      Op = Object.prototype,\n      hasOwn = Op.hasOwnProperty,\n      $Symbol = "function" == typeof Symbol ? Symbol : {},\n      iteratorSymbol = $Symbol.iterator || "@@iterator",\n      asyncIteratorSymbol = $Symbol.asyncIterator || "@@asyncIterator",\n      toStringTagSymbol = $Symbol.toStringTag || "@@toStringTag";\n\n  function define(obj, key, value) {\n    return Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: !0,\n      configurable: !0,\n      writable: !0\n    }), obj[key];\n  }\n\n  try {\n    define({}, "");\n  } catch (err) {\n    define = function define(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator,\n        generator = Object.create(protoGenerator.prototype),\n        context = new Context(tryLocsList || []);\n    return generator._invoke = function (innerFn, self, context) {\n      var state = "suspendedStart";\n      return function (method, arg) {\n        if ("executing" === state) throw new Error("Generator is already running");\n\n        if ("completed" === state) {\n          if ("throw" === method) throw arg;\n          return doneResult();\n        }\n\n        for (context.method = method, context.arg = arg;;) {\n          var delegate = context.delegate;\n\n          if (delegate) {\n            var delegateResult = maybeInvokeDelegate(delegate, context);\n\n            if (delegateResult) {\n              if (delegateResult === ContinueSentinel) continue;\n              return delegateResult;\n            }\n          }\n\n          if ("next" === context.method) context.sent = context._sent = context.arg;else if ("throw" === context.method) {\n            if ("suspendedStart" === state) throw state = "completed", context.arg;\n            context.dispatchException(context.arg);\n          } else "return" === context.method && context.abrupt("return", context.arg);\n          state = "executing";\n          var record = tryCatch(innerFn, self, context);\n\n          if ("normal" === record.type) {\n            if (state = context.done ? "completed" : "suspendedYield", record.arg === ContinueSentinel) continue;\n            return {\n              value: record.arg,\n              done: context.done\n            };\n          }\n\n          "throw" === record.type && (state = "completed", context.method = "throw", context.arg = record.arg);\n        }\n      };\n    }(innerFn, self, context), generator;\n  }\n\n  function tryCatch(fn, obj, arg) {\n    try {\n      return {\n        type: "normal",\n        arg: fn.call(obj, arg)\n      };\n    } catch (err) {\n      return {\n        type: "throw",\n        arg: err\n      };\n    }\n  }\n\n  exports.wrap = wrap;\n  var ContinueSentinel = {};\n\n  function Generator() {}\n\n  function GeneratorFunction() {}\n\n  function GeneratorFunctionPrototype() {}\n\n  var IteratorPrototype = {};\n  define(IteratorPrototype, iteratorSymbol, function () {\n    return this;\n  });\n  var getProto = Object.getPrototypeOf,\n      NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype);\n  var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype);\n\n  function defineIteratorMethods(prototype) {\n    ["next", "throw", "return"].forEach(function (method) {\n      define(prototype, method, function (arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n\n      if ("throw" !== record.type) {\n        var result = record.arg,\n            value = result.value;\n        return value && "object" == _typeof(value) && hasOwn.call(value, "__await") ? PromiseImpl.resolve(value.__await).then(function (value) {\n          invoke("next", value, resolve, reject);\n        }, function (err) {\n          invoke("throw", err, resolve, reject);\n        }) : PromiseImpl.resolve(value).then(function (unwrapped) {\n          result.value = unwrapped, resolve(result);\n        }, function (error) {\n          return invoke("throw", error, resolve, reject);\n        });\n      }\n\n      reject(record.arg);\n    }\n\n    var previousPromise;\n\n    this._invoke = function (method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function (resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg();\n    };\n  }\n\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n\n    if (undefined === method) {\n      if (context.delegate = null, "throw" === context.method) {\n        if (delegate.iterator["return"] && (context.method = "return", context.arg = undefined, maybeInvokeDelegate(delegate, context), "throw" === context.method)) return ContinueSentinel;\n        context.method = "throw", context.arg = new TypeError("The iterator does not provide a \'throw\' method");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n    if ("throw" === record.type) return context.method = "throw", context.arg = record.arg, context.delegate = null, ContinueSentinel;\n    var info = record.arg;\n    return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, "return" !== context.method && (context.method = "next", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = "throw", context.arg = new TypeError("iterator result is not an object"), context.delegate = null, ContinueSentinel);\n  }\n\n  function pushTryEntry(locs) {\n    var entry = {\n      tryLoc: locs[0]\n    };\n    1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = "normal", delete record.arg, entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    this.tryEntries = [{\n      tryLoc: "root"\n    }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0);\n  }\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) return iteratorMethod.call(iterable);\n      if ("function" == typeof iterable.next) return iterable;\n\n      if (!isNaN(iterable.length)) {\n        var i = -1,\n            next = function next() {\n          for (; ++i < iterable.length;) {\n            if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next;\n          }\n\n          return next.value = undefined, next.done = !0, next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    return {\n      next: doneResult\n    };\n  }\n\n  function doneResult() {\n    return {\n      value: undefined,\n      done: !0\n    };\n  }\n\n  return GeneratorFunction.prototype = GeneratorFunctionPrototype, define(Gp, "constructor", GeneratorFunctionPrototype), define(GeneratorFunctionPrototype, "constructor", GeneratorFunction), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, "GeneratorFunction"), exports.isGeneratorFunction = function (genFun) {\n    var ctor = "function" == typeof genFun && genFun.constructor;\n    return !!ctor && (ctor === GeneratorFunction || "GeneratorFunction" === (ctor.displayName || ctor.name));\n  }, exports.mark = function (genFun) {\n    return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, "GeneratorFunction")), genFun.prototype = Object.create(Gp), genFun;\n  }, exports.awrap = function (arg) {\n    return {\n      __await: arg\n    };\n  }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () {\n    return this;\n  }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    void 0 === PromiseImpl && (PromiseImpl = Promise);\n    var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl);\n    return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) {\n      return result.done ? result.value : iter.next();\n    });\n  }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, "Generator"), define(Gp, iteratorSymbol, function () {\n    return this;\n  }), define(Gp, "toString", function () {\n    return "[object Generator]";\n  }), exports.keys = function (object) {\n    var keys = [];\n\n    for (var key in object) {\n      keys.push(key);\n    }\n\n    return keys.reverse(), function next() {\n      for (; keys.length;) {\n        var key = keys.pop();\n        if (key in object) return next.value = key, next.done = !1, next;\n      }\n\n      return next.done = !0, next;\n    };\n  }, exports.values = values, Context.prototype = {\n    constructor: Context,\n    reset: function reset(skipTempReset) {\n      if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = "next", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) {\n        "t" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined);\n      }\n    },\n    stop: function stop() {\n      this.done = !0;\n      var rootRecord = this.tryEntries[0].completion;\n      if ("throw" === rootRecord.type) throw rootRecord.arg;\n      return this.rval;\n    },\n    dispatchException: function dispatchException(exception) {\n      if (this.done) throw exception;\n      var context = this;\n\n      function handle(loc, caught) {\n        return record.type = "throw", record.arg = exception, context.next = loc, caught && (context.method = "next", context.arg = undefined), !!caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i],\n            record = entry.completion;\n        if ("root" === entry.tryLoc) return handle("end");\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, "catchLoc"),\n              hasFinally = hasOwn.call(entry, "finallyLoc");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0);\n            if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc);\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0);\n          } else {\n            if (!hasFinally) throw new Error("try statement without catch or finally");\n            if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc);\n          }\n        }\n      }\n    },\n    abrupt: function abrupt(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n\n        if (entry.tryLoc <= this.prev && hasOwn.call(entry, "finallyLoc") && this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      finallyEntry && ("break" === type || "continue" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null);\n      var record = finallyEntry ? finallyEntry.completion : {};\n      return record.type = type, record.arg = arg, finallyEntry ? (this.method = "next", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record);\n    },\n    complete: function complete(record, afterLoc) {\n      if ("throw" === record.type) throw record.arg;\n      return "break" === record.type || "continue" === record.type ? this.next = record.arg : "return" === record.type ? (this.rval = this.arg = record.arg, this.method = "return", this.next = "end") : "normal" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel;\n    },\n    finish: function finish(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel;\n      }\n    },\n    "catch": function _catch(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n\n          if ("throw" === record.type) {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n\n          return thrown;\n        }\n      }\n\n      throw new Error("illegal catch attempt");\n    },\n    delegateYield: function delegateYield(iterable, resultName, nextLoc) {\n      return this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      }, "next" === this.method && (this.arg = undefined), ContinueSentinel;\n    }\n  }, exports;\n}\n\nmodule.exports = _regeneratorRuntime, module.exports.__esModule = true, module.exports["default"] = module.exports;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///10\n')},module=>{eval('function _typeof(obj) {\n  "@babel/helpers - typeof";\n\n  return (module.exports = _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;\n  }, module.exports.__esModule = true, module.exports["default"] = module.exports), _typeof(obj);\n}\n\nmodule.exports = _typeof, module.exports.__esModule = true, module.exports["default"] = module.exports;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTEuanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0EsR0FBRyxFQUFFLHlCQUF5QixTQUFTLHlCQUF5QjtBQUNoRTs7QUFFQSwwQkFBMEIseUJBQXlCLFNBQVMseUJBQXlCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vd2ViYXBwLy4vbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvdHlwZW9mLmpzPzE0YmMiXSwic291cmNlc0NvbnRlbnQiOlsiZnVuY3Rpb24gX3R5cGVvZihvYmopIHtcbiAgXCJAYmFiZWwvaGVscGVycyAtIHR5cGVvZlwiO1xuXG4gIHJldHVybiAobW9kdWxlLmV4cG9ydHMgPSBfdHlwZW9mID0gXCJmdW5jdGlvblwiID09IHR5cGVvZiBTeW1ib2wgJiYgXCJzeW1ib2xcIiA9PSB0eXBlb2YgU3ltYm9sLml0ZXJhdG9yID8gZnVuY3Rpb24gKG9iaikge1xuICAgIHJldHVybiB0eXBlb2Ygb2JqO1xuICB9IDogZnVuY3Rpb24gKG9iaikge1xuICAgIHJldHVybiBvYmogJiYgXCJmdW5jdGlvblwiID09IHR5cGVvZiBTeW1ib2wgJiYgb2JqLmNvbnN0cnVjdG9yID09PSBTeW1ib2wgJiYgb2JqICE9PSBTeW1ib2wucHJvdG90eXBlID8gXCJzeW1ib2xcIiA6IHR5cGVvZiBvYmo7XG4gIH0sIG1vZHVsZS5leHBvcnRzLl9fZXNNb2R1bGUgPSB0cnVlLCBtb2R1bGUuZXhwb3J0c1tcImRlZmF1bHRcIl0gPSBtb2R1bGUuZXhwb3J0cyksIF90eXBlb2Yob2JqKTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBfdHlwZW9mLCBtb2R1bGUuZXhwb3J0cy5fX2VzTW9kdWxlID0gdHJ1ZSwgbW9kdWxlLmV4cG9ydHNbXCJkZWZhdWx0XCJdID0gbW9kdWxlLmV4cG9ydHM7Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///11\n')},,(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__)=>{"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "default": () => (/* binding */ _classCallCheck)\n/* harmony export */ });\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError("Cannot call a class as a function");\n  }\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTMuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFlO0FBQ2Y7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly93ZWJhcHAvLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vY2xhc3NDYWxsQ2hlY2suanM/OWRjMiJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBfY2xhc3NDYWxsQ2hlY2soaW5zdGFuY2UsIENvbnN0cnVjdG9yKSB7XG4gIGlmICghKGluc3RhbmNlIGluc3RhbmNlb2YgQ29uc3RydWN0b3IpKSB7XG4gICAgdGhyb3cgbmV3IFR5cGVFcnJvcihcIkNhbm5vdCBjYWxsIGEgY2xhc3MgYXMgYSBmdW5jdGlvblwiKTtcbiAgfVxufSJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///13\n')},(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__)=>{"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "default": () => (/* binding */ _createClass)\n/* harmony export */ });\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if ("value" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, "prototype", {\n    writable: false\n  });\n  return Constructor;\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTQuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBO0FBQ0Esa0JBQWtCLGtCQUFrQjtBQUNwQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFZTtBQUNmO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly93ZWJhcHAvLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vY3JlYXRlQ2xhc3MuanM/Nzk5ZSJdLCJzb3VyY2VzQ29udGVudCI6WyJmdW5jdGlvbiBfZGVmaW5lUHJvcGVydGllcyh0YXJnZXQsIHByb3BzKSB7XG4gIGZvciAodmFyIGkgPSAwOyBpIDwgcHJvcHMubGVuZ3RoOyBpKyspIHtcbiAgICB2YXIgZGVzY3JpcHRvciA9IHByb3BzW2ldO1xuICAgIGRlc2NyaXB0b3IuZW51bWVyYWJsZSA9IGRlc2NyaXB0b3IuZW51bWVyYWJsZSB8fCBmYWxzZTtcbiAgICBkZXNjcmlwdG9yLmNvbmZpZ3VyYWJsZSA9IHRydWU7XG4gICAgaWYgKFwidmFsdWVcIiBpbiBkZXNjcmlwdG9yKSBkZXNjcmlwdG9yLndyaXRhYmxlID0gdHJ1ZTtcbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBkZXNjcmlwdG9yLmtleSwgZGVzY3JpcHRvcik7XG4gIH1cbn1cblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gX2NyZWF0ZUNsYXNzKENvbnN0cnVjdG9yLCBwcm90b1Byb3BzLCBzdGF0aWNQcm9wcykge1xuICBpZiAocHJvdG9Qcm9wcykgX2RlZmluZVByb3BlcnRpZXMoQ29uc3RydWN0b3IucHJvdG90eXBlLCBwcm90b1Byb3BzKTtcbiAgaWYgKHN0YXRpY1Byb3BzKSBfZGVmaW5lUHJvcGVydGllcyhDb25zdHJ1Y3Rvciwgc3RhdGljUHJvcHMpO1xuICBPYmplY3QuZGVmaW5lUHJvcGVydHkoQ29uc3RydWN0b3IsIFwicHJvdG90eXBlXCIsIHtcbiAgICB3cml0YWJsZTogZmFsc2VcbiAgfSk7XG4gIHJldHVybiBDb25zdHJ1Y3Rvcjtcbn0iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///14\n')},(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "checktoken": () => (/* binding */ checktoken),\n/* harmony export */   "contenttype": () => (/* binding */ contenttype),\n/* harmony export */   "contenttypewithtoken": () => (/* binding */ contenttypewithtoken),\n/* harmony export */   "formsubmit": () => (/* binding */ formsubmit),\n/* harmony export */   "getAvatarColor": () => (/* binding */ getAvatarColor),\n/* harmony export */   "onMessageReceived": () => (/* binding */ onMessageReceived),\n/* harmony export */   "onPrivateMessage": () => (/* binding */ onPrivateMessage),\n/* harmony export */   "onloaddatatable2": () => (/* binding */ onloaddatatable2),\n/* harmony export */   "onloaddatawithfetch": () => (/* binding */ onloaddatawithfetch),\n/* harmony export */   "processrequest2": () => (/* binding */ processrequest2),\n/* harmony export */   "sendmailtocust": () => (/* binding */ sendmailtocust),\n/* harmony export */   "setajax": () => (/* binding */ setajax),\n/* harmony export */   "setajaxwithform": () => (/* binding */ setajaxwithform),\n/* harmony export */   "setajaxwithpromise": () => (/* binding */ setajaxwithpromise),\n/* harmony export */   "submitform": () => (/* binding */ submitform)\n/* harmony export */ });\n/* harmony import */ var _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(1);\n/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(9);\n/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _lithtmlscript__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(16);\n/* harmony import */ var _miscellaneous__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(17);\n\n\n //declare var response:any;\n//these are ajax calls\n//login\n\n\nvar checktoken = function checktoken(token) {\n  //const token= localStorage.getItem(\'token\') ;\n  var decoded = jwt_decode(token);\n  var now = Date.now().valueOf() / 1000;\n  var tokenexp = parseInt(decoded.exp);\n  (0,_miscellaneous__WEBPACK_IMPORTED_MODULE_3__.invalidatetoken)(tokenexp);\n};\nvar contenttype = {\n  "accept": "application/json",\n  "Content-Type": "application/json"\n};\nvar contenttypewithtoken = function contenttypewithtoken(token) {\n  return {\n    "accept": "application/json",\n    "Content-Type": "application/json",\n    "Authorization": "Bearer " + token\n  };\n};\nfunction setajaxwithpromise(datatype, url, method, data, processresponse, beforesend, header) {\n  return new Promise(function (resolve, reject) {\n    $.ajax({\n      url: url,\n      type: method,\n      data: data,\n      datatype: datatype,\n      headers: header,\n      beforeSend: beforesend,\n      success: function success(data) {\n        resolve(processresponse(data));\n      },\n      error: function error(jqXHR, textStatus, errorThrown) {\n        reject(jqXHR);\n      }\n    });\n  });\n}\nvar setajax = function setajax(datatype, url, method, data, processresponse, beforesend, header) {\n  //the beforesend will set headers and authorization i it is required \n  console.log(\' datatype \', datatype, \' url \', url, \' method \', method);\n  $.ajax({\n    type: method,\n    url: url,\n    data: data,\n    dataType: datatype,\n    headers: header,\n    beforeSend: beforesend,\n    success: function success(response) {\n      processresponse(response);\n    },\n    statusCode: {\n      500: function _(xhr) {\n        if (window.location.href.includes(\'wishlist\')) {\n          toastr.error(\'Invalid Username/Password/Wrong credentials\');\n        }\n\n        if (window.location.href.includes(\'cart\')) {\n          toastr.error(\'Invalid Username/Password/Wrong credentials\');\n        }\n      }\n    },\n    error: function error(jqXHR, textStatus, errorThrown) {\n      console.log(textStatus, errorThrown);\n    }\n  });\n};\nvar setajaxwithform = function setajaxwithform(datatype, url, method, data, processresponse, beforesend, header) {\n  //the beforesend will set headers and authorization i it is required \n  console.log(\' datatype \', datatype, \' url \', url, \' method \', method);\n  $.ajax({\n    url: url,\n    type: method,\n    headers: header,\n    dataType: datatype,\n    contentType: false,\n    processData: false,\n    data: data,\n    beforeSend: beforesend,\n    success: function success(response) {\n      processresponse(response);\n    },\n    statusCode: {\n      500: function _(xhr) {\n        toastr.error(\'Invalid Username/Password/Wrong credentials\');\n      }\n    },\n    error: function error(jqXHR, textStatus, errorThrown) {\n      console.log(textStatus, errorThrown);\n    }\n  });\n};\nvar submitform = function submitform(url, data, token, returntype, methodtype) {\n  console.log("url ", url, \'check \', data instanceof FormData);\n\n  if (!$.isEmptyObject(token) && data instanceof FormData) {\n    checktoken(token); // validate token\n\n    $.ajax({\n      url: url,\n      type: methodtype,\n      headers: {\n        Authorization: "Bearer ".concat(token)\n      },\n      dataType: returntype,\n      contentType: false,\n      data: data,\n      processData: false,\n      beforeSend: function beforeSend() {\n        //$("#log").empty().html("<img src=\'./myresources/jetlogistics/images/btn-ajax-loader.gif\'/> &nbsp; Signing In ...");      \t\t       \n        console.log(\'inside ajax .......\');\n      },\n      success: function success(response) {\n        console.log(response); //  localStorage.setItem("token",response) ;\n        //  setTimeout(function() {\n        //       $(".form-button").empty().html("<img src=\'./dist/images/btn-ajax-loader.gif\'/> &nbsp; Signing In ...please wait ....");\n        //       window.location.href="../adminindex" ;\n        //             },2000);\n\n        toastr.success("successfully uploaded/created");\n      },\n      error: function error(err) {\n        console.log(err);\n        Swal.fire({\n          icon: \'error\',\n          text: \'Operation Failed.\'\n        });\n        throw new Error(\'Operation failed .\');\n      },\n      complete: function complete() {// return ;\n      }\n    });\n    return;\n  } else if (!$.isEmptyObject(token) && data instanceof Object) {\n    checktoken(token); // validate token\n\n    $.ajax({\n      url: url,\n      type: methodtype,\n      headers: {\n        Authorization: "Bearer ".concat(token)\n      },\n      dataType: returntype,\n      contentType: \'application/json\',\n      data: JSON.stringify(data),\n      beforeSend: function beforeSend() {\n        //$("#log").empty().html("<img src=\'./myresources/jetlogistics/images/btn-ajax-loader.gif\'/> &nbsp; Signing In ...");      \t\t       \n        console.log(\'inside ajax .......\');\n      },\n      success: function success(response) {\n        console.log(response); //   var decoded = jwt_decode(response);\t \n        //   console.log(decoded,\'exp \',decoded[\'exp\'] , \'sub \',decoded.sub);\n        // localStorage.setItem("token",response) ;\n        //    localStorage.setItem("userid",decoded.sub) ;\n        // $(".form-button").empty().html(`<button id="login">Login</button>`);\n        //  window.location.href="../adminindex" ;\n        //  setTimeout(function() {\n        //       $(".form-button").empty().html("<img src=\'./dist/images/btn-ajax-loader.gif\'/> &nbsp; Signing In ...please wait ....");\n        //       window.location.href="../adminindex" ;\n        //             },2000); \n\n        toastr.success("created/uploaded successfull ....");\n      },\n      error: function error(err) {\n        console.log(err);\n        Swal.fire({\n          icon: \'error\',\n          text: \'Operation Failed.\'\n        });\n      }\n    });\n    return;\n  } //this one is if token is empty , it  can permit all \n\n\n  $.ajax({\n    url: url,\n    type: methodtype,\n    dataType: returntype,\n    contentType: \'application/json\',\n    data: JSON.stringify(data),\n    beforeSend: function beforeSend() {\n      //$("#log").empty().html("<img src=\'./myresources/jetlogistics/images/btn-ajax-loader.gif\'/> &nbsp; Signing In ...");      \t\t       \n      console.log(\'inside ajax .......\');\n    },\n    success: function success(response) {\n      //alert(\'creating response \') ;\n      // console.log(response);\n      //   console.log(decoded,\'exp \',decoded[\'exp\'] , \'sub \',decoded.sub);\n      // console.log(" response ", response);\n      // alert(response);\n      localStorage.setItem("token", response); //   localStorage.setItem("userid",decoded.sub) ;\n      // $(".form-button").empty().html(`<button id="login">Login</button>`);\n      //  window.location.href="../adminindex" ;\n\n      setTimeout(function () {\n        $(".form-button").empty().html("<img src=\'./dist/images/btn-ajax-loader.gif\'/> &nbsp; Signing In ...please wait ....");\n        console.log(\'redirecting ......\');\n        window.location.href = "../adminindex";\n      }, 1500);\n    },\n    error: function error(err) {\n      console.log(err);\n      $("#error").fadeIn(500, function (e) {\n        $("#error").empty().html(\'<br/><div class="alert alert-danger"> <span class="glyphicon glyphicon-info-sign"></span> &nbsp; \' + \'wrong username/password\' + \' !</div>\');\n      });\n    }\n  });\n};\nvar formsubmit = function formsubmit(url, data, token, returntype, methodtype, successmsg, errormsg) {\n  //console.log(\'data stringify \',JSON.stringify(data),\' data\',data) ;\n  if (token) {\n    checktoken(token); // validate token\n\n    return $.ajax({\n      url: url,\n      type: methodtype,\n      headers: {\n        Authorization: "Bearer ".concat(token)\n      },\n      dataType: returntype,\n      contentType: \'application/json\',\n      data: JSON.stringify(data),\n      beforeSend: function beforeSend() {\n        //$("#log").empty().html("<img src=\'./myresources/jetlogistics/images/btn-ajax-loader.gif\'/> &nbsp; Signing In ...");      \t\t       \n        console.log(\'inside ajax .......\');\n      },\n      success: function success(response) {\n        console.log(\'response \', response);\n        successmsg();\n      },\n      error: function error(err) {\n        console.log(\'error \', err);\n\n        if (err.status === 400) {\n          errormsg(\'Please use a registered  email\');\n          return;\n        }\n\n        errormsg();\n      }\n    });\n    return;\n  }\n\n  return $.ajax({\n    url: url,\n    type: methodtype,\n    dataType: returntype,\n    contentType: \'application/json\',\n    data: JSON.stringify(data),\n    beforeSend: function beforeSend() {\n      //$("#log").empty().html("<img src=\'./myresources/jetlogistics/images/btn-ajax-loader.gif\'/> &nbsp; Signing In ...");      \t\t       \n      console.log(\'inside ajax .......\');\n    },\n    success: function success(response) {\n      successmsg();\n    },\n    error: function error(err) {\n      console.log(\'error \', err);\n      errormsg();\n    }\n  });\n};\nvar processrequest2 = /*#__PURE__*/function () {\n  var _ref = (0,_babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_0__["default"])( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1___default().mark(function _callee(url, methodtype, headers, myfunc) {\n    var res, _res;\n\n    return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1___default().wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (!(methodtype === \'get\')) {\n              _context.next = 4;\n              break;\n            }\n\n            _context.next = 3;\n            return fetch(url, {\n              method: methodtype,\n              credentials: \'same-origin\',\n              headers: headers\n            }).then(function (response) {\n              if (response.status != 200) {\n                throw new Error("network access  error");\n              }\n\n              return response.text();\n            }).then(function (r) {\n              // console.log(\'r in function \',r) ;\n              myfunc(r);\n            });\n\n          case 3:\n            res = _context.sent;\n\n          case 4:\n            if (!(methodtype === \'post\' || methodtype === \'put\' || methodtype === \'delete\')) {\n              _context.next = 8;\n              break;\n            }\n\n            _context.next = 7;\n            return fetch(url, {\n              method: methodtype,\n              credentials: \'same-origin\',\n              headers: headers\n            }).then(function (response) {\n              if (response.status != 200) {\n                throw new Error("network access  error");\n              }\n\n              return response.json();\n            }).then(function (r) {\n              // console.log(\'r in function \',r) ;\n              myfunc(r);\n            });\n\n          case 7:\n            _res = _context.sent;\n\n          case 8:\n          case "end":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function processrequest2(_x, _x2, _x3, _x4) {\n    return _ref.apply(this, arguments);\n  };\n}();\nvar onloaddatatable2 = function onloaddatatable2(slider, id, path, dataarray, url, datatable, postfunc) {\n  console.log("".concat(path, "/").concat(url));\n  $(document).ready(function () {\n    datatable = $(id).DataTable({\n      paging: true,\n      //dom: \'Bfrtip\',\n      dom: \'Bfrltip\',\n      buttons: [\'excelHtml5\', \'pdfHtml5\', \'print\', {\n        text: \'Reload\',\n        action: function action(e, dt, node, config) {\n          dt.ajax.reload();\n        }\n      } //  {\n      //      extend: \'searchPanes\',\n      //      config: {\n      //          cascadePanes: true,\n      //          serverSide:false,\n      //          threshold: 1,\n      //          columns: [1,2,3,4,5],\n      //          orthogonal: { search: \'filter\', display: \'display\' }, \n      //      }\n      //  }\n      ],\n      select: {\n        selector: \'td:not(:first-child)\',\n        style: \'os\'\n      },\n      pageLength: 20,\n      searching: true,\n      ordering: true,\n      processing: true,\n      serverSide: false,\n      "ajax": {\n        type: \'GET\',\n        url: "".concat(path, "/").concat(url),\n        // dataSrc:"",\n        headers: {\n          //    "content-type": "application/json",\n          //     "accept": "application/json",\n          "Authorization": "Bearer " + localStorage.getItem(\'token\').trim()\n        } //  data:function(d:any){\n        //     return JSON.parse(d) ;\n        //  },\n        //  success:function(response:any){\n        //   console.log(\'response \',response) ;\n        //  }\n\n      },\n      "columns": dataarray,\n      "order": [[1, \'asc\']],\n      "sPaginationType": "full_numbers",\n      "scrollY": 200,\n      "scrollX": true,\n      "autowidth": true,\n      "destroy": true\n    }); // Add event listener for opening and closing details\n\n    $("".concat(id, " tbody")).on(\'click\', \'tr\', function (e) {\n      var data = datatable.row(e.target).data();\n      console.log(data, slider);\n      $(slider).autofill(data);\n      $(slider + " :input").prop(\'readonly\', true);\n      postfunc();\n      $(slider).slideToggle();\n    }); // $(`${id} tbody`).on(\'click\', \'td.dt-control\', function () {\n    //      var tr = $(this).closest(\'tr\');\n    //      var row = datatable.row(tr);\n    //      console.log(row) ;\n    // });\n  });\n  return datatable;\n};\nvar onloaddatawithfetch = function onloaddatawithfetch(url) {\n  var table;\n  document.addEventListener(\'DOMContentLoaded\', function () {\n    table = $("#trans").DataTable({\n      ajax: function ajax(d, cb) {\n        fetch(url, {\n          method: \'get\',\n          // credentials: \'same-origin\',\n          headers: {\n            "content-type": "application/json",\n            "accept": "application/json",\n            "Authorization": "Bearer " + localStorage.getItem(\'token\').trim()\n          }\n        }).then(function (response) {\n          console.log(\' response.json() \', response.clone().json());\n          response.json();\n        }).then(function (data) {\n          return cb(data);\n        });\n      },\n      "columns": [{\n        data: "orderid"\n      }, {\n        data: "paymentstatus"\n      }, {\n        data: "paymentmethod"\n      }, {\n        data: "orderstatus"\n      }, {\n        data: "orderdate"\n      }],\n      "order": [[1, \'asc\']],\n      destroy: true\n    });\n  });\n  return table;\n};\nvar sendmailtocust = function sendmailtocust(body) {\n  $((0,_lithtmlscript__WEBPACK_IMPORTED_MODULE_2__.secondialog)(function () {\n    return body;\n  }, function () {\n    return "<h5 class=\\"modal-title\\">Email Sender box</h5>";\n  }, function () {\n    return "<div class=\\"row\\">\\n          <div class=\\"col-md-6\\">\\n        <button class=\\"btn btn-danger\\" id=\\"redirecttologin\\">Cancel</button>\\n         </div>\\n        </div>";\n  })).insertAfter(".order-datatable");\n  $(\'#exampleModal\').modal(\'show\'); //show modal\n};\nfunction onMessageReceived(payload) {\n  console.log("message " + payload.body.message);\n  $(\'#messagearea\').append("<br/><li style=\\"color:".concat(getAvatarColor(JSON.parse(payload.body).message), "\\"><strong>").concat(JSON.parse(payload.body).message, "</strong></li><br/>"));\n}\nvar colors = [\'#2196F3\', \'#32c787\', \'#00BCD4\', \'#ff5652\', \'#ffc107\', \'#ff85af\', \'#FF9800\', \'#39bbb0\'];\nfunction getAvatarColor(messageSender) {\n  var hash = 0;\n\n  for (var i = 0; i < messageSender.length; i++) {\n    hash = 31 * hash + messageSender.charCodeAt(i);\n  }\n\n  var index = Math.abs(hash % colors.length);\n  return colors[index];\n}\nvar onPrivateMessage = function onPrivateMessage(payload) {\n  console.log(\'vendor \', payload.body);\n  $(\'#msgarea\').append("<br/><li style=\\"color:".concat(getAvatarColor(JSON.parse(payload.body).message), "\\"><strong>").concat(JSON.parse(payload.body).message, "</strong></li><br/>"));\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///15\n')},(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "dialog": () => (/* binding */ dialog),\n/* harmony export */   "secondialog": () => (/* binding */ secondialog)\n/* harmony export */ });\nvar dialog = function dialog(form, header, footer) {\n  return "\\n   <div class=\\"modal fade\\" id=\\"exampleModal\\" tabindex=\\"-1\\" role=\\"dialog\\" data-backdrop=\\"static\\" aria-labelledby=\\"exampleModalLabel\\" aria-hidden=\\"true\\">\\n   <div class=\\"modal-dialog\\" role=\\"document\\">\\n       <div class=\\"modal-content\\">\\n           <div class=\\"modal-header\\">\\n             ".concat(header, " \\n           </div>\\n           <div class=\\"modal-body\\">\\n             <div id=\\"error\\"></div>\\n              ").concat(form, "\\n           </div>\\n           <div class=\\"modal-footer\\">\\n                ").concat(footer, "\\n               <button class=\\"btn btn-secondary\\" type=\\"button\\" data-dismiss=\\"modal\\">Close</button>\\n           </div>\\n       </div>\\n   </div>\\n</div>\\n   ");\n};\nvar secondialog = function secondialog(form, header, footer) {\n  return "\\n  <div class=\\"modal fade\\" id=\\"exampleModal\\" tabindex=\\"-1\\" role=\\"dialog\\" data-backdrop=\\"static\\" aria-labelledby=\\"exampleModalLabel\\" aria-hidden=\\"true\\">\\n  <div class=\\"modal-dialog\\" role=\\"document\\">\\n      <div class=\\"modal-content\\">\\n          <div class=\\"modal-header\\">\\n            ".concat(header(), " \\n          </div>\\n          <div class=\\"modal-body\\">\\n            <div id=\\"error\\"></div>\\n             ").concat(form(), "\\n          </div>\\n          <div class=\\"modal-footer\\">\\n               ").concat(footer(), "\\n          </div>\\n      </div>\\n  </div>\\n</div>\\n  ");\n}; // <form class="needs-validation">\n// <div class="form">\n//     <div class="form-group">\n//         <label for="validationCustom01" class="mb-1">Category Name :</label>\n//         <input class="form-control" id="validationCustom01" type="text">\n//     </div>\n//     <div class="form-group mb-0">\n//         <label for="validationCustom02" class="mb-1">Category Image :</label>\n//         <input class="form-control" id="validationCustom02" type="file">\n//     </div>\n// </div>\n// </form>\n//header \n// <h5 class="modal-title f-w-600" id="exampleModalLabel">Add Physical Product</h5>\n// <button class="close" type="button" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">Ã</span></button>\n// <button class="btn btn-primary" type="button">Save</button>//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTYuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBTyxJQUFNQSxNQUFNLEdBQUksU0FBVkEsTUFBVSxDQUFDQyxJQUFELEVBQVVDLE1BQVYsRUFBcUJDLE1BQXJCLEVBQWtDO0VBQ3RELHlVQUtZRCxNQUxaLCtIQVNhRCxJQVRiLDJGQVllRSxNQVpmO0FBbUJGLENBcEJNO0FBcUJBLElBQU1DLFdBQVcsR0FBSSxTQUFmQSxXQUFlLENBQUNILElBQUQsRUFBZUMsTUFBZixFQUErQkMsTUFBL0IsRUFBaUQ7RUFDM0Usb1VBS1lELE1BQU0sRUFMbEIsMkhBU2FELElBQUksRUFUakIsd0ZBWWVFLE1BQU0sRUFackI7QUFrQkQsQ0FuQk0sRUFvQlA7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBRUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly93ZWJhcHAvLi90c19zY3JpcHRzL2xpdGh0bWxzY3JpcHQudHM/YjQzNSJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgY29uc3QgZGlhbG9nICA9IChmb3JtOmFueSxoZWFkZXI6YW55LGZvb3RlcjphbnkpPT57XHJcbiAgIHJldHVybiBgXHJcbiAgIDxkaXYgY2xhc3M9XCJtb2RhbCBmYWRlXCIgaWQ9XCJleGFtcGxlTW9kYWxcIiB0YWJpbmRleD1cIi0xXCIgcm9sZT1cImRpYWxvZ1wiIGRhdGEtYmFja2Ryb3A9XCJzdGF0aWNcIiBhcmlhLWxhYmVsbGVkYnk9XCJleGFtcGxlTW9kYWxMYWJlbFwiIGFyaWEtaGlkZGVuPVwidHJ1ZVwiPlxyXG4gICA8ZGl2IGNsYXNzPVwibW9kYWwtZGlhbG9nXCIgcm9sZT1cImRvY3VtZW50XCI+XHJcbiAgICAgICA8ZGl2IGNsYXNzPVwibW9kYWwtY29udGVudFwiPlxyXG4gICAgICAgICAgIDxkaXYgY2xhc3M9XCJtb2RhbC1oZWFkZXJcIj5cclxuICAgICAgICAgICAgICR7aGVhZGVyfSBcclxuICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICA8ZGl2IGNsYXNzPVwibW9kYWwtYm9keVwiPlxyXG4gICAgICAgICAgICAgPGRpdiBpZD1cImVycm9yXCI+PC9kaXY+XHJcbiAgICAgICAgICAgICAgJHtmb3JtfVxyXG4gICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgIDxkaXYgY2xhc3M9XCJtb2RhbC1mb290ZXJcIj5cclxuICAgICAgICAgICAgICAgICR7Zm9vdGVyfVxyXG4gICAgICAgICAgICAgICA8YnV0dG9uIGNsYXNzPVwiYnRuIGJ0bi1zZWNvbmRhcnlcIiB0eXBlPVwiYnV0dG9uXCIgZGF0YS1kaXNtaXNzPVwibW9kYWxcIj5DbG9zZTwvYnV0dG9uPlxyXG4gICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgPC9kaXY+XHJcbiAgIDwvZGl2PlxyXG48L2Rpdj5cclxuICAgYFxyXG59XHJcbmV4cG9ydCBjb25zdCBzZWNvbmRpYWxvZyAgPSAoZm9ybTpGdW5jdGlvbixoZWFkZXI6RnVuY3Rpb24sZm9vdGVyOkZ1bmN0aW9uKT0+e1xyXG4gIHJldHVybiAoYFxyXG4gIDxkaXYgY2xhc3M9XCJtb2RhbCBmYWRlXCIgaWQ9XCJleGFtcGxlTW9kYWxcIiB0YWJpbmRleD1cIi0xXCIgcm9sZT1cImRpYWxvZ1wiIGRhdGEtYmFja2Ryb3A9XCJzdGF0aWNcIiBhcmlhLWxhYmVsbGVkYnk9XCJleGFtcGxlTW9kYWxMYWJlbFwiIGFyaWEtaGlkZGVuPVwidHJ1ZVwiPlxyXG4gIDxkaXYgY2xhc3M9XCJtb2RhbC1kaWFsb2dcIiByb2xlPVwiZG9jdW1lbnRcIj5cclxuICAgICAgPGRpdiBjbGFzcz1cIm1vZGFsLWNvbnRlbnRcIj5cclxuICAgICAgICAgIDxkaXYgY2xhc3M9XCJtb2RhbC1oZWFkZXJcIj5cclxuICAgICAgICAgICAgJHtoZWFkZXIoKX0gXHJcbiAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgIDxkaXYgY2xhc3M9XCJtb2RhbC1ib2R5XCI+XHJcbiAgICAgICAgICAgIDxkaXYgaWQ9XCJlcnJvclwiPjwvZGl2PlxyXG4gICAgICAgICAgICAgJHtmb3JtKCl9XHJcbiAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgIDxkaXYgY2xhc3M9XCJtb2RhbC1mb290ZXJcIj5cclxuICAgICAgICAgICAgICAgJHtmb290ZXIoKX1cclxuICAgICAgICAgIDwvZGl2PlxyXG4gICAgICA8L2Rpdj5cclxuICA8L2Rpdj5cclxuPC9kaXY+XHJcbiAgYCk7XHJcbn1cclxuLy8gPGZvcm0gY2xhc3M9XCJuZWVkcy12YWxpZGF0aW9uXCI+XHJcbi8vIDxkaXYgY2xhc3M9XCJmb3JtXCI+XHJcbi8vICAgICA8ZGl2IGNsYXNzPVwiZm9ybS1ncm91cFwiPlxyXG4vLyAgICAgICAgIDxsYWJlbCBmb3I9XCJ2YWxpZGF0aW9uQ3VzdG9tMDFcIiBjbGFzcz1cIm1iLTFcIj5DYXRlZ29yeSBOYW1lIDo8L2xhYmVsPlxyXG4vLyAgICAgICAgIDxpbnB1dCBjbGFzcz1cImZvcm0tY29udHJvbFwiIGlkPVwidmFsaWRhdGlvbkN1c3RvbTAxXCIgdHlwZT1cInRleHRcIj5cclxuLy8gICAgIDwvZGl2PlxyXG4vLyAgICAgPGRpdiBjbGFzcz1cImZvcm0tZ3JvdXAgbWItMFwiPlxyXG4vLyAgICAgICAgIDxsYWJlbCBmb3I9XCJ2YWxpZGF0aW9uQ3VzdG9tMDJcIiBjbGFzcz1cIm1iLTFcIj5DYXRlZ29yeSBJbWFnZSA6PC9sYWJlbD5cclxuLy8gICAgICAgICA8aW5wdXQgY2xhc3M9XCJmb3JtLWNvbnRyb2xcIiBpZD1cInZhbGlkYXRpb25DdXN0b20wMlwiIHR5cGU9XCJmaWxlXCI+XHJcbi8vICAgICA8L2Rpdj5cclxuLy8gPC9kaXY+XHJcbi8vIDwvZm9ybT5cclxuXHJcbi8vaGVhZGVyIFxyXG4vLyA8aDUgY2xhc3M9XCJtb2RhbC10aXRsZSBmLXctNjAwXCIgaWQ9XCJleGFtcGxlTW9kYWxMYWJlbFwiPkFkZCBQaHlzaWNhbCBQcm9kdWN0PC9oNT5cclxuLy8gPGJ1dHRvbiBjbGFzcz1cImNsb3NlXCIgdHlwZT1cImJ1dHRvblwiIGRhdGEtZGlzbWlzcz1cIm1vZGFsXCIgYXJpYS1sYWJlbD1cIkNsb3NlXCI+PHNwYW4gYXJpYS1oaWRkZW49XCJ0cnVlXCI+w4PClzwvc3Bhbj48L2J1dHRvbj5cclxuXHJcbi8vIDxidXR0b24gY2xhc3M9XCJidG4gYnRuLXByaW1hcnlcIiB0eXBlPVwiYnV0dG9uXCI+U2F2ZTwvYnV0dG9uPiJdLCJuYW1lcyI6WyJkaWFsb2ciLCJmb3JtIiwiaGVhZGVyIiwiZm9vdGVyIiwic2Vjb25kaWFsb2ciXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///16\n')},(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"doDecryption\": () => (/* binding */ doDecryption),\n/* harmony export */   \"doEncryption\": () => (/* binding */ doEncryption),\n/* harmony export */   \"invalidateSession\": () => (/* binding */ invalidateSession),\n/* harmony export */   \"invalidateSessionAndToken\": () => (/* binding */ invalidateSessionAndToken),\n/* harmony export */   \"invalidatetoken\": () => (/* binding */ invalidatetoken),\n/* harmony export */   \"invalidatetoken2\": () => (/* binding */ invalidatetoken2),\n/* harmony export */   \"redirectiftokenisnull\": () => (/* binding */ redirectiftokenisnull)\n/* harmony export */ });\nvar invalidatetoken = function invalidatetoken(exp) {\n  var now = Date.now().valueOf() / 1000;\n  console.log('validating token ....');\n\n  if (typeof exp !== 'undefined' && exp < now) {\n    localStorage.removeItem(\"token\");\n    localStorage.removeItem('userid');\n    console.log('after removing token');\n    window.location.href = \"../adminlogin\";\n    throw new Error(\"token expired\");\n  }\n\n  console.log('token valid ');\n  return;\n}; //clears session for sessionstorage and token\n\n\nvar invalidateSessionAndToken = function invalidateSessionAndToken(jwt_decode, token) {\n  console.log(\"decoding token \", localStorage.getItem('customertoken'));\n\n  if (localStorage.getItem('customertoken')) {\n    var decoded = jwt_decode(localStorage.getItem(token));\n\n    if (decoded !== undefined && decoded !== null) {\n      console.log(\"decoded token \", decoded);\n      var exp = parseInt(decoded.exp);\n      var now = Date.now().valueOf() / 1000;\n      console.log('validating token ....');\n\n      if (typeof exp !== 'undefined' && exp < now) {\n        localStorage.removeItem(token);\n        localStorage.clear();\n        sessionStorage.clear();\n        console.log('after removing token');\n        $('#customercart').empty().html(\"<center><p>Session expired.Please login again</p></center>\");\n        throw new Error(\"token expired\");\n      }\n    }\n  } else {\n    alert('Your cart is empty.pls login to access'); // window.location.href='./index' ;\n  }\n};\n\nvar invalidateSession = function invalidateSession(jwt_decode, token) {\n  console.log(\"decoding token \", localStorage.getItem('customertoken'));\n\n  if (localStorage.getItem('customertoken') !== null) {\n    var decoded = jwt_decode(localStorage.getItem(token));\n\n    if (decoded) {\n      console.log(\"decoded token \", decoded);\n      var exp = parseInt(decoded.exp);\n      var now = Date.now().valueOf() / 1000;\n      console.log('validating token ....');\n\n      if (typeof exp !== 'undefined' && exp < now) {\n        localStorage.removeItem(token);\n        localStorage.clear();\n        sessionStorage.clear();\n        console.log('after removing token and session expired');\n\n        if (confirm('Session expired.Please reload')) {\n          window.location.href = './marketplace';\n        } //$('#customercart').empty().html(`<center><p>Session expired.Please login again</p></center>`);\n\n\n        throw new Error(\"token expired\");\n      }\n    }\n  }\n\n  console.log('got here ');\n}; // for frontend \n\nvar invalidatetoken2 = function invalidatetoken2(jwt_decode, token) {\n  // alert('review');\n  if (!localStorage.getItem(token)) {\n    //if not login\n    toastr.error('Please login');\n    throw new Error(\"no login yet\");\n  }\n\n  var decoded = jwt_decode(localStorage.getItem(token)); //console.log('decoded ',decoded);\n  //alert('review2');\n  //return ;\n\n  var exp = parseInt(decoded.exp);\n  var now = Date.now().valueOf() / 1000;\n  console.log('validating token ....');\n\n  if (typeof exp !== 'undefined' && exp < now) {\n    localStorage.removeItem(token); // localStorage.removeItem('userid');\n    // window.location.href=\"../jetcart/index\" ;\n\n    toastr.error('Please login');\n    console.log('after removing token');\n    throw new Error(\"token expired\");\n  }\n\n  console.log('token valid ');\n  return;\n};\n\nvar redirectiftokenisnull = function redirectiftokenisnull(token) {\n  if (token === null) {\n    window.location.href = \"../adminlogin\";\n  }\n};\n\nvar doEncryption = function doEncryption(plaintText, encryptedBase64Key, apicall) {\n  console.log('plaintText', plaintText, ' encryptedBase64Key ', encryptedBase64Key);\n  var parsedBase64Key = CryptoJS.enc.Base64.parse(encryptedBase64Key);\n  var encryptedData = null; // Encryption process\n\n  console.log(\"plaintText = \" + plaintText); // this is Base64-encoded encrypted data\n\n  encryptedData = CryptoJS.AES.encrypt(plaintText, parsedBase64Key, {\n    mode: CryptoJS.mode.ECB,\n    padding: CryptoJS.pad.Pkcs7\n  });\n  console.log(\"encryptedData in func = \" + encryptedData); // var payload2  = {payload:\"\"} ;\n  //  payload2.payload  = encryptedData ; \n  // console.log('payload ',JSON.stringify(payload2)) ;\n\n  apicall(\"{payload:\".concat(encryptedData, \"}\"));\n  return encryptedData;\n};\n\nvar doDecryption = function doDecryption(encryptedCipherText, encryptedBase64Key) {\n  var parsedBase64Key = CryptoJS.enc.Base64.parse(encryptedBase64Key); //var encryptedCipherText = 'U2WvSc8oTur1KkrB6VGNDmA3XxJb9cC+T9RnqT4kD90=' ; // or encryptedData;\n\n  var decryptedData = CryptoJS.AES.decrypt(encryptedCipherText, parsedBase64Key, {\n    mode: CryptoJS.mode.ECB,\n    padding: CryptoJS.pad.Pkcs7\n  });\n  console.log(\"DecryptedData = \" + decryptedData); // this is the decrypted data as a string\n\n  var decryptedText = decryptedData.toString(CryptoJS.enc.Utf8);\n  console.log(\"DecryptedText = \" + decryptedText);\n};\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///17\n")},(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "backendurl": () => (/* binding */ backendurl),\n/* harmony export */   "brands": () => (/* binding */ brands),\n/* harmony export */   "color": () => (/* binding */ color),\n/* harmony export */   "loginurl": () => (/* binding */ loginurl),\n/* harmony export */   "size": () => (/* binding */ size),\n/* harmony export */   "theprotocol": () => (/* binding */ theprotocol),\n/* harmony export */   "websocketurl": () => (/* binding */ websocketurl)\n/* harmony export */ });\nvar backendurl = "http://localhost:1022"; //export const backendurl=\'http://104.45.92.200:1022\';\n//export const backendurl="https://cristabackend.herokuapp.com" ;\n//export const backendurl  = "https://jetestore.herokuapp.com" ;\n\nvar loginurl = "http://localhost:1021"; //export const loginurl  = "http://104.45.92.200:1021" ;\n//export const loginurl  = "https://jetecommerce.herokuapp.com"\n\nvar theprotocol = \'http://\'; //export const loginurl  =  "https://jecode teshop.herokuapp.com" ;\n\nvar websocketurl = \'http://localhost:1023/ws\'; //export const websocketurl = \'http://104.45.92.200:1023/ws\' ;\n//export const websocketurl = \'http://localhost:1023/ws\' ;\n\nvar brands = new Map(); // for brands \n\nvar size = new Map(); // for size\n\nvar color = new Map(); // for color//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTguanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7OztBQUFPLElBQU1BLFVBQVUsR0FBQyx1QkFBakIsRUFDUDtBQUNBO0FBQ0E7O0FBQ08sSUFBTUMsUUFBUSxHQUFJLHVCQUFsQixFQUNQO0FBQ0E7O0FBQ08sSUFBTUMsV0FBVyxHQUFJLFNBQXJCLEVBQ1A7O0FBRU8sSUFBTUMsWUFBWSxHQUFJLDBCQUF0QixFQUVQO0FBRUE7O0FBRU8sSUFBSUMsTUFBTSxHQUFHLElBQUlDLEdBQUosRUFBYixFQUF3Qzs7QUFDeEMsSUFBSUMsSUFBSSxHQUFHLElBQUlELEdBQUosRUFBWCxFQUF1Qzs7QUFDdkMsSUFBSUUsS0FBSyxHQUFHLElBQUlGLEdBQUosRUFBWixFQUF3QyIsInNvdXJjZXMiOlsid2VicGFjazovL3dlYmFwcC8uL3RzX3NjcmlwdHMvdXJsLnRzPzg2MDIiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGNvbnN0IGJhY2tlbmR1cmw9XCJodHRwOi8vbG9jYWxob3N0OjEwMjJcIiA7XHJcbi8vZXhwb3J0IGNvbnN0IGJhY2tlbmR1cmw9J2h0dHA6Ly8xMDQuNDUuOTIuMjAwOjEwMjInO1xyXG4vL2V4cG9ydCBjb25zdCBiYWNrZW5kdXJsPVwiaHR0cHM6Ly9jcmlzdGFiYWNrZW5kLmhlcm9rdWFwcC5jb21cIiA7XHJcbi8vZXhwb3J0IGNvbnN0IGJhY2tlbmR1cmwgID0gXCJodHRwczovL2pldGVzdG9yZS5oZXJva3VhcHAuY29tXCIgO1xyXG5leHBvcnQgY29uc3QgbG9naW51cmwgID0gXCJodHRwOi8vbG9jYWxob3N0OjEwMjFcIiA7XHJcbi8vZXhwb3J0IGNvbnN0IGxvZ2ludXJsICA9IFwiaHR0cDovLzEwNC40NS45Mi4yMDA6MTAyMVwiIDtcclxuLy9leHBvcnQgY29uc3QgbG9naW51cmwgID0gXCJodHRwczovL2pldGVjb21tZXJjZS5oZXJva3VhcHAuY29tXCJcclxuZXhwb3J0IGNvbnN0IHRoZXByb3RvY29sICA9ICdodHRwOi8vJyA7XHJcbi8vZXhwb3J0IGNvbnN0IGxvZ2ludXJsICA9ICBcImh0dHBzOi8vamVjb2RlIHRlc2hvcC5oZXJva3VhcHAuY29tXCIgO1xyXG5cclxuZXhwb3J0IGNvbnN0IHdlYnNvY2tldHVybCAgPSAnaHR0cDovL2xvY2FsaG9zdDoxMDIzL3dzJyA7XHJcblxyXG4vL2V4cG9ydCBjb25zdCB3ZWJzb2NrZXR1cmwgPSAnaHR0cDovLzEwNC40NS45Mi4yMDA6MTAyMy93cycgO1xyXG5cclxuLy9leHBvcnQgY29uc3Qgd2Vic29ja2V0dXJsID0gJ2h0dHA6Ly9sb2NhbGhvc3Q6MTAyMy93cycgO1xyXG5cclxuZXhwb3J0IGxldCBicmFuZHMgPSBuZXcgTWFwPHN0cmluZyxzdHJpbmc+KCk7ICAvLyBmb3IgYnJhbmRzIFxyXG5leHBvcnQgbGV0IHNpemUgPSBuZXcgTWFwPHN0cmluZywgc3RyaW5nPigpOyAgLy8gZm9yIHNpemVcclxuZXhwb3J0IGxldCBjb2xvciA9IG5ldyBNYXA8c3RyaW5nLCBzdHJpbmc+KCk7ICAvLyBmb3IgY29sb3JcclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG4iXSwibmFtZXMiOlsiYmFja2VuZHVybCIsImxvZ2ludXJsIiwidGhlcHJvdG9jb2wiLCJ3ZWJzb2NrZXR1cmwiLCJicmFuZHMiLCJNYXAiLCJzaXplIiwiY29sb3IiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///18\n')},,,,,(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createtables\": () => (/* binding */ createtables),\n/* harmony export */   \"createtables2\": () => (/* binding */ createtables2),\n/* harmony export */   \"templatefunction\": () => (/* binding */ templatefunction),\n/* harmony export */   \"templatefunctionget\": () => (/* binding */ templatefunctionget)\n/* harmony export */ });\nvar templatefunction = function templatefunction(url, token, crudinput, methodtype) {\n  // console.log('crudinput ',crudinput,' token ',token) ;\n  return $.ajax({\n    type: methodtype,\n    url: url,\n    headers: {\n      Authorization: \"Bearer \".concat(token) // 'Content-Type': 'application/json',\n\n    },\n    // dataType:'json',\n    // data:JSON.stringify(crudinput),\n    error: function error(err) {\n      console.log('err ', err); //  errorfunc() ;\n    }\n  });\n};\nvar templatefunctionget = function templatefunctionget(url, token, crudinput, methodtype) {\n  console.log('crudinput ', crudinput);\n  return $.ajax({\n    type: methodtype,\n    url: url,\n    headers: {\n      Authorization: \"Bearer \".concat(token)\n    },\n    data: crudinput,\n    // dataType:'json',\n    // data:crudinput,\n    error: function error(err) {\n      console.log('err ', err); //  errorfunc() ;\n    }\n  });\n};\nvar createtables = function createtables(url, token, fieldsdata) {\n  $(\"#basicScenario2\").jsGrid({\n    width: \"100%\",\n    height: \"250px\",\n    filtering: true,\n    // inserting:true,\n    editing: true,\n    sorting: true,\n    paging: true,\n    autoload: true,\n    noDataContent: \"No Data is found\",\n    pageSize: 10,\n    //loadIndication: true,\n    loadMessage: \"Please, wait...\",\n    pageButtonCount: 5,\n    confirmDeleting: true,\n    deleteConfirm: \"Do you really want to delete data ?\",\n    controller: {\n      loadData: function loadData(filter) {\n        console.log('filter ', filter);\n        return templatefunction(url, token, filter, 'get');\n      },\n      insertItem: function insertItem(item) {\n        // refresh grid\n        console.log('item ', item);\n        setTimeout(function () {\n          console.log('reloading items ');\n          $(\"#basicScenario2\").jsGrid(\"loadData\"); //  reloads the  grid\n        }, 7000);\n        return templatefunctionget(url, localStorage.getItem('token'), item, 'post');\n      },\n      updateItem: function updateItem(item) {\n        // refresh grid\n        setTimeout(function () {\n          console.log('reloading items ');\n          $(\"#basicScenario2\").jsGrid(\"loadData\"); //  reloads the  grid\n        }, 7000);\n        return templatefunctionget(url, localStorage.getItem('token'), item, 'put');\n      },\n      deleteItem: function deleteItem(item) {\n        setTimeout(function () {\n          console.log('reloading items ');\n          $(\"#basicScenario2\").jsGrid(\"loadData\"); //  reloads the  grid\n        }, 7000);\n        return templatefunctionget(url, localStorage.getItem('token'), item, 'delete');\n      }\n    },\n    fields: fieldsdata\n  });\n}; // createtables2\n\nvar createtables2 = function createtables2(url, token, fieldsdata, insertcond) {\n  $(\"#basicScenario2\").jsGrid({\n    width: \"100%\",\n    height: \"250px\",\n    filtering: true,\n    inserting: insertcond,\n    editing: true,\n    sorting: true,\n    paging: true,\n    autoload: true,\n    noDataContent: \"No Data is found\",\n    pageSize: 10,\n    //loadIndication: true,\n    loadMessage: \"Please, wait...\",\n    pageButtonCount: 5,\n    confirmDeleting: true,\n    deleteConfirm: \"Do you really want to delete data ?\",\n    controller: {\n      loadData: function loadData(filter) {\n        console.log('filter in get ', filter);\n        return templatefunction(url, token, filter, 'get');\n      },\n      insertItem: function insertItem(item) {\n        // refresh grid\n        console.log('item ', item);\n        setTimeout(function () {\n          console.log('reloading items ');\n          $(\"#basicScenario2\").jsGrid(\"loadData\"); //  reloads the  grid\n        }, 2000);\n        return templatefunctionget(url, localStorage.getItem('token'), item, 'post');\n      },\n      updateItem: function updateItem(item) {\n        // refresh grid\n        setTimeout(function () {\n          console.log('reloading items ');\n          $(\"#basicScenario2\").jsGrid(\"loadData\"); //  reloads the  grid\n        }, 2000);\n        return templatefunctionget(url, localStorage.getItem('token'), item, 'put');\n      },\n      deleteItem: function deleteItem(item) {\n        setTimeout(function () {\n          console.log('reloading items ');\n          $(\"#basicScenario2\").jsGrid(\"loadData\"); //  reloads the  grid\n        }, 2000);\n        return templatefunctionget(url, localStorage.getItem('token'), item, 'delete');\n      }\n    },\n    fields: fieldsdata\n  });\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///23\n")},(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(1);\n/* harmony import */ var _babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(25);\n/* harmony import */ var _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(2);\n/* harmony import */ var _babel_runtime_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(3);\n/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(9);\n/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var _lithtmlscript__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(16);\n/* harmony import */ var _url__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(18);\n/* harmony import */ var _miscellaneous__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(17);\n/* harmony import */ var _tsbackendscript_ajaxfunctioncall__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(15);\n/* harmony import */ var _tables__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(23);\n/* harmony import */ var _categorypage__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(26);\n/* harmony import */ var _animate__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(27);\n\n\n\n\n\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it["return"] != null) it["return"](); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { (0,_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_2__["default"])(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\n// import expect "" quotes  in typescript\n//declare var ajaxcall:any;\n\n\n\n\n\n\n\nvar wsUri = "ws://" + "localhost:1022"; //let wsUri: string = "ws://" + "http://104.45.92.200:1022" ;\n//let wsUri: string = "ws://" + "http://localhost:1022" ;\n//let sockjsurl  = \'http://104.45.92.200:1023\' ;\n\nvar sockjsurl = \'http://localhost:1023\';\ntoastr.options = {\n  // toast and notification\n  "closeButton": true,\n  "debug": false,\n  "newestOnTop": false,\n  "progressBar": true,\n  "positionClass": "toast-top-right",\n  "preventDuplicates": false,\n  "onclick": null,\n  "showDuration": "2500",\n  "hideDuration": "200",\n  "timeOut": "3000",\n  "showEasing": "swing",\n  "hideEasing": "linear",\n  "showMethod": "fadeIn",\n  "hideMethod": "fadeOut"\n}; //the dom function for jsx\n\nfunction dom(tag, attrs) {\n  //   const element = document.createElement(tag)\n  // Object.entries(attrs || {}).forEach(([name, value]) => {\n  // \tif (name.startsWith(\'on\') && name.toLowerCase() in window)\n  // \t\telement.addEventListener(name.toLowerCase().substr(2), value)\n  // \telse element.setAttribute(name, value.toString())\n  // })\n  // children.forEach((child) => {\n  // \tappendChild(element, child)\n  //   })\n  //       return element\n  //Custom Components will be functions\n  if (typeof tag === \'function\') {\n    return tag();\n  } // regular html tags will be strings to create the elements\n\n\n  if (typeof tag === \'string\') {\n    // fragments to append multiple children to the initial node\n    var fragments = document.createDocumentFragment();\n    var element = document.createElement(tag);\n\n    for (var _len = arguments.length, children = new Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {\n      children[_key - 2] = arguments[_key];\n    }\n\n    children.forEach(function (child) {\n      if (child instanceof HTMLElement) {\n        fragments.appendChild(child);\n      } else if (typeof child === \'string\') {\n        var textnode = document.createTextNode(child);\n        fragments.appendChild(textnode);\n      } else {\n        // later other things could not be HTMLElement not strings\n        console.log(\'not appendable\', child);\n      }\n    });\n    element.appendChild(fragments); // Merge element with attributes\n    //  console.log(\'attrs ...\', attrs);\n\n    Object.entries(attrs || {}).forEach(function (_ref) {\n      var _ref2 = (0,_babel_runtime_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_3__["default"])(_ref, 2),\n          name = _ref2[0],\n          value = _ref2[1];\n\n      if (name.startsWith(\'on\') && name.toLowerCase() in window) element.addEventListener(name.toLowerCase().substr(2), value); // else element.setAttribute(name, value.toString())\n    });\n    Object.assign(element, attrs);\n    return element;\n  }\n} // customer  login\n\n\n$(\'#customerlogin\').on(\'click\', function () {\n  $((0,_lithtmlscript__WEBPACK_IMPORTED_MODULE_5__.dialog)("", "", "")).insertAfter(".page-main-header"); //invoke the dialog box\n\n  var mydialogpos = document.querySelector(".modal-dialog");\n  mydialogpos.classList.add("modal-dialog-centered"); // center  it verticallycl\n\n  $(".modal-header").html(function () {\n    return dom("h5", {\n      className: "modal-title f-w-600",\n      id: "exampleModalLabel"\n    }, "Customer Login");\n  }());\n  $(\'.modal-body\').empty().html(function () {\n    return dom("form", {\n      className: "needs-validation",\n      id: "catform",\n      autoComplete: "off"\n    }, dom("div", {\n      className: "form"\n    }, dom("div", {\n      className: "form-group"\n    }, dom("label", {\n      "for": "validationCustom01",\n      className: "mb-1"\n    }, "Username:"), dom("input", {\n      className: "form-control",\n      id: "username",\n      type: "text",\n      name: "username"\n    })), dom("div", {\n      className: "form-group mb-0"\n    }, dom("label", {\n      "for": "validationCustom02",\n      className: "mb-1"\n    }, "Pasword:"), dom("input", {\n      className: "form-control",\n      id: "password",\n      type: "password",\n      name: "password"\n    }))));\n  }()); //add footer\n\n  $(".modal-footer").empty().html(function () {\n    function login(e) {\n      e.preventDefault(); // processphysicalanddigitalcategory(\'post\', \'Sub Category\', `${backendurl}/subcat/createsubcategory`, \'Do you want to create sub-category\', \'catform\', "sub category created successfuly", \'error creating category\');\n\n      var form = document.getElementById(\'catform\');\n      var formdata = new FormData(form); // submitform(`${loginurl}/api/login`,{username:this.username,password:this.password},null,\'text\',\'post\');//send form\n      //submitform(`${backendurl}/customerlogin`,formdata,null,\'text\',\'post\');//send form\n\n      fetch("".concat(_url__WEBPACK_IMPORTED_MODULE_6__.loginurl, "/api/login"), {\n        method: \'post\',\n        credentials: \'same-origin\',\n        headers: {\n          \'Content-Type\': "application/json"\n        },\n        body: JSON.stringify({\n          username: formdata.get(\'username\'),\n          password: formdata.get("password")\n        })\n      }).then(function (response) {\n        if (response.status != 200) {\n          throw new Error("network access  error");\n        }\n\n        return response.text();\n      }).then(function (r) {\n        var _localStorage$getItem;\n\n        // console.log(\'r in function \', r);\n        localStorage.setItem("customertoken", r);\n        var decoded = jwt_decode(r);\n        console.log(decoded, \'exp \', decoded[\'exp\'], \'sub \', decoded.sub, \'vendorname \', decoded.vendorname, \' ack \', decoded.ack);\n        var now = Date.now().valueOf() / 1000;\n        var tokenexp = parseInt(decoded.exp);\n        console.log(decoded.username);\n        localStorage.setItem(\'vendorname\', decoded.vendorname);\n        localStorage.setItem(\'ack\', decoded.ack);\n        localStorage.setItem(\'username\', decoded.username);\n        var login = document.querySelector(\'.login\');\n        login.classList.add("alert");\n        login.classList.add("alert-success");\n        login.classList.add("alert-dismissible");\n        login.classList.add("fade");\n        login.classList.add("show");\n        $(\'.login\').empty().html("<strong>Welcome ".concat((_localStorage$getItem = localStorage.getItem(\'username\')) === null || _localStorage$getItem === void 0 ? void 0 : _localStorage$getItem.toUpperCase(), " &nbsp;</strong> Logged in.\\n      <button type=\\"button\\" class=\\"close\\" data-dismiss=\\"alert\\" aria-label=\\"Close\\">\\n        <span aria-hidden=\\"true\\">&times;</span></button>")); //check if it is wishlist\n\n        if (window.location.href.includes(\'/wishlist\')) {\n          // load wishlist and cart\n          var content = (0,_tsbackendscript_ajaxfunctioncall__WEBPACK_IMPORTED_MODULE_8__.contenttypewithtoken)(localStorage.getItem(\'customertoken\'));\n          console.log(\'content \', content);\n          (0,_tsbackendscript_ajaxfunctioncall__WEBPACK_IMPORTED_MODULE_8__.setajax)(\'json\', "".concat(_url__WEBPACK_IMPORTED_MODULE_6__.backendurl, "/product/loadwishlist/").concat(decoded.ack), \'get\', "", function (response) {\n            console.log(\'response \', response); // response=[] ;  \n\n            if (response.length === 0) {\n              Swal.fire({\n                icon: \'question\',\n                text: \'Your WishList is Empty?\',\n                showCancelButton: false,\n                allowOutsideClick: false\n              }).then(function (result) {\n                if (result.isConfirmed) {\n                  window.location.href = \'./marketplace\';\n                }\n              });\n            }\n\n            var wishlistbuilder = new StringBuilder(); //console.log(\'wishliststore empty store \', wishliststore);\n\n            response.forEach(function (f) {\n              wishlistbuilder.append("<tbody id=\\"".concat(f.id, "\\">\\n               <tr>\\n                   <td>\\n                       <a href=\\"/jetcart/productpage\\" onclick=\\"loadprd(\'").concat(f.id, "\',\'/jetcart/productpage\')\\">\\n                       <img src=\\"").concat(_url__WEBPACK_IMPORTED_MODULE_6__.backendurl, "/jetstore/").concat(f.imageurl, "\\" alt=\\"\\"></a>\\n                   </td>\\n                   <td><a href=\\"#\\">").concat(f.productname, "</a>\\n                       <div class=\\"mobile-cart-content row\\">\\n                           <div class=\\"col-xs-3\\">\\n                               <p>in stock</p>\\n                           </div>\\n                           <div class=\\"col-xs-3\\">\\n                               <h2 class=\\"td-color\\">N").concat(parseFloat(f.productprice).toFixed(2).replace(/\\d(?=(\\d{3})+\\.)/g, \'$&,\'), "</h2>\\n                           </div>\\n                           <div class=\\"col-xs-3\\">\\n                               <h2 class=\\"td-color\\"><a href=\\"#\\" class=\\"icon mr-1\\"><i class=\\"ti-close\\"></i>\\n                                   </a><a href=\\"#\\" class=\\"cart\\"><i class=\\"ti-shopping-cart\\"></i></a></h2>\\n                           </div>\\n                       </div>\\n                   </td>\\n                   <td>\\n                       <h2>N").concat(parseFloat(f.productprice).toFixed(2).replace(/\\d(?=(\\d{3})+\\.)/g, \'$&,\'), "</h2>\\n                   </td>\\n                   <td>\\n                   <a href=\\"javascript:void(0)\\" class=\\"icon mr-3\\">\\n                   <i class=\\"ti-close\\" title=\\"remove\\" onclick=\\"removeRow(\'").concat(f.id, "\')\\"></i></a>\\n                     <a href=\\"javascript:void(0)\\" onclick=\\"addtocartforwishlist(\'").concat(f.id, "\')\\" class=\\"cart\\"><i class=\\"ti-shopping-cart\\" title=\\"add to cart\\"></i></a>\\n                   </td>\\n                    </tr></tbody>"));\n            }); // set sessionstorage afresh \n\n            sessionStorage.setItem(\'wishlist\', JSON.stringify(response));\n            $(\'#wishlisttable\').append(wishlistbuilder.toString());\n          }, function () {}, content);\n        }\n\n        if (window.location.href.includes(\'/cart\')) {\n          var _content = (0,_tsbackendscript_ajaxfunctioncall__WEBPACK_IMPORTED_MODULE_8__.contenttypewithtoken)(localStorage.getItem(\'customertoken\'));\n\n          console.log(\'content \', _content);\n          (0,_tsbackendscript_ajaxfunctioncall__WEBPACK_IMPORTED_MODULE_8__.setajax)(\'json\', "".concat(_url__WEBPACK_IMPORTED_MODULE_6__.backendurl, "/product/loadcartlist/").concat(decoded.ack), \'get\', "", function (store) {\n            console.log(\'response \', store); // response=[] ;  \n\n            if (store.length === 0) {\n              Swal.fire({\n                icon: \'question\',\n                text: \'Your Cart is Empty?\',\n                showCancelButton: false,\n                allowOutsideClick: false\n              }).then(function (result) {\n                if (result.isConfirmed) {\n                  window.location.href = \'./marketplace\';\n                }\n              });\n            } //load cart afresh from db \n            //const store = JSON.parse(sessionStorage.getItem(\'store\') as string);\n            // $(\'#customercart\').empty().html(processcart()) ;\n\n\n            console.log(\'store \', store);\n\n            if (store === null || store.includes(null)) {\n              $(\'#customercart\').empty().html("<center><p>Your cart is empty</p></center>");\n              return;\n            }\n\n            var totalbody = store.map(function (elem) {\n              console.log(\'element \', elem); //processing each object in cart \n\n              return "\\n               <tbody>\\n                 <tr>\\n                   <td>\\n                       <a href=\\"#\\"><img src=\\"".concat(_url__WEBPACK_IMPORTED_MODULE_6__.backendurl, "/jetstore/").concat(elem.imageurl, "\\" alt=\\"\\" /></a>\\n                   </td>\\n                   <td>\\n                   <a href=\\"#\\">").concat(elem.productname, "</a>\\n                       <div class=\\"mobile-cart-content row\\">\\n                           <div class=\\"col-xs-3\\">\\n                               <div class=\\"qty-box\\">\\n                                   <div class=\\"input-group\\">\\n                                       <input type=\\"text\\" name=\\"quantity\\" \\n                                       class=\\"form-control input-number\\"\\n                                           value=\\"").concat(parseFloat(elem.productquantity), "\\" />\\n                                   </div>\\n                                 </div>\\n                               </div>\\n                             \\n                           <div class=\\"col-xs-3\\">\\n                               <h2 class=\\"td-color\\">").concat(elem.productprice, "</h2>\\n                           </div>\\n                           <div class=\\"col-xs-3\\">\\n                               <h2 class=\\"td-color\\"><a href=\\"#\\" class=\\"icon\\">\\n                                 <i class=\\"ti-close\\"></i></a>\\n                               </h2>\\n                           </div>\\n                       </div>\\n                   </td>\\n                   <td>\\n                       <h2>N").concat(parseFloat(elem.productprice).toFixed(2).replace(/\\d(?=(\\d{3})+\\.)/g, \'$&,\'), "</h2>\\n                   </td>\\n                   <td>\\n                       <div class=\\"qty-box\\">\\n                           <div class=\\"input-group\\">\\n                               <input type=\\"number\\" name=\\"quantity\\" \\n                               class=\\"form-control input-number\\" readonly\\n                                   value=\\"").concat(parseFloat(elem.productquantity), "\\" />\\n                           </div>\\n                       </div>\\n                   </td>\\n                   <td>\\n                   <a href=\\"javascript:void(0)\\" class=\\"icon mr-3\\">\\n                   <i class=\\"ti-close\\" title=\\"remove\\" onclick=\\"removeRow(\'").concat(elem.id, "\')\\"></i></a>\\n                   </td>\\n                   <td>\\n          <h2 class=\\"td-color\\">N").concat((parseFloat(elem.productprice) * parseFloat(elem.productquantity)).toFixed(2).replace(/\\d(?=(\\d{3})+\\.)/g, \'$&,\'), "</h2>\\n                   </td>           \\n               </tr>\\n           </tbody>");\n            }); //  <td>${parseFloat(elem.productprice)}</td>\n            //  <td>${parseFloat(elem.productquantity)}</td>\n\n            var builder = new StringBuilder();\n            builder.append("\\n           <table class=\\"table cart-table table-responsive-xs\\">\\n             <thead>\\n           <tr className=\\"table-head\\">\\n               <th scope=\\"col\\">image</th>\\n               <th scope=\\"col\\">product name</th>\\n               <th scope=\\"col\\">price</th>\\n               <th scope=\\"col\\">quantity</th>\\n               <th scope=\\"col\\">action</th>\\n               <th scope=\\"col\\">total</th>\\n           </tr>\\n             </thead>");\n            totalbody.forEach(function (el) {\n              builder.append(el);\n            });\n            builder.append("</table>");\n            var totalprice = store.map(function (res) {\n              return res.productprice * res.productquantity;\n            });\n            console.log(\'totalprice\', totalprice);\n            builder.append("<table className=\\"table cart-table table-responsive-md\\">\\n                    <tfoot>\\n                      <tr>\\n                        <td>Total Price :</td>\\n                        <td>\\n                          <h2>N".concat(parseFloat(totalprice.reduce(function (a, b) {\n              return a + b;\n            }, 0.0)).toFixed(2).replace(/\\d(?=(\\d{3})+\\.)/g, \'$&,\'), "</h2>\\n                        </td>\\n                      </tr>\\n                    </tfoot>\\n                  </table>\\n                  "));\n            sessionStorage.setItem(\'store\', JSON.stringify(store));\n            $(\'#customercart\').empty().html(builder.toString());\n          }, function () {}, _content);\n        }\n\n        if (window.location.href.includes(\'/checkout\')) {\n          var id = localStorage.getItem(\'ack\');\n\n          var _content2 = (0,_tsbackendscript_ajaxfunctioncall__WEBPACK_IMPORTED_MODULE_8__.contenttypewithtoken)(localStorage.getItem(\'customertoken\'));\n\n          (0,_tsbackendscript_ajaxfunctioncall__WEBPACK_IMPORTED_MODULE_8__.setajax)(\'json\', "".concat(_url__WEBPACK_IMPORTED_MODULE_6__.backendurl, "/userdetail/").concat(id), \'get\', "", function (response) {\n            // process the response\n            var phonenumber = response[0].phonenumber;\n\n            var json = _objectSpread({}, response[0]);\n\n            json.phone = phonenumber;\n            delete json.phonenumber; // json = Object.assign({}, array);\n            // json = array.reduce((json, value, key) => { json[key] = value; return json; }, {});\n\n            console.log(\'response from  \', response, \'json\', json);\n            $("#regform").autofill(json);\n          }, function () {}, _content2);\n        }\n\n        close(e);\n      });\n    }\n\n    function close(e) {\n      e.preventDefault();\n      $(\'#exampleModal\').modal(\'hide\');\n      setTimeout(function () {\n        $(\'#exampleModal\').remove();\n      }, 800);\n    }\n\n    return dom("div", null, dom("button", {\n      className: "btn btn-primary",\n      type: "button",\n      onClick: function onClick(e) {\n        return login(e);\n      }\n    }, "Login"), "\\xA0\\xA0\\xA0", dom("button", {\n      className: "btn btn-secondary",\n      type: "button",\n      "data-dismiss": "modal",\n      onClick: function onClick(e) {\n        return close(e);\n      }\n    }, "Close"));\n  }());\n  $(\'#exampleModal\').modal(\'show\'); //show modal\n}); // log out customer \n\n$(\'#custlogout\').on(\'click\', function (e) {\n  e.preventDefault();\n  Swal.fire({\n    icon: \'question\',\n    text: \'Do you want to log out ?\',\n    showCancelButton: true,\n    allowOutsideClick: false\n  }).then(function (result) {\n    localStorage.clear();\n    sessionStorage.clear();\n    window.location.href = \'./index\';\n  });\n}); //get state from countries .also use checkout\n\n$(\'#country\').on(\'change\', function (e) {\n  e.preventDefault(); //alert(e.target.value.toLowerCase()) ;\n\n  var countryandstates = {\n    "country": e.target.value.toLowerCase()\n  };\n  (0,_tsbackendscript_ajaxfunctioncall__WEBPACK_IMPORTED_MODULE_8__.setajax)(\'json\', "https://countriesnow.space/api/v0.1/countries/states", \'post\', JSON.stringify(countryandstates), function (response) {\n    // process the response\n    // console.log(\'response \',response);\n    response = response.data.states.map(function (e) {\n      return "<option value=\'".concat(e.name, "\'>").concat(e.name, "</option>");\n    });\n    $("#state").empty().html(response.join(""));\n  }, function () {}, _tsbackendscript_ajaxfunctioncall__WEBPACK_IMPORTED_MODULE_8__.contenttype);\n}); // get cities from states \n\n$("#state").on(\'change\', function (e) {\n  console.log("Country ", $(\'#country\').text()); // alert($(\'#country\').text()) ;\n  // alert($(\'#country\').val()) ;\n\n  e.preventDefault();\n  var countryandstates = {\n    "country": $(\'#country\').val(),\n    "state": e.target.value\n  };\n  (0,_tsbackendscript_ajaxfunctioncall__WEBPACK_IMPORTED_MODULE_8__.setajax)(\'json\', "https://countriesnow.space/api/v0.1/countries/state/cities", \'post\', JSON.stringify(countryandstates), function (response) {\n    // process the response\n    // console.log(\'response \',response.data);\n    response = response.data.map(function (e) {\n      return "<option value=\'".concat(e, "\'>").concat(e, "</option>");\n    });\n    response.push("<option value=\\"Other\\">Other</option>");\n    $("#city").empty().html(response.join(""));\n  }, function () {}, _tsbackendscript_ajaxfunctioncall__WEBPACK_IMPORTED_MODULE_8__.contenttype);\n}); //create account\n\n$(\'#createaccount\').on(\'click\', function (e) {\n  e.preventDefault(); //  invalidatetoken2(jwt_decode, \'customertoken\'); // check token\n\n  alertify.confirm(\'Registration\', \'Do you want to Register Now ?\', function () {\n    // const form2 = document.getElementById(\'regform\') as HTMLFormElement ;\n    var form = JSON.parse($(\'#regform\').jform());\n    console.log(\' form \', form);\n\n    if (form.phone === "" || form.phone === null) {\n      toastr.error(\'Phone cannot be empty\');\n      return;\n    }\n\n    if (form.password === "" || form.password === null) {\n      toastr.error(\'Password cannot be empty\');\n      return;\n    }\n\n    if (form.password === "" || form.password === null) {\n      toastr.error(\'confirmpassword cannot be empty\');\n      return;\n    }\n\n    if (form.email === "" || form.email === null) {\n      toastr.error(\'Phone cannot be empty\');\n      return;\n    }\n\n    if (form.country === "" || form.country === null) {\n      toastr.error(\'Country cannot be empty\');\n      return;\n    }\n\n    if (form.state === "" || form.state === null) {\n      toastr.error(\'State cannot be empty\');\n      return;\n    }\n\n    sessionStorage.setItem(\'form\', JSON.stringify(form));\n    (0,_tsbackendscript_ajaxfunctioncall__WEBPACK_IMPORTED_MODULE_8__.setajax)(\'text\', "".concat(_url__WEBPACK_IMPORTED_MODULE_6__.backendurl, "/customer/register"), \'post\', JSON.stringify(form), function (response) {\n      // process the response\n      console.log(\'response \', response);\n      Swal.fire({\n        icon: \'info\',\n        text: response + \'Please check your Email for Account Activation\',\n        showCancelButton: true,\n        allowOutsideClick: false\n      }).then(function (result) {\n        if (result.isConfirmed) {\n          document.getElementById(\'regform\').reset();\n          window.location.href = "./productpage";\n        }\n      });\n    }, function () {}, _tsbackendscript_ajaxfunctioncall__WEBPACK_IMPORTED_MODULE_8__.contenttype); // formsubmit(`${backendurl}/customer/register`, form, null, \'text\', \'post\', (id: string) => {\n    //   $("#error").empty().html(\'<br/><div class="alert alert-success" style="display:inline-block;"> <a href="/jetcart/checkout" class="btn btn-primary">Back</a> &nbsp;&nbsp;<span class="glyphicon glyphicon-info-sign"></span> &nbsp; \' + \'Registration is Successful\' + \' !</div>\');\n    //   alertify.success(\'Account creation successful\');\n    // }, () => {\n    //   $("#error").empty().html(\'<br/><div class="alert alert-danger" style="display:inline-block;"> <span class="glyphicon glyphicon-info-sign"></span> &nbsp; \' + \'Registration is  not Successful\' + \' !</div>\');\n    // });\n  }, function () {\n    alertify.error(\'cancelled\');\n  });\n}); //$(\'$\')\n// registeration\n// $(\'#createaccount\').on(\'click\',(e:any)=>{\n//   e.preventDefault() ;\n//   alert(\'seen\') ;\n// });\n//create billing system under  check out\n\n$(\'#createbilling\').on(\'click\', function (e) {\n  // alert() ;\n  e.preventDefault();\n  var accountoption = document.getElementById("account-option"); // alert(\'works\') ;\n  //return ;\n\n  if (accountoption.checked) {\n    window.location.href = "/jetcart/register";\n  } else if (!accountoption.checked) {\n    alertify.confirm(\'Billing Details\', \'Do you want create Billing Details and order this/these Goods/Product/Items ?\', function () {\n      var paymentgroup = document.getElementsByName(\'paymentgroup\'); // const paymentondelivery  = (Array.from(paymentgroup)[0] as HTMLInputElement).checked ;\n\n      var paymentwithdebitcard = Array.from(paymentgroup)[1].checked; // let selecttyperadio = Array.from(document.getElementsByName(\'selectype\') as NodeListOf<HTMLInputElement>);\n\n      document.getElementById(\'payment-5\').onclick = function (e) {\n        console.log(e.target.value, \' and \', e.target.checked);\n\n        if (e.target.checked) {\n          paymentwithdebitcard = e.target.checked;\n        }\n\n        console.log(\'Array \', paymentwithdebitcard);\n      };\n\n      if (paymentwithdebitcard === false) {\n        alertify.confirm().destroy();\n        toastr.error(\'Pls Choose either one of the two options\');\n        throw new Error(\'option eror\');\n      }\n\n      var form = JSON.parse($(\'#regform\').jform()); // console.log(\'userid \', localStorage.getItem(\'ack\'), \'form\', form);\n\n      if (!localStorage.getItem(\'ack\')) {\n        form = {};\n\n        if ($.isEmptyObject(form)) {\n          alertify.confirm().destroy();\n          toastr.error(\'Please fill the Billing Details\');\n          throw new Error(\'Option error\');\n        }\n      }\n\n      form.total = $(\'#total\').text(); // console.log(\'form\', form);\n\n      var tabledata = $(\'.qty\').tableToJSON(); // console.log(\' table \', tabledata);//arrange and process for order \n\n      var orderarray = [];\n      var mystore = JSON.parse(sessionStorage.getItem(\'store\')); // get session store\n      //console.log(\'mystore\', mystore);\n\n      var _iterator = _createForOfIteratorHelper(tabledata),\n          _step;\n\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var prd = _step.value;\n          //console.log(\'product \' , prd) ;\n          var orderobj = {}; //cast to order \n\n          orderobj.productname = prd.product;\n\n          var _iterator2 = _createForOfIteratorHelper(mystore),\n              _step2;\n\n          try {\n            for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n              var prdstore = _step2.value;\n              console.log("prdstore.productname === prd.product ", prdstore.id === prd.product);\n\n              if (prdstore.product === prd.productname) {\n                orderobj.productid = prdstore.id;\n                orderobj.vendorname = prdstore.vendorname;\n              }\n            }\n          } catch (err) {\n            _iterator2.e(err);\n          } finally {\n            _iterator2.f();\n          }\n\n          orderobj.price = prd.price;\n          orderobj.ordid = "", orderobj.quantity = prd.quantity;\n          orderobj.ordstatus = "";\n          orderobj.town = form.town;\n          orderobj.state = form.state;\n          orderobj.total = prd.total;\n          orderobj.tax = prd.tax;\n          orderobj.country = form.country;\n          orderobj.address = form.address;\n          orderobj.firstname = form.firstname;\n          orderobj.lastname = form.lastname;\n          orderobj.email = form.email;\n          orderobj.paymentmethod = form.paymentgroup;\n          orderobj.paymentstatus = "";\n          orderobj.phone = form.phone;\n          orderobj.overalltotal = form.total;\n          orderobj.postalcode = form.postalcode; // orderobj.request_order_id = ""; // this shows if they are of the same order group\n\n          orderobj.userid = localStorage.getItem(\'ack\');\n\n          if (form.shipping === \'on\') {\n            orderobj.shipping = true;\n          } else {\n            orderobj.shipping = false;\n          }\n\n          if (form.localpickup === \'on\') {\n            orderobj.localpickup = true;\n          } else {\n            orderobj.localpickup = false;\n          }\n\n          orderarray.push(orderobj);\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n\n      var totalorder = {\n        "order": orderarray\n      };\n      setTimeout(function () {\n        //console.log(\'totalorder\', JSON.stringify(totalorder.order), \'total\',parseFloat(form.total));\n        console.log(\'total\', parseFloat(form.total));\n        var content = (0,_tsbackendscript_ajaxfunctioncall__WEBPACK_IMPORTED_MODULE_8__.contenttypewithtoken)(localStorage.getItem(\'customertoken\'));\n        (0,_tsbackendscript_ajaxfunctioncall__WEBPACK_IMPORTED_MODULE_8__.setajax)(\'json\', "".concat(_url__WEBPACK_IMPORTED_MODULE_6__.backendurl, "/order/saveorder"), \'post\', JSON.stringify(totalorder.order), function (response) {\n          // process the response\n          // console.log(\'response and dispatch event \', response);\n          //  console.log(\'localstorage \',localStorage);\n          // send the event \n          var uriencode = encodeURIComponent("[".concat(localStorage.getItem(\'vendorname\'), "]")); // let datarray   = new Array(${localStorage.getItem(\'vendorname\')}) ;\n\n          (0,_tsbackendscript_ajaxfunctioncall__WEBPACK_IMPORTED_MODULE_8__.setajax)(\'\', "".concat(_url__WEBPACK_IMPORTED_MODULE_6__.backendurl, "/dispatchEvent?vendorname=").concat(uriencode, "&freshNews=").concat(localStorage.getItem(\'username\')), \'get\', "", function (response) {// process the response\n            // console.log(\'response \', response); \n            // subscribetoevent(new EventSource(`${backendurl}/subscribe?vendorname=${localStorage.getItem(\'vendorname\')}&freshNews=\'This is me\'`),\'vendornews\');\n          }, function () {}, content);\n          makePayment(JSON.stringify(totalorder), generateId(), parseFloat(form.total), "Pls Fill in your Card Info", "".concat(_url__WEBPACK_IMPORTED_MODULE_6__.backendurl, "/jetstore/crista-digital.jpg"), "JTL Platform", "");\n        }, function () {}, content);\n      }, 1500);\n    }, function () {\n      alertify.error(\'cancelled\');\n    });\n  }\n}); //create review \n\n$(\'#submitreview\').on(\'click\', function (e) {\n  e.preventDefault(); // alert(\'review\');\n\n  Swal.fire({\n    icon: \'question\',\n    text: \'Do you want to add Review ?\',\n    showCancelButton: true,\n    allowOutsideClick: false\n  }).then(function (result) {\n    if (result.isConfirmed) {\n      (0,_miscellaneous__WEBPACK_IMPORTED_MODULE_7__.invalidatetoken2)(jwt_decode, \'customertoken\'); // check token\n\n      var form = new FormData(document.getElementById(\'formreview\'));\n      form.append("custid", localStorage.getItem(\'ack\'));\n      var id = JSON.parse(sessionStorage.getItem(\'product\')).id; // session created for product\n\n      var jsonform = Object.fromEntries(form);\n      jsonform.productid = id;\n      console.log(\'ack\', localStorage.getItem(\'ack\'), \' jsonform \', jsonform);\n      fetch("".concat(_url__WEBPACK_IMPORTED_MODULE_6__.backendurl, "/review"), {\n        method: \'post\',\n        credentials: \'same-origin\',\n        headers: {\n          \'Content-Type\': \'application/json\',\n          \'Authorization\': \'Bearer \' + localStorage.getItem(\'customertoken\')\n        },\n        body: JSON.stringify(jsonform)\n      }).then(function (r) {\n        console.log(\'response\', r, r.clone().text());\n        return r.text();\n      }).then(function (r) {\n        console.log(\'r \', r);\n        $(\'#error\').empty().html(\'<br/><div class="alert alert-danger" style="display:inline-block;"> <span class="glyphicon glyphicon-info-sign"></span> &nbsp; \' + r + \' !</div>\');\n      })["catch"](function (err) {\n        console.log(\'err\', err);\n        $(\'#error\').empty().html(\'<br/><div class="alert alert-danger"> <span class="glyphicon glyphicon-info-sign"></span> &nbsp; \' + "You have neither Registered/Login" + \' !</div>\');\n      });\n    } else {\n      toastr.error(\'cancelled\');\n    }\n  });\n}); //detect duplicates on cart and wishlist\n\nvar mutuallyExcludeWishListForCart = function mutuallyExcludeWishListForCart(store, wishlist, product) {\n  var wishliststore = JSON.parse(sessionStorage.getItem(wishlist)); // to check if there is in wishlist\n\n  console.log(\'wishliststore \', wishliststore);\n  JSON.parse(sessionStorage.getItem(store)).forEach(function (element) {\n    //console.log(\' element \', element);\n    if (wishliststore !== undefined && wishliststore !== null) {\n      // if it is not empty\n      wishliststore = wishliststore.filter(function (e) {\n        console.log(e.id, element.id);\n\n        if (e.id === element.id) {\n          // remove from db\n          var content = (0,_tsbackendscript_ajaxfunctioncall__WEBPACK_IMPORTED_MODULE_8__.contenttypewithtoken)(localStorage.getItem(\'token\'));\n          (0,_tsbackendscript_ajaxfunctioncall__WEBPACK_IMPORTED_MODULE_8__.setajax)(\'json\', "".concat(_url__WEBPACK_IMPORTED_MODULE_6__.backendurl, "/product/removefromwishlist/").concat(element.id), \'get\', "", function (response) {\n            console.log(\'response\', response);\n          }, function () {}, content);\n        }\n\n        return e.id !== element.id;\n      });\n      console.log(\'setting a new wishliststore json\', wishliststore);\n      sessionStorage.setItem(\'wishlist\', JSON.stringify(wishliststore));\n    }\n\n    console.log(\'new wishliststore set\');\n  } // if (element.id === product.id) { // check duplicate  items\n  // //  console.log(\'duplicate  items\');\n  //  // toastr.error("This item is already in Cart");\n  //   if(wishliststore){ // remove it from wishlist\n  //     var keys  = Object.keys(wishliststore) ;\n  //     console.log(\'keys \',keys) ;\n  //     keys  = keys.filter((e:any)=>{\n  //       console.log(\'e,wishliststore,product\',e,wishliststore.e,product.e) ;\n  //       return wishliststore.e===product.e ;\n  //     }) ;\n  //   console.log(\'filtered keys \',keys[0]) ;\n  //  if(Object.prototype.hasOwnProperty.call(wishliststore,keys[0])){\n  //    console.log(\'deleting .......\') ;\n  //       delete wishliststore.keys[0] ; //from wishlist if present\n  //         }\n  //      }\n  //   }\n  );\n}; //add to cart logic\n\n\nvar storagearray = new Set(); // to store object\n\n$(\'#addcart\').on(\'click\', function (e) {\n  // e.preventDefault() ;\n  // alert(localStorage.getItem(\'customertoken\')+"2222") ;\n  //alert(\'view the cart\') ;\n  // return ;\n  var token = localStorage.getItem(\'customertoken\');\n  console.log("token " + token);\n\n  if (token !== null) {\n    (0,_miscellaneous__WEBPACK_IMPORTED_MODULE_7__.invalidateSession)(jwt_decode, \'customertoken\');\n    var product = JSON.parse(sessionStorage.getItem(\'product\'));\n    var inputnumber = $(\'#input-number\').val();\n    product.productquantity = inputnumber; //  console.log(\'cart product \', product.categoryid, \' and \', product);\n    //alert(inputnumber) ;\n    // return ;\n\n    var content = (0,_tsbackendscript_ajaxfunctioncall__WEBPACK_IMPORTED_MODULE_8__.contenttypewithtoken)(localStorage.getItem(\'customertoken\'));\n    (0,_tsbackendscript_ajaxfunctioncall__WEBPACK_IMPORTED_MODULE_8__.setajax)(\'json\', "".concat(_url__WEBPACK_IMPORTED_MODULE_6__.backendurl, "/product/displayandloadsimilaritems/").concat(product.id), \'get\', "", function (r) {\n      // process the response\n      console.log(\'adding to cart \', \'res\', r);\n      console.log(\' r \', r);\n      $(\'#producttype\').text(product.productname);\n      $(\'#productimage\').prop(\'src\', "".concat(_url__WEBPACK_IMPORTED_MODULE_6__.backendurl, "/jetstore/").concat(product.imageurl));\n      var builder = new StringBuilder(); //sessionStorage.setItem(\'store\', JSON.stringify(Array.from(storagearray.add(product))));\n\n      if (Array.isArray(r)) {\n        r.forEach(function (element) {\n          console.log(\'productname \', element.productname);\n          builder.append("\\n         <div class=\\"product-box col-sm-3 col-6\\">\\n               <div class=\\"img-wrapper\\">\\n                   <div class=\\"front\\">\\n                       <a href=\\"/jetcart/productpage\\" onclick=\\"loadprd(\'".concat(element.id, "\',\'/jetcart/productpage\')\\">\\n                           <img src=\\"").concat(_url__WEBPACK_IMPORTED_MODULE_6__.backendurl, "/jetstore/").concat(element.imageurl, "\\"\\n                               class=\\"img-fluid blur-up lazyload mb-1\\"\\n                               alt=\\"cotton top\\">\\n                       </a>\\n                   </div>\\n                   <div class=\\"product-detail\\">\\n                       <h6><a href=\\"#\\"><span>").concat(element.productname, "</span></a></h6>\\n                       <h4><span>N").concat(parseFloat(element.productprice).toFixed(2).replace(/\\d(?=(\\d{3})+\\.)/g, \'$&,\'), "</span></h4>\\n                   </div>\\n               </div>\\n             </div>\\n             "));\n        });\n      }\n\n      $(\'#upsell_product\').empty().html(builder.toString());\n      console.log(\'calling the modal \');\n      $(\'#addtocart2\').modal(\'show\');\n      console.log(\'before if \', JSON.parse(sessionStorage.getItem(\'store\')));\n      var store = JSON.parse(sessionStorage.getItem(\'store\'));\n\n      if (store === null || store.includes(null)) {\n        // check for the first time\n        // addtodb\n        // sessionStorage.setItem(\'store\', JSON.stringify(Array.from(storagearray.add(product))));\n        var _content3 = (0,_tsbackendscript_ajaxfunctioncall__WEBPACK_IMPORTED_MODULE_8__.contenttypewithtoken)(localStorage.getItem(\'customertoken\'));\n\n        console.log(\'content \', _content3, \' product \', product);\n        console.log(\'first store \', JSON.parse(sessionStorage.getItem(\'store\')));\n        (0,_tsbackendscript_ajaxfunctioncall__WEBPACK_IMPORTED_MODULE_8__.setajax)(\'text\', "".concat(_url__WEBPACK_IMPORTED_MODULE_6__.backendurl, "/product/addcartlist/").concat(product.id, "/").concat(localStorage.getItem(\'ack\'), "/").concat(product.productquantity), \'get\', "", function (response) {\n          // process the response\n          console.log(\'response \', response);\n          sessionStorage.setItem(\'store\', JSON.stringify(Array.from(storagearray.add(product))));\n          console.log(\'going to process exclusive\');\n          mutuallyExcludeWishListForCart(\'store\', \'wishlist\', product);\n          console.log(\'finish processing exclusive\'); //toastr.success(\'\') ;\n        }, function () {}, _content3); // return ;\n      }\n\n      if (store !== null && store.length > 0) {\n        JSON.parse(sessionStorage.getItem(\'store\')).forEach(function (element) {\n          console.log(\' element \', element);\n\n          if (element.id === product.id) {\n            // check duplicate  items\n            console.log(\'duplicate  items\');\n            toastr.error("This item is already in Cart");\n            throw new Error(\'duplicate  item\'); // return;\n          } // also check if it is in db too\n\n        });\n\n        var _store = JSON.parse(sessionStorage.getItem(\'store\'));\n\n        console.log(\' ack \', localStorage.getItem(\'ack\'));\n        console.log(\' store to cart \', _store);\n\n        var _content4 = (0,_tsbackendscript_ajaxfunctioncall__WEBPACK_IMPORTED_MODULE_8__.contenttypewithtoken)(localStorage.getItem(\'customertoken\'));\n\n        console.log(\'content \', _content4, \' product \', product);\n        (0,_tsbackendscript_ajaxfunctioncall__WEBPACK_IMPORTED_MODULE_8__.setajax)(\'text\', "".concat(_url__WEBPACK_IMPORTED_MODULE_6__.backendurl, "/product/addcartlist/").concat(product.id, "/").concat(localStorage.getItem(\'ack\'), "/").concat(product.productquantity), \'get\', "", function (response) {\n          // process the response\n          console.log(\'response store not empty \', response);\n          console.log(\' product \', product);\n\n          _store.push(product);\n\n          sessionStorage.setItem(\'store\', JSON.stringify(_store));\n          mutuallyExcludeWishListForCart(\'store\', \'wishlist\', product);\n          console.log(\'next store \', JSON.parse(sessionStorage.getItem(\'store\')));\n        }, function () {}, _content4);\n      }\n    }, function () {}, content);\n  } else {\n    // toastr.error("Please login to add to cart") ;\n    // $(secondialog(()=>{\n    //   return (`<h5 class="modal-title">Account Management</h5>`) ;\n    // },()=>{\n    //   return (`<div class="row form-group">\n    //     <button class="btn btn-secondary" type="button" data-dismiss="modal">Close</button>\n    //     <button class="btn btn-primary" type="button" id="redirecttologin">Login</button>\n    //   </div>`)\n    // },()=>{\n    //   return (\n    //     ""\n    //   );\n    // })).insertAfter(".product-description"); \n    $((0,_lithtmlscript__WEBPACK_IMPORTED_MODULE_5__.secondialog)(function () {\n      return "<div class=\\"row\\">\\n        <div class=\\"col-md-5\\">\\n      <button class=\\"btn btn-link\\" id=\\"redirecttoreg\\">Create Account</button>\\n        </div>\\n        <div class=\\"col-md-6\\">\\n      <button class=\\"btn btn-link\\" id=\\"redirecttologin\\">Login to your Account</button>\\n       </div>\\n      </div>";\n    }, function () {\n      return "<h5 class=\\"modal-title\\">Account Management</h5>";\n    }, function () {\n      return "";\n    })).insertAfter(".product-description");\n    $(\'#exampleModal\').modal(\'show\'); //show modal\n  }\n}); //customer access into the system\n\n$(document).on("click", "#redirecttologin", function () {\n  (function () {\n    $(\'#exampleModal\').modal(\'hide\');\n    setTimeout(function () {\n      $(\'#exampleModal\').remove();\n      var id = JSON.parse(sessionStorage.getItem(\'product\')).productname;\n      window.location.href = \'./custlogin?custlogin=\' + btoa(unescape(id));\n    }, 800);\n  })();\n});\n$(document).on("click", "#redirecttoreg", function () {\n  (function () {\n    $(\'#exampleModal\').modal(\'hide\');\n    setTimeout(function () {\n      $(\'#exampleModal\').remove(); //let coursename= decodeURIComponent(escape(window.atob(params.get(\'csn\'))));\n      // ${btoa(unescape(encodeURIComponent(id)))}\n\n      var id = JSON.parse(sessionStorage.getItem(\'product\')).productname;\n      window.location.href = \'./register?prd=\' + btoa(unescape(id));\n    }, 800);\n  })();\n}); //customer  login\n\n$(\'#custlogin\').on(\'click\', function () {\n  // alert() ;\n  Swal.fire({\n    icon: \'info\',\n    text: \'Do you want to login ?\',\n    showCancelButton: true,\n    allowOutsideClick: false\n  }).then(function (result) {\n    if (result.isConfirmed) {\n      var form = document.getElementById(\'custloginform\');\n      var formdata = new FormData(form);\n      console.log(\'username \', formdata.get(\'username\') === \'\');\n\n      if (formdata.get(\'username\') === \'\') {\n        toastr.error(\'Please fill the username field\');\n        throw new Error(\'login error\');\n      } else if (formdata.get("password") === \'\') {\n        toastr.error(\'Please fill the password field\');\n        throw new Error(\'login error\');\n      } else {\n        (0,_tsbackendscript_ajaxfunctioncall__WEBPACK_IMPORTED_MODULE_8__.setajax)(\'text\', "".concat(_url__WEBPACK_IMPORTED_MODULE_6__.loginurl, "/api/login"), \'post\', JSON.stringify({\n          username: formdata.get(\'username\'),\n          password: formdata.get("password")\n        }), function (response) {\n          // process the response\n          console.log(\'response store not empty \', response);\n          Swal.fire({\n            icon: \'info\',\n            text: \'Pls proceed to cart\',\n            showCancelButton: false,\n            allowOutsideClick: false\n          }).then(function (result) {\n            if (result.isConfirmed) {\n              var _localStorage$getItem2;\n\n              console.log(\'response store not empty \', response);\n              localStorage.setItem("customertoken", response);\n              var decoded = jwt_decode(response); // console.log(decoded, \'exp \', decoded[\'exp\'], \'sub \', decoded.sub, \'vendorname \', decoded.vendorname, \' ack \', decoded.ack);\n\n              var now = Date.now().valueOf() / 1000;\n              var tokenexp = parseInt(decoded.exp);\n              console.log(decoded.username); // localStorage.setItem(\'vendorname\', decoded.vendorname);\n\n              localStorage.setItem(\'ack\', decoded.ack);\n              localStorage.setItem(\'username\', decoded.username);\n              localStorage.setItem("vendorname", decoded.vendorname);\n              var login = document.querySelector(\'.login\');\n              login.classList.add("alert");\n              login.classList.add("alert-success");\n              login.classList.add("alert-dismissible");\n              login.classList.add("fade");\n              login.classList.add("show");\n              $(\'.login\').empty().html("<strong>Welcome ".concat((_localStorage$getItem2 = localStorage.getItem(\'username\')) === null || _localStorage$getItem2 === void 0 ? void 0 : _localStorage$getItem2.toUpperCase(), " &nbsp;</strong> Logged in.\\n              <button type=\\"button\\" class=\\"close\\" data-dismiss=\\"alert\\" aria-label=\\"Close\\">\\n                <span aria-hidden=\\"true\\">&times;</span></button>"));\n              setTimeout(function () {\n                // redirect back to the page\n                //sessionStorage.clear() ;\n                // sessionStorage.setItem(\'store\',JSON.stringify(JSON.parse(sessionStorage.getItem(\'product\') as string))) ;\n                // console.log() ;\n                window.location.href = \'./productpage\';\n              }, 2000);\n            }\n          });\n        }, function () {}, _tsbackendscript_ajaxfunctioncall__WEBPACK_IMPORTED_MODULE_8__.contenttype);\n      }\n    } else {\n      toastr.error(\'Attempt cancelled\');\n    }\n  });\n}); //load  pr0ductpage info\n\nvar fillproductinfo = function fillproductinfo(product, pagelink) {\n  if ($.isEmptyObject(product)) {\n    // incase no product in product session \n    $(\'#pagetitle\').empty().html("<h2>Nil</h2>");\n    $(\'#pagetype\').empty().html("<li class=\\"breadcrumb-item\\"><a href=\\"".concat(pagelink, "\\">Home</a></li>\\n   <li class=\\"breadcrumb-item active\\" aria-current=\\"page\\">Nil</li>"));\n    $(\'#cat\').text("Nil");\n    $("#top-home").empty().html("Nil");\n    $(\'#top-profile\').empty().html("Nil"); //  $(\'.myimage\').prop(\'src\',`${backendurl}/jetstore/${product.imageurl}`) ;\n    // $(\'.input-number\').val(`${product}`) ;\n\n    $(\'#prdetails\').empty().html("\\n        <h6 class=\\"product-title\\">product details</h6>\\n        <p>Nil<p>\\n        <p><strong> Product Name </strong> &nbsp;&nbsp;Nil</p>\\n        <p><strong>Product Size</strong> &nbsp;&nbsp;Nil</p>\\n        <p><strong> Product Status</strong> &nbsp;&nbsp;Nil</p>\\n        <p><strong>Product Price</strong> &nbsp;&nbsp;Nil</p>\\n        <p><strong>Product Tax </strong> &nbsp;&nbsp;Nil%</p>\\n        <p><strong>Product Model </strong> &nbsp;&nbsp;Nil</p>\\n        <p><strong>Vendor in Charge </strong> &nbsp;&nbsp;Nil</p>\\n        ");\n    return;\n  }\n\n  $(\'#pagetitle\').empty().html("<h2>".concat(product.categoryid, "</h2>"));\n  $(\'#pagetype\').empty().html("<li class=\\"breadcrumb-item\\"><a href=\\"".concat(pagelink, "\\">Home</a></li>\\n <li class=\\"breadcrumb-item active\\" aria-current=\\"page\\">").concat(product.categoryid, "</li>"));\n  $(\'#cat\').text("".concat(product.categoryid));\n  $("#top-home").empty().html("".concat(product.proddescription));\n  $(\'#top-profile\').empty().html("".concat(product.shortsummary));\n  $(\'.myimage\').prop(\'src\', "".concat(_url__WEBPACK_IMPORTED_MODULE_6__.backendurl, "/jetstore/").concat(product.imageurl)); // $(\'.input-number\').val(`${product}`) ;\n\n  $(\'#prdetails\').empty().html("\\n      <h6 class=\\"product-title\\">product details</h6>\\n      <p>".concat(product.shortsummary, "<p>\\n      <p><strong> Product Name </strong> &nbsp;&nbsp;").concat(product.productname, "</p>\\n      <p><strong>Product Size</strong> &nbsp;&nbsp;").concat(product.size, "</p>\\n      <p><strong> Product Status</strong> &nbsp;&nbsp;").concat(product.productstatus, "</p>\\n      <p><strong>Product Price</strong> &nbsp;&nbsp;").concat(product.productprice, "</p>\\n      <p><strong>Product Tax </strong> &nbsp;&nbsp;").concat(product.tax, "%</p>\\n      <p><strong>Product Model </strong> &nbsp;&nbsp;").concat(product.model, "</p>\\n      <p><strong>Vendor in Charge </strong> &nbsp;&nbsp;").concat(product.vendorname, "</p>\\n      <a style=\\"color:blue;\\" target=\\"_\\" href=\\"./chat\\"><strong>Chat with </strong>the Product Owner</strong></a>\\n      ")); //to wishlist button\n\n  $("#wishlist-btn").empty().html("\\n  <a href=\\"javascript:void(0)\\" class=\\"btn-link\\" onclick=\\"addtocartforwishlist(".concat(product.id, ")\\">\\n  <i class=\\"fa fa-heart\\"></i><span class=\\"title-font\\">Add To\\n    WishList</span>\\n         </a>\\n         "));\n};\n\nvar usermap = new Map(); // the menu \n\n$(\'.multimenu2\').on(\'click\', function (e) {\n  e.preventDefault(); //alert(e.target.innerText) ;\n  //console.log(\'the event \',e.target.innerText) ;\n\n  var encoder = encodeURIComponent(e.target.innerText);\n  window.location.href = "../jetcart/productbycategory?product=".concat(encoder);\n});\n$(\'#removeitemfromcart\').on(\'click\', function (e) {\n  alert(\'seen\');\n});\nvar socket = null;\nvar stompClient = null; //pay on delivery\n\n$(\'#payment-2\').on(\'click\', function (e) {\n  $((0,_lithtmlscript__WEBPACK_IMPORTED_MODULE_5__.dialog)("", "", "")).insertAfter(".upper-box");\n  $(\'.modal-body\').empty().html(function () {\n    return dom("table", {\n      className: "table table-striped"\n    }, dom("thead", null, dom("tr", null, dom("th", {\n      scope: "col"\n    }, "#"), dom("th", {\n      scope: "col"\n    }, "Company Name"), dom("th", {\n      scope: "col"\n    }, "Bank Name"), dom("th", {\n      scope: "col"\n    }, "Account"))), dom("tbody", null, dom("tr", null, dom("th", {\n      scope: "row"\n    }, "1"), dom("td", null, "Cristal Digital Limited"), dom("td", null, "Access Bank"), dom("td", null, "11111111111111"))));\n  }());\n  $(".modal-footer").empty().html(function () {\n    function close(e) {\n      e.preventDefault();\n      $(\'#exampleModal\').modal(\'hide\');\n      setTimeout(function () {\n        $(\'#exampleModal\').remove();\n      }, 800);\n    }\n\n    return dom("div", null, dom("button", {\n      className: "btn btn-secondary",\n      type: "button",\n      "data-dismiss": "modal",\n      onClick: function onClick(e) {\n        return close(e);\n      }\n    }, "Close"));\n  }());\n  $(\'#exampleModal\').modal(\'show\'); //show modal\n}); //submit contact form\n// function returnToPreviousPage(e:any){\n//   e = e || window.event;\n//   console.log(e) ;\n//   // validation code\n//   alert(\'contact\') ;\n//   // if invalid\n//   if (e.preventDefault) {\n//     e.preventDefault();\n//   } else {\n//     e.returnValue = false;\n//   }\n// }\n// var submitcontact2 = document.getElementById("submitcontact2") as HTMLButtonElement;\n// if (submitcontact2.addEventListener) {\n//   submitcontact2.addEventListener("click", returnToPreviousPage);\n// } else {\n//   //submitcontact2.attachEvent("onclick", returnToPreviousPage);\n// }\n// $(document).on(\'submit\', \'submitcontact2\', function(e:any){\n//   e.preventDefault();\n//   //your code goes here\n//   alert(\'contact\') ;\n//   //100% works\n//   return;\n// });\n//make payment \n\nfunction makePayment(itemsbought, txref, amount, description, imagelink, title, custdata) {\n  console.log(\'itemsbought \', JSON.parse(itemsbought), \' txref \', txref);\n  console.log(\'amount \', amount);\n  console.log(\'description \', description);\n  console.log(\'imagelink \', imagelink);\n  console.log(\'title \', title);\n  console.log(\'custdata \', custdata);\n  var items = JSON.parse(itemsbought);\n  console.log(\'items \', parseInt(items.order[0].overalltotal.substring(1).replace(/,/g, ""))); //validate the form \n\n  var form = JSON.parse($(\'#regform\').jform());\n  console.log(\' form \', form, form.firstname);\n\n  if (form.firstname === "" || form.firstname === null) {\n    toastr.error(\'firstname cannot be empty\');\n    return;\n  }\n\n  if (form.email === "" || form.email === null) {\n    toastr.error(\'Email cannot be empty\');\n    return;\n  }\n\n  if (form.lastname === "" || form.lastname === null) {\n    toastr.error(\'lastname cannot be empty\');\n    return;\n  }\n\n  if (form.state === "" || form.state === null) {\n    toastr.error(\'state cannot be empty\');\n    return;\n  }\n\n  if (form.city === "" || form.city === null) {\n    toastr.error(\'city cannot be empty\');\n    return;\n  }\n\n  if (form.address === "" || form.address === null) {\n    toastr.error(\'Address cannot be empty\');\n    return;\n  }\n\n  if (form.postalcode === "" || form.postalcode === null) {\n    toastr.error(\'Postal code cannot be empty\');\n    return;\n  }\n\n  if (form.phone === "" || form.phone === null) {\n    toastr.error(\'Phone cannot be empty\');\n    return;\n  }\n\n  if (form.password === "" || form.password === null) {\n    toastr.error(\'Password cannot be empty\');\n    return;\n  } //console.log(\'itemsbought\',itemsbought);\n\n\n  var modal = FlutterwaveCheckout({\n    public_key: "FLWPUBK_TEST-739dbfa5df97cb97b1cfe74e51c4eb7e-X",\n    tx_ref: txref,\n    amount: parseInt(items.order[0].overalltotal.substring(1).replace(/,/g, "")),\n    currency: "NGN",\n    payment_options: "card,ussd",\n    callback: function callback(payment) {\n      // Send AJAX verification request to backend\n      console.log(\'payment \', payment);\n      verifyTransactionOnBackend(payment, itemsbought);\n    },\n    onclose: function onclose(incomplete) {\n      console.log(\'modal object under close \', modal, \' complete \', incomplete); // modal.close() ;\n      // if (incomplete || window.verified === false) {\n      //   (document.querySelector("#payment-failed") as HTMLInputElement).style.display = \'block\';\n      // } else {\n      //   (document.querySelector("form") as HTMLFormElement).style.display = \'none\';\n      //   if (window.verified === true) {\n      //     (document.querySelector("#payment-success") as HTMLInputElement).style.display = \'block\';\n      //   } else {\n      //     (document.querySelector("#payment-pending") as HTMLInputElement).style.display = \'block\';\n      //   }\n      // }\n    },\n    customer: {\n      email: form.email,\n      phone_number: form.phone,\n      name: form.firstname + \'\' + form.lastname\n    },\n    customizations: {\n      title: title,\n      description: description + "<br/>" + amount,\n      logo: imagelink\n    }\n  });\n  console.log(\'modal object \', modal);\n} //genrate randon random  ids \n\n\nfunction uid() {\n  var a = new Uint32Array(3);\n  window.crypto.getRandomValues(a);\n  return (performance.now().toString(36) + Array.from(a).map(function (A) {\n    return A.toString(36);\n  }).join("")).replace(/\\./g, "");\n}\n\nfunction generateId() {\n  return Math.random().toString(36).substring(2) + new Date().getTime().toString(36);\n}\n\nfunction verifyTransactionOnBackend(transactionId, itemsbought) {\n  // Let\'s just pretend the request was successful\n  console.log(\'after transaction for backends calls \', transactionId);\n  setTimeout(function () {\n    window.verified = true;\n    var content = (0,_tsbackendscript_ajaxfunctioncall__WEBPACK_IMPORTED_MODULE_8__.contenttypewithtoken)(localStorage.getItem(\'customertoken\'));\n    (0,_tsbackendscript_ajaxfunctioncall__WEBPACK_IMPORTED_MODULE_8__.setajax)(\'json\', "".concat(_url__WEBPACK_IMPORTED_MODULE_6__.backendurl, "/order/create"), \'post\', itemsbought, function (r) {\n      console.log(\'r \', r); // process the response\n      //  makePayment(itemsbought:JSON,txref:string,amount:string,description:string,imagelink:string,title:string,custdata:string) \n    }, function () {}, content);\n  }, 200);\n} // send contact form\n\n\n$(\'#submitcontact2\').on(\'click\', function (e) {\n  Swal.fire({\n    icon: \'info\',\n    text: \'Do you really want to contact us ?\',\n    showCancelButton: false,\n    allowOutsideClick: false\n  }).then(function (result) {\n    if (result.isConfirmed) {\n      var submitcontact2 = new FormData(document.getElementById(\'contact\')); //JSON.parse($(\'#contact\').jform());\n\n      console.log(\' submitcontact2 \', submitcontact2.get(\'email\'), Object.fromEntries(submitcontact2));\n      (0,_tsbackendscript_ajaxfunctioncall__WEBPACK_IMPORTED_MODULE_8__.setajax)(\'json\', "".concat(_url__WEBPACK_IMPORTED_MODULE_6__.backendurl, "/customer/contact"), \'post\', JSON.stringify(Object.fromEntries(submitcontact2)), function (response) {\n        console.log(\'response \', response);\n      }, function () {}, _tsbackendscript_ajaxfunctioncall__WEBPACK_IMPORTED_MODULE_8__.contenttype);\n    }\n  });\n});\n\nvar subscribetoevent = function subscribetoevent(eventSource, evtype) {\n  // var eventSource = new EventSource(url);\n  // var eventSource = new EventSource(url);\n  eventSource.addEventListener(evtype, function (event) {\n    // if (event.data) {\n    console.log(\'from dispatch event \', event.data);\n    toastr.success(\'message sent successfully\');\n    alertify.success(\'Ok\');\n    eventSource.close(); // }\n  }); // for error \n\n  eventSource.addEventListener("error", function (event) {\n    if (event.currentTarget.readyState === EventSource.CLOSED) {} else {\n      eventSource.close();\n    }\n  }); // window.onbeforeunload = function () {\n  //   eventSource.close();\n  // }\n  // console.log(\'closing  connection .....\') ;\n  // eventSource.close() ;\n  // return eventSource ;\n};\n\nvar pagesonload = function pagesonload(url) {\n  //server events handling connection\n  console.log(\'calling events connection subscriber ....\'); // subscribetoevent(new EventSource(`${backendurl}/subscribe`), \'latestNews\');\n  // subscribetoevent(new EventSource(`${backendurl}/eventbyuser?userid=${localStorage.getItem(\'ack\')}`), \'usernews\');\n  //subscribetoevent(new EventSource(`${backendurl}/subscribe?vendorname=${localStorage.getItem(\'vendorname\')}`),\'vendornews\');\n\n  var cartstore = JSON.parse(sessionStorage.getItem(\'store\'));\n  console.log(\'before cartstore \', cartstore); // true) ;\n\n  if (cartstore !== null && !cartstore.includes(null)) {\n    // console.log(\' cartsotre \',cartstore.length,cartstore) ;\n    var b = new StringBuilder();\n    cartstore.forEach(function (res) {\n      //console.log(\'res \',res) ;\n      b.append("\\n                      <li>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\"media\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<a href=\\"#\\"><img class=\\"mr-3\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tsrc=\\"".concat(_url__WEBPACK_IMPORTED_MODULE_6__.backendurl, "/jetstore/").concat(res.imageurl, "\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\talt=\\"Generic placeholder image\\"></a>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\"media-body\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<a href=\\"#\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<h4>").concat(res.productname, "</h4>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</a>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<h4>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span>").concat(res.productquantity, " x ").concat(parseFloat(res.productprice).toFixed(2).replace(/\\d(?=(\\d{3})+\\.)/g, \'$&,\'), "</span>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</h4>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\"close-circle\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<a href=\\"#\\"><i class=\\"fa fa-times\\" aria-hidden=\\"true\\"></i></a>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</li>\\n           "));\n    });\n    $(\'#cartsummary\').empty().html(b.toString());\n  } else {\n    $(\'#cartsummary\').empty().html("<li>empty cart</li>");\n  }\n\n  switch (url) {\n    case "".concat(_url__WEBPACK_IMPORTED_MODULE_6__.loginurl, "/taxes"):\n      // for taxes\n      var taxesdata = [{\n        name: \'id\',\n        type: \'hidden\',\n        css: \'hide\'\n      }, {\n        name: "taxdetail",\n        type: "text",\n        align: "left",\n        width: 80,\n        validate: function validate(value) {\n          // if (value > 0) {\n          return true; //}\n        }\n      }, {\n        name: "taxschedule",\n        align: "left",\n        type: "text",\n        width: 50 // itemTemplate: function (value: any, item: any) {\n        //   console.log(\' value \', value, \' item \', item);\n        // },\n\n      }, {\n        name: "totaltaxamount",\n        align: "left",\n        type: "text",\n        width: 50 // itemTemplate: function (value: any, item: any) {\n        //   console.log(\' value \', value, \' item \', item);\n        // },\n\n      }, {\n        name: "taxrate",\n        align: "left",\n        type: "text",\n        width: 50 // itemTemplate: function (value: any, item: any) {\n        //   console.log(\' value \', value, \' item \', item);\n        // },\n\n      }, {\n        type: "control"\n      }];\n      (0,_tables__WEBPACK_IMPORTED_MODULE_9__.createtables2)("".concat(_url__WEBPACK_IMPORTED_MODULE_6__.backendurl, "/taxes/updatetax"), localStorage.getItem(\'token\'), taxesdata, true);\n      break;\n\n    case "".concat(_url__WEBPACK_IMPORTED_MODULE_6__.loginurl, "/jetcart/index"):\n      //load  images \n      searchFiter2();\n      searchNewArrivalFilter();\n      searchFeaturedFilter(); // load market products\n\n      searchandloadmarketproducts();\n      break;\n\n    case "".concat(_url__WEBPACK_IMPORTED_MODULE_6__.loginurl, "/jetcart/chat"):\n      if (localStorage.getItem(\'customertoken\')) {\n        (function () {\n          // invalidateSessionAndToken(jwt_decode,\'customertoken\') ;\n          // alert() ;\n          //  let myWebSocket = new MyWebscoket(`ws://localhost:1023/ws`);\n          // let webSocket:WebSocket = new WebSocket(`ws://localhost:1023/ws`);\n          // webSocket.onopen = function (evt:any) {\n          //   console.log("onopen connected ", evt.data);\n          // }\n          // webSocket.onmessage = function (evt) {\n          //   console.log(\'on message\', evt.data);\n          // };\n          // webSocket.onerror = function (evt:any) {\n          //   console.log(\'onerror \', evt.data);\n          // };\n          socket = new SockJS("".concat(sockjsurl, "/ws"));\n          stompClient = Stomp.over(socket);\n          stompClient.connect({}, function () {\n            stompClient.subscribe(\'/chatroom/public\', _tsbackendscript_ajaxfunctioncall__WEBPACK_IMPORTED_MODULE_8__.onMessageReceived); //dispatch event before subscribing \n\n            var content = (0,_tsbackendscript_ajaxfunctioncall__WEBPACK_IMPORTED_MODULE_8__.contenttypewithtoken)(localStorage.getItem(\'customertoken\'));\n            var uriencode = encodeURIComponent("[".concat(localStorage.getItem(\'vendorname\'), "]"));\n            (0,_tsbackendscript_ajaxfunctioncall__WEBPACK_IMPORTED_MODULE_8__.setajax)(\'\', "".concat(_url__WEBPACK_IMPORTED_MODULE_6__.backendurl, "/dispatchEvent?vendorname=").concat(uriencode, "&freshNews=").concat(localStorage.getItem(\'username\')), \'get\', "", function (response) {\n              // process the response\n              console.log(\'response \', response);\n            }, function () {}, content);\n            var chatMessage = {\n              senderName: localStorage.getItem(\'username\'),\n              // receiverName:usermap.get(\'receiverName\')!==undefined?usermap.get(\'receiverName\'):"",\n              message: "",\n              status: "JOIN"\n            };\n            stompClient.send("/app/message", {}, JSON.stringify(chatMessage));\n            stompClient.subscribe(\'/user/\' + localStorage.getItem(\'username\') + \'/private\', _tsbackendscript_ajaxfunctioncall__WEBPACK_IMPORTED_MODULE_8__.onPrivateMessage);\n          }, function () {\n            console.log("unable to connect");\n          });\n        })();\n\n        $(\'#sendbtn\').on(\'click\', function (e) {\n          e.preventDefault();\n          console.log($(\'#chatmsg\').val());\n          var chatMessage = {\n            senderName: localStorage.getItem(\'username\'),\n            receiverName: localStorage.getItem(\'vendorname\'),\n            message: $(\'#chatmsg\').val(),\n            status: "MESSAGE"\n          };\n          $(\'#msgarea\').append("<p style=\\"color:blue\\"><i>".concat($(\'#chatmsg\').val(), "</i></p>"));\n          $(\'#chatmsg\').val(\'\'); //(document.getElementById(\'msgarea\') as HTMLUListElement).scrollTop =  (document.getElementById(\'msgarea\') as HTMLUListElement).scrollHeight;\n\n          stompClient.send("/app/private-message", {}, JSON.stringify(chatMessage));\n        });\n      } else {\n        alert(\'Pls login to access\');\n        localStorage.clear;\n        window.location.href = \'./index\';\n      }\n\n      break;\n\n    case "".concat(_url__WEBPACK_IMPORTED_MODULE_6__.loginurl, "/jetcart/checkout"):\n      // check user\'s  login \n      var id = localStorage.getItem(\'ack\');\n      console.log("id ", id);\n\n      if (id) {\n        //check if he is logged in\n        (0,_miscellaneous__WEBPACK_IMPORTED_MODULE_7__.invalidateSession)(jwt_decode, \'customertoken\');\n        console.log(\'cart store \', cartstore); //loads countries\n\n        (0,_tsbackendscript_ajaxfunctioncall__WEBPACK_IMPORTED_MODULE_8__.setajax)(\'json\', "https://countriesnow.space/api/v0.1/countries/states", \'get\', "", function (response) {\n          // process the response\n          var countries = response.data.map(function (e) {\n            return "<option value=".concat(e.name, ">").concat(e.name, "</option>");\n          });\n          $(\'#country\').empty().html(countries.join(""));\n        }, function () {}, _tsbackendscript_ajaxfunctioncall__WEBPACK_IMPORTED_MODULE_8__.contenttype);\n        var form = sessionStorage.getItem(\'form\');\n        console.log(\'form \', form);\n\n        if (form) {\n          $("#regform").autofill(JSON.parse(form)); //autofill the  form if session exists \n        } else {\n          // load the form from backend\n          var content = (0,_tsbackendscript_ajaxfunctioncall__WEBPACK_IMPORTED_MODULE_8__.contenttypewithtoken)(localStorage.getItem(\'customertoken\'));\n          (0,_tsbackendscript_ajaxfunctioncall__WEBPACK_IMPORTED_MODULE_8__.setajax)(\'json\', "".concat(_url__WEBPACK_IMPORTED_MODULE_6__.backendurl, "/userdetail/").concat(id), \'get\', "", function (response) {\n            // process the response\n            var phonenumber = response[0].phonenumber;\n\n            var json = _objectSpread({}, response[0]);\n\n            json.phone = phonenumber;\n            delete json.phonenumber; // json = Object.assign({}, array);\n            // json = array.reduce((json, value, key) => { json[key] = value; return json; }, {});\n\n            console.log(\'response from  \', response, \'json\', json);\n            $("#regform").autofill(json);\n          }, function () {}, content);\n        }\n\n        if (cartstore === null || cartstore.includes(null)) {\n          var _content5 = (0,_tsbackendscript_ajaxfunctioncall__WEBPACK_IMPORTED_MODULE_8__.contenttypewithtoken)(localStorage.getItem(\'customertoken\'));\n\n          console.log(\'content \', _content5, "".concat(_url__WEBPACK_IMPORTED_MODULE_6__.backendurl, "/product/loadcartlist/").concat(localStorage.getItem(\'ack\'))); //alert(localStorage.getItem(\'ack\')) ;\n\n          (0,_tsbackendscript_ajaxfunctioncall__WEBPACK_IMPORTED_MODULE_8__.setajax)(\'text\', "".concat(_url__WEBPACK_IMPORTED_MODULE_6__.backendurl, "/product/loadcartlist/").concat(localStorage.getItem(\'ack\')), \'get\', \'\', function (store) {\n            // process the response\n            console.log(\'loaded response \', store);\n\n            if (store.length === 0) {\n              $(\'#cartcheckout\').empty().html("<tr><td>Your cart is empty</td><td></td><td></td><td></td><td></td></tr>");\n            }\n\n            var builder2 = new StringBuilder();\n            store.forEach(function (e) {\n              builder2.append("<tr><td>".concat(e.productname, "</td><td>").concat(parseFloat(e.productquantity).toFixed(2).replace(/\\d(?=(\\d{3})+\\.)/g, \'$&,\'), "</td>\\n              <td><span>N").concat(parseFloat(e.productprice).toFixed(2).replace(/\\d(?=(\\d{3})+\\.)/g, \'$&,\'), "</span></td><td><span>N").concat((parseFloat(e.productprice) * parseFloat(e.productquantity)).toFixed(2).replace(/\\d(?=(\\d{3})+\\.)/g, \'$&,\'), "</span><td><td>").concat(e.tax, "%</td></tr>"));\n            });\n            $(\'#cartcheckout\').empty().html(builder2.toString());\n            var price = store.map(function (res) {\n              return res.productprice * res.productquantity;\n            });\n            console.log(\'totalprice\', price);\n            $(\'#total\').text("N".concat(parseFloat(price.reduce(function (a, b) {\n              return a + b;\n            }, 0.0)).toFixed(2).replace(/\\d(?=(\\d{3})+\\.)/g, \'$&,\')));\n          }, function () {}, _content5);\n          return;\n        } else {\n          var builder2 = new StringBuilder();\n          cartstore.forEach(function (e) {\n            builder2.append("<tr><td>".concat(e.productname, "</td><td>").concat(parseFloat(e.productquantity).toFixed(2).replace(/\\d(?=(\\d{3})+\\.)/g, \'$&,\'), "</td>\\n            <td><span>N").concat(parseFloat(e.productprice).toFixed(2).replace(/\\d(?=(\\d{3})+\\.)/g, \'$&,\'), "</span></td><td><span>N").concat((parseFloat(e.productprice) * parseFloat(e.productquantity)).toFixed(2).replace(/\\d(?=(\\d{3})+\\.)/g, \'$&,\'), "</span><td><td>").concat(e.tax, "%</td></tr>"));\n          });\n          $(\'#cartcheckout\').empty().html(builder2.toString());\n          var price = cartstore.map(function (res) {\n            return res.productprice * res.productquantity;\n          });\n          console.log(\'totalprice\', price);\n          $(\'#total\').text("N".concat(parseFloat(price.reduce(function (a, b) {\n            return a + b;\n          }, 0.0)).toFixed(2).replace(/\\d(?=(\\d{3})+\\.)/g, \'$&,\')));\n        }\n      } else {\n        Swal.fire({\n          icon: \'info\',\n          text: \'Please login\',\n          showCancelButton: false,\n          allowOutsideClick: false\n        }).then(function (result) {\n          if (result.isConfirmed) {}\n        });\n      }\n\n      break;\n\n    case "".concat(_url__WEBPACK_IMPORTED_MODULE_6__.loginurl, "/jetcart/productpage"):\n      var _url = new URL(decodeURIComponent(window.location.href));\n\n      var searchParams = new URLSearchParams(_url.search).get(\'prdinfo\');\n      var product;\n\n      if (searchParams) {\n        (0,_tsbackendscript_ajaxfunctioncall__WEBPACK_IMPORTED_MODULE_8__.processrequest2)("".concat(_url__WEBPACK_IMPORTED_MODULE_6__.backendurl, "/product/display/").concat(searchParams), \'get\', {}, function (r) {\n          product = JSON.parse(r);\n          console.log(\' r \', product, \' searchParams \', searchParams);\n          fillproductinfo(product, "".concat(_url__WEBPACK_IMPORTED_MODULE_6__.loginurl, "/jetcart/productpage"));\n          sessionStorage.setItem(\'product\', JSON.stringify(product));\n        });\n      } else {\n        product = JSON.parse(sessionStorage.getItem(\'product\'));\n        console.log(\' product check \', product, \' searchParams \', searchParams, window.location.href);\n        fillproductinfo(product, "".concat(_url__WEBPACK_IMPORTED_MODULE_6__.loginurl, "/jetcart/productpage"));\n      }\n\n      console.log(\' going to load others \', product); //get product id  for load related category product   \n\n      setTimeout(function () {\n        var id = product.id;\n        console.log(\' id \', id);\n        (0,_tsbackendscript_ajaxfunctioncall__WEBPACK_IMPORTED_MODULE_8__.processrequest2)("".concat(_url__WEBPACK_IMPORTED_MODULE_6__.backendurl, "/product/displayandloadsimilaritems/").concat(id), \'get\', {}, function (r) {\n          r = JSON.parse(r);\n          console.log(\'productpage ...\', r); //process the array r of  product  generated\n\n          var relatedprd = new StringBuilder();\n          r.forEach(function (el) {\n            relatedprd.append("<div class=\\"col-xl-2 col-md-4 col-sm-6\\">\\n      <div class=\\"product-box\\">\\n          <div class=\\"img-wrapper\\">\\n              <div class=\\"front\\">\\n                  <a href=\\"#\\"><img src=\\"".concat(_url__WEBPACK_IMPORTED_MODULE_6__.backendurl, "/jetstore/").concat(el.imageurl, "\\"\\n                          class=\\"img-fluid blur-up lazyload bg-img\\" alt=\\"\\"></a>\\n              </div>\\n              <div class=\\"back\\">\\n                  <a href=\\"#\\"><img src=\\"").concat(_url__WEBPACK_IMPORTED_MODULE_6__.backendurl, "/jetstore/").concat(el.imageurl, "\\"\\n                 class=\\"img-fluid blur-up lazyload bg-img\\" alt=\\"\\"></a>\\n              </div>\\n              <div class=\\"cart-info cart-wrap\\">\\n                  <button data-toggle=\\"modal\\" onclick=\\"addtocart(\'").concat(el.id, "\')\\" title=\\"Add to cart\\"><i\\n                          class=\\"ti-shopping-cart\\"></i></button> \\n            <a href=\\"javascript:void(0)\\" onclick=\\"addtocartforwishlist(\'").concat(el.id, "\')\\"\\n                      title=\\"Add to Wishlist\\"><i class=\\"ti-heart\\" aria-hidden=\\"true\\"></i></a> \\n                      <a href=\\"#\\"\\n                      data-toggle=\\"modal\\" data-target=\\"#quick-view\\" title=\\"Quick View\\"><i\\n                          class=\\"ti-search\\" aria-hidden=\\"true\\"></i></a> \\n          <a href=\\"/jetcart/compare?name=").concat(encodeURIComponent(el.productname), "$price=").concat(el.productprice, "\\"\\n                      title=\\"Compare\\"><i class=\\"ti-reload\\" aria-hidden=\\"true\\"></i></a></div>\\n          </div>\\n          <div class=\\"product-detail\\">\\n              <div class=\\"rating\\"><i class=\\"fa fa-star\\"></i> <i class=\\"fa fa-star\\"></i> <i\\n                      class=\\"fa fa-star\\"></i> <i class=\\"fa fa-star\\"></i> <i class=\\"fa fa-star\\"></i>\\n                      </div>\\n              <a href=\\"product-page(no-sidebar).html\\">\\n                  <h6>").concat(el.categoryid, "</h6>\\n              </a>\\n              <h4>N").concat(parseFloat(el.productprice).toFixed(2).replace(/\\d(?=(\\d{3})+\\.)/g, \'$&,\'), "</h4>\\n              <h4><del>N").concat(parseFloat(el.productprice).toFixed(2).replace(/\\d(?=(\\d{3})+\\.)/g, \'$&,\'), "</del></h4>\\n          </div>\\n      </div>\\n  </div>"));\n          }); //append to dom\n\n          $(\'#search-product\').empty().html(relatedprd.toString()); // animate this category \n\n          setTimeout(function () {\n            //delay for 2000\n            var catalogue = document.getElementById(\'search-product\');\n            (0,_animate__WEBPACK_IMPORTED_MODULE_11__.animateCSS)(\'.search-product\', \'fadeOutRightBig\', function () {\n              (0,_animate__WEBPACK_IMPORTED_MODULE_11__.animaterelatedprd)(_url__WEBPACK_IMPORTED_MODULE_6__.backendurl, \'.search-product\', \'fadeOutRightBig\', catalogue, \'get\', "".concat(_url__WEBPACK_IMPORTED_MODULE_6__.backendurl, "/product/displayandloadsimilaritems/").concat(id));\n            });\n          }, 1000);\n        });\n      }, 500);\n      break;\n\n    case "".concat(_url__WEBPACK_IMPORTED_MODULE_6__.loginurl, "/jetcart/register"):\n      (0,_tsbackendscript_ajaxfunctioncall__WEBPACK_IMPORTED_MODULE_8__.setajax)(\'json\', "https://countriesnow.space/api/v0.1/countries/states", \'get\', "", function (response) {\n        // process the response\n        // console.log(\'response \',response.data);\n        var countries = response.data.map(function (e) {\n          //console.log(\'countries\',e.name) ;\n          return "<option value=".concat(e.name, ">").concat(e.name, "</option>");\n        }); //console.log(countries) ;\n\n        $(\'#country\').empty().html(countries.join(""));\n      }, function () {}, _tsbackendscript_ajaxfunctioncall__WEBPACK_IMPORTED_MODULE_8__.contenttype);\n      break;\n\n    case "".concat(_url__WEBPACK_IMPORTED_MODULE_6__.loginurl, "/jetcart/cart"):\n      (0,_miscellaneous__WEBPACK_IMPORTED_MODULE_7__.invalidateSessionAndToken)(jwt_decode, \'customertoken\'); // sessionStorage.clear() ;\n\n      if (localStorage.getItem(\'customertoken\') !== null) {\n        var store = JSON.parse(sessionStorage.getItem(\'store\'));\n        console.log(\'cart store \', store);\n\n        if (store === null || store.includes(null)) {\n          alert(\'session null\');\n\n          var _content6 = (0,_tsbackendscript_ajaxfunctioncall__WEBPACK_IMPORTED_MODULE_8__.contenttypewithtoken)(localStorage.getItem(\'customertoken\')); //console.log(\'content \', content, `${backendurl}/product/loadcartlist/${localStorage.getItem(\'ack\')}`);\n          //alert(localStorage.getItem(\'ack\')) ;\n\n\n          (0,_tsbackendscript_ajaxfunctioncall__WEBPACK_IMPORTED_MODULE_8__.setajax)(\'text\', "".concat(_url__WEBPACK_IMPORTED_MODULE_6__.backendurl, "/product/loadcartlist/").concat(localStorage.getItem(\'ack\')), \'get\', \'\', function (store) {\n            // process the response\n            console.log(\'loaded response \', store); //alert(\'response ..\');\n\n            if (store !== undefined) {\n              if (store.length === 0) {\n                toastr.error(\'Your cart is empty\');\n                $(\'#customercart\').empty().html("<center><p>Your cart is empty</p><center>");\n              }\n\n              console.log(\'typeof \', (0,_babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_1__["default"])(store));\n              store = JSON.parse(store); //alert() ;\n\n              var totalbody = store.map(function (elem) {\n                //alert(\'elem\') ;\n                console.log(\'element2 \', elem); //processing each object in cart \n\n                return "\\n                     <tbody>\\n                       <tr>\\n                         <td>\\n                             <a  href=\\"#\\"><img src=\\"".concat(_url__WEBPACK_IMPORTED_MODULE_6__.backendurl, "/jetstore/").concat(elem.imageurl, "\\" alt=\\"\\"/></a>\\n                         </td>\\n                         <td>\\n                         <a href=\\"#\\">").concat(elem.productname, "</a>\\n                             <div class=\\"mobile-cart-content row\\">\\n                                 <div class=\\"col-xs-3\\">\\n                                     <div class=\\"qty-box\\">\\n                                         <div class=\\"input-group\\">\\n                                             <input type=\\"text\\" name=\\"quantity\\" \\n                                             class=\\"form-control input-number\\"\\n                                                 value=\\"").concat(parseFloat(elem.productquantity), "\\" />\\n                                         </div>\\n                                       </div>\\n                                     </div>\\n                                   \\n                                 <div class=\\"col-xs-3\\">\\n                                     <h2 class=\\"td-color\\">").concat(elem.productprice, "</h2>\\n                                 </div>\\n                                 <div class=\\"col-xs-3\\">\\n                                     <h2 class=\\"td-color\\"><a href=\\"#\\" class=\\"icon\\">\\n                                       <i class=\\"ti-close\\"></i></a>\\n                                     </h2>\\n                                 </div>\\n                             </div>\\n                         </td>\\n                         <td>\\n                             <h2>N").concat(parseFloat(elem.productprice).toFixed(2).replace(/\\d(?=(\\d{3})+\\.)/g, \'$&,\'), "</h2>\\n                         </td>\\n                         <td>\\n                             <div class=\\"qty-box\\">\\n                                 <div class=\\"input-group\\">\\n                                     <input type=\\"number\\" name=\\"quantity\\" \\n                                     class=\\"form-control input-number\\" readonly\\n                                         value=\\"").concat(parseFloat(elem.productquantity), "\\" />\\n                                 </div>\\n                             </div>\\n                         </td>\\n                         <td>\\n                         <h2 class=\\"td-color\\">N").concat((parseFloat(elem.productprice) * parseFloat(elem.productquantity)).toFixed(2).replace(/\\d(?=(\\d{3})+\\.)/g, \'$&,\'), "</h2>\\n                         </td>  \\n                         <td>\\n                         <a href=\\"javascript:void(0)\\" class=\\"icon mr-3\\" id=\'").concat(elem.id, "\' onclick=\\"removeRow(\'").concat(elem.id, "\')\\">\\n                         <i class=\\"ti-close\\" title=\\"remove\\" >\\n                         </i></a>\\n                         </td>                                \\n                     </tr>\\n                 </tbody>");\n              }); //  <td>${parseFloat(elem.productprice)}</td>\n              //  <td>${parseFloat(elem.productquantity)}</td>\n\n              var builder = new StringBuilder();\n              builder.append("\\n                 <table class=\\"table cart-table table-responsive-xs\\" id=\\"producttable\\">\\n                   <thead>\\n                 <tr className=\\"table-head\\">\\n                     <th scope=\\"col\\">image</th>\\n                     <th scope=\\"col\\">product name</th>\\n                     <th scope=\\"col\\">price</th>\\n                     <th scope=\\"col\\">quantity</th>\\n                     <th scope=\\"col\\">action</th>\\n                     <th scope=\\"col\\">total</th>\\n                 </tr>\\n                   </thead>");\n              totalbody.forEach(function (el) {\n                builder.append(el);\n              });\n              builder.append("</table>");\n              var totalprice = store.map(function (res) {\n                return res.productprice * res.productquantity;\n              });\n              console.log(\'totalprice\', totalprice); // var formatter = new Intl.NumberFormat(\'en-US\', {\n              //   style: \'currency\',\n              //   currency: \'NIG\',\n              //          });\n\n              builder.append("<table className=\\"table cart-table table-responsive-md\\" id=\'totalpr\'>\\n                          <tbody>\\n                            <tr>\\n                              <td>Total Price:</td>\\n                              <td>\\n                                <h2>N".concat(parseFloat(totalprice.reduce(function (a, b) {\n                return a + b;\n              }, 0.0)).toFixed(2).replace(/\\d(?=(\\d{3})+\\.)/g, \'$&,\'), "</h2>\\n                              </td>\\n                            </tr>\\n                          </tbody>\\n                        </table>\\n                        ")); //builder.append(`<br/><h2 id="totalpr2">N${(parseFloat(totalprice.reduce((a: any, b: any) => a + b, 0.0)).toFixed(2).replace(/\\d(?=(\\d{3})+\\.)/g, \'$&,\'))}</h2>`) ;\n\n              sessionStorage.setItem(\'store\', JSON.stringify(store));\n              $(\'#customercart\').empty().html(builder.toString());\n            } else {\n              toastr.error(\'your cart is empty\');\n            }\n          }, function () {}, _content6);\n        } else if (store !== null) {\n          console.log(\'store \', store); // alert(\'store\') ;\n\n          var totalbody = store.map(function (elem) {\n            console.log(\'element \', elem); //processing each object in cart \n\n            return "\\n                 <tbody>\\n                   <tr>\\n                     <td>\\n                         <a href=\\"#\\"><img src=\\"".concat(_url__WEBPACK_IMPORTED_MODULE_6__.backendurl, "/jetstore/").concat(elem.imageurl, "\\" alt=\\"\\" /></a>\\n                     </td>\\n                     <td>\\n                     <a href=\\"#\\">").concat(elem.productname, "</a>\\n                         <div class=\\"mobile-cart-content row\\">\\n                             <div class=\\"col-xs-3\\">\\n                                 <div class=\\"qty-box\\">\\n                                     <div class=\\"input-group\\">\\n                                         <input type=\\"text\\" name=\\"quantity\\" \\n                                         class=\\"form-control input-number\\"\\n                                             value=\\"").concat(parseFloat(elem.productquantity), "\\" />\\n                                     </div>\\n                                   </div>\\n                                 </div>\\n                               \\n                             <div class=\\"col-xs-3\\">\\n                                 <h2 class=\\"td-color\\">").concat(elem.productprice, "</h2>\\n                             </div>\\n                             <div class=\\"col-xs-3\\">\\n                                 <h2 class=\\"td-color\\"><a href=\\"#\\" class=\\"icon\\">\\n                                   <i class=\\"ti-close\\"></i></a>\\n                                 </h2>\\n                             </div>\\n                         </div>\\n                     </td>\\n                     <td>\\n                         <h2>N").concat(parseFloat(elem.productprice).toFixed(2).replace(/\\d(?=(\\d{3})+\\.)/g, \'$&,\'), "</h2>\\n                     </td>\\n                     <td>\\n                         <div class=\\"qty-box\\">\\n                             <div class=\\"input-group\\">\\n                                 <input type=\\"number\\" name=\\"quantity\\" \\n                                 class=\\"form-control input-number\\" readonly\\n                                     value=\\"").concat(parseFloat(elem.productquantity), "\\" />\\n                             </div>\\n                         </div>\\n                     </td>   \\n                    <td id=\'").concat(elem.id, "\'>\\n                    <a href=\\"javascript:void(0)\\" class=\\"icon mr-3\\">\\n                    <i class=\\"ti-close\\" title=\\"remove\\" onclick=\\"removeRow(\'").concat(elem.id, "\')\\"></i></a>\\n                    </td>\\n                     <td>\\n            <h2 class=\\"td-color\\">N").concat((parseFloat(elem.productprice) * parseFloat(elem.productquantity)).toFixed(2).replace(/\\d(?=(\\d{3})+\\.)/g, \'$&,\'), "</h2>\\n                     </td>           \\n                 </tr>\\n             </tbody>");\n          }); //  <td>${parseFloat(elem.productprice)}</td>\n          //  <td>${parseFloat(elem.productquantity)}</td>\n\n          var builder = new StringBuilder();\n          builder.append("\\n             <table class=\\"table cart-table table-responsive-xs\\">\\n               <thead>\\n             <tr className=\\"table-head\\">\\n                 <th scope=\\"col\\">image</th>\\n                 <th scope=\\"col\\">product name</th>\\n                 <th scope=\\"col\\">price</th>\\n                 <th scope=\\"col\\">quantity</th>\\n                 <th scope=\\"col\\">action</th>\\n                 <th scope=\\"col\\">total</th>\\n             </tr>\\n               </thead>");\n          totalbody.forEach(function (el) {\n            builder.append(el);\n          });\n          builder.append("</table>");\n          var totalprice = store.map(function (res) {\n            return res.productprice * res.productquantity;\n          });\n          console.log(\'totalprice\', totalprice); // var formatter = new Intl.NumberFormat(\'en-US\', {\n          //   style: \'currency\',\n          //   currency: \'NIG\',\n          //          });\n\n          builder.append("<table className=\\"table cart-table table-responsive-md\\" id=\\"pricetotal\\">\\n                      <tfoot>\\n                        <tr>\\n                          <td>Total Price :</td>\\n                          <td>\\n                            <h2>N".concat(parseFloat(totalprice.reduce(function (a, b) {\n            return a + b;\n          }, 0.0)).toFixed(2).replace(/\\d(?=(\\d{3})+\\.)/g, \'$&,\'), "</h2>\\n                          </td>\\n                        </tr>\\n                      </tfoot>\\n                    </table>\\n                    ")); //sessionStorage.setItem(\'store\',JSON.stringify(store));\n\n          console.log(\'stored session\', store);\n          $(\'#customercart\').empty().html(builder.toString());\n        }\n      } else if (localStorage.getItem(\'customertoken\') === null) {// Swal.fire({\n        //   icon: \'info\',\n        //   text: \'Please login to see your Cart?\',\n        //   showCancelButton: false,\n        //   allowOutsideClick: false,\n        // }).then((result: any) => {\n        //   if (result.isConfirmed) {\n        //     $(\'#customercart\').empty().html(`<center><p>Your cart is empty</p></center>`);\n        //   }\n        // });\n      }\n\n      break;\n\n    case "".concat(_url__WEBPACK_IMPORTED_MODULE_6__.loginurl, "/order"):\n      //console.log(localStorage.getItem(\'token\')) ;\n      (0,_tsbackendscript_ajaxfunctioncall__WEBPACK_IMPORTED_MODULE_8__.processrequest2)("".concat(_url__WEBPACK_IMPORTED_MODULE_6__.backendurl, "/order/order"), \'get\', {\n        \'Content-Type\': \'application/json\',\n        \'Authorization\': \'Bearer \' + localStorage.getItem(\'token\')\n      }, function (r) {\n        // console.log(\'response  from server\',r) ;\n        $(\'#customerorder\').empty().html(r);\n      });\n      break;\n\n    case "".concat(_url__WEBPACK_IMPORTED_MODULE_6__.loginurl, "/jetcart/marketplace"):\n      // alert() ;\n      (0,_tsbackendscript_ajaxfunctioncall__WEBPACK_IMPORTED_MODULE_8__.processrequest2)("".concat(_url__WEBPACK_IMPORTED_MODULE_6__.backendurl, "/product/loadproduct"), \'get\', {}, function (r) {\n        //console.log(\'response  from server\',r) ;\n        var json = JSON.parse(r);\n        var keys = Object.keys(JSON.parse(r));\n        console.log(json);\n        var prdcatalogue = new StringBuilder();\n\n        for (var _i = 0, _keys = keys; _i < _keys.length; _i++) {\n          var k = _keys[_i];\n          // console.log(\' k \',k ,json[k]) ;\n          var strbuildr = new StringBuilder();\n          strbuildr.append("<div class=\\"row offset-5\\">\\n              <div class=\\"title2\\">\\n            <h2 class=\\"title-inner2\\">".concat(k, "</h2>\\n              </div>\\n              </div>\\n               <div class=\\"row offset-1\\">")); // alert() ;\n          // <a href="compare.html" title="Compare"><i class="ti-reload" aria-hidden="true"></i></a>\n\n          var _iterator3 = _createForOfIteratorHelper(json[k]),\n              _step3;\n\n          try {\n            for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n              var p = _step3.value;\n\n              // console.log(\' p of \',k,`${backendurl}/jetstore/${p.imageurl}`) ;\n              if (p.productstatus === \'refurbished\') {\n                p.productstatus = \'ref\';\n              }\n\n              var image = "".concat(_url__WEBPACK_IMPORTED_MODULE_6__.backendurl, "/jetstore/").concat(p.imageurl);\n              marketplace(strbuildr, p);\n            } // console.log(\'got here \') ;\n\n          } catch (err) {\n            _iterator3.e(err);\n          } finally {\n            _iterator3.f();\n          }\n\n          strbuildr.append("</div>");\n          prdcatalogue.append($.trim(strbuildr.toString()));\n        } // console.log(prdcatalogue.toString()) ;\n        //alert(\'appending ...\');\n        //alert(\'market\') ;\n\n\n        $(\'#catalogue\').empty().html(prdcatalogue.toString()); // $(prdcatalogue.toString()).insertAfter(\'#catalogue\') ; \n      });\n      setTimeout(function () {\n        //delay for 2000\n        var catalogue = document.getElementById(\'catalogue\');\n        (0,_animate__WEBPACK_IMPORTED_MODULE_11__.animateCSS)(\'.catalogue\', \'fadeOutRightBig\', function () {\n          (0,_animate__WEBPACK_IMPORTED_MODULE_11__.animateitems)(_url__WEBPACK_IMPORTED_MODULE_6__.backendurl, \'.catalogue\', \'fadeOutRightBig\', catalogue, \'get\', "".concat(_url__WEBPACK_IMPORTED_MODULE_6__.backendurl, "/product/loadproduct"));\n        });\n      }, 3000);\n      break;\n\n    case "".concat(_url__WEBPACK_IMPORTED_MODULE_6__.loginurl, "/jetcart/productbycategory"):\n      //alert(url) ;\n      var parsedUrl = new URL(window.location.href); // console.log(\' product \', parsedUrl.searchParams.get("product"));\n\n      var item = parsedUrl.searchParams.get("product");\n      var producttype = document.getElementById(\'producttype\');\n\n      if (item) {\n        producttype.innerHTML = decodeURIComponent(item); // alert(item);\n      } else {\n        producttype.innerHTML = \'slide\'; // alert(item);\n\n        $(\'#catalogue\').empty().html("<div class=\\"row offset-5\\">This product is not in store</div>");\n        throw new Error(\'Product not in store .......\');\n      } //load  product based  on item variable\n\n\n      (0,_tsbackendscript_ajaxfunctioncall__WEBPACK_IMPORTED_MODULE_8__.processrequest2)("".concat(_url__WEBPACK_IMPORTED_MODULE_6__.backendurl, "/product/loadproductcategory/").concat(item), \'get\', {}, function (r) {\n        // console.log(\'response  from server\',r) ;\n        // console.log(\'item ....\',item) ;\n        var json = JSON.parse(r);\n        var keys = Object.keys(JSON.parse(r));\n        var prdcatalogue = new StringBuilder();\n        console.log(json);\n        var strbuildr = new StringBuilder();\n        var rowbuilder = new StringBuilder(); //call the processor \n\n        (0,_animate__WEBPACK_IMPORTED_MODULE_11__.processanimated)(json, strbuildr, rowbuilder); // console.log(prdcatalogue.toString()) ;\n\n        $(\'#catalogue\').empty().html(strbuildr.toString()); // $(prdcatalogue.toString()).insertAfter(\'#catalogue\') ; \n\n        json = null; //calling the animation\n\n        setTimeout(function () {\n          console.log(\'self invoking delay ...\');\n          (0,_animate__WEBPACK_IMPORTED_MODULE_11__.animateProductCategoryPage)(\'.catalogue\', \'fadeOutRightBig\', function () {\n            (0,_animate__WEBPACK_IMPORTED_MODULE_11__.animatePrdCat)(item);\n          });\n        }, 2000);\n      });\n      break;\n\n    case "".concat(_url__WEBPACK_IMPORTED_MODULE_6__.loginurl, "/jetcart/search"):\n      $(".itemsearch").select2({\n        placeholder: "search your products",\n        minimumInputLength: 1,\n        ajax: {\n          url: "".concat(_url__WEBPACK_IMPORTED_MODULE_6__.backendurl, "/product/loadsearchitem"),\n          // headers: {\n          //   Authorization: `Bearer ${localStorage.getItem(\'token\')}`\n          // },\n          dataType: \'json\',\n          data: function data(params) {\n            console.log(\' params \', params); // const vendorname2 = localStorage.getItem(\'vendorname\');\n\n            return {\n              thename: params.term,\n              // search term\n              size: params.term.length,\n              page: params.page\n            };\n          },\n          processResults: function processResults(data) {\n            // const data2  =  [data] ;\n            console.log(\'processed data \', data);\n            return {\n              results: $.map(data, function (obj) {\n                // console.log(\'obj in  map \',obj);\n                return {\n                  id: obj.id,\n                  text: obj.productname\n                };\n              })\n            };\n          }\n        }\n      });\n      break;\n\n    case "".concat(_url__WEBPACK_IMPORTED_MODULE_6__.loginurl, "/jetcart/compare"):\n      var compareUrl = new URL(window.location.href); // console.log(\' product \', parsedUrl.searchParams.get("product"));\n\n      var compareItem = compareUrl.searchParams.get("name");\n      var comparePrice = compareUrl.searchParams.get("price"); // const compareproducttype = document.getElementById(\'producttype\') as HTMLElement;\n\n      if (compareItem) {//  compareproducttype.innerHTML = decodeURIComponent(compareItem);\n        // alert(item);\n      } else {\n        // compareproducttype.innerHTML = \'slide\';\n        // alert(item);\n        $(\'#table-compare\').empty().html("<div class=\\"row offset-5\\">This product is not in store</div>");\n        throw new Error(\'Product not in store .......\');\n      } //load items \n\n\n      (0,_tsbackendscript_ajaxfunctioncall__WEBPACK_IMPORTED_MODULE_8__.processrequest2)("".concat(_url__WEBPACK_IMPORTED_MODULE_6__.backendurl, "/product/loadsimilaritems2?thename=").concat(compareItem, "&price=").concat(comparePrice, "&size=4"), \'get\', {}, function (r) {\n        var json = JSON.parse(r);\n        var keys = Object.keys(JSON.parse(r));\n        var prdcatalogue = new StringBuilder();\n        console.log(\'json .....\', json);\n        var strbuildr = new StringBuilder();\n        var rowbuilder = new StringBuilder();\n        rowbuilder.append("<tr><th class=\\"product-name\\">Product Name</th>");\n        json.forEach(function (element) {\n          rowbuilder.append("\\n            <td class=\\"grid-link__title\\">".concat(element.productname, "</td>\\n                     "));\n        });\n        rowbuilder.append("</tr>");\n        rowbuilder.append("<tr><th class=\\"product-name\\">Product Image</th>");\n        json.forEach(function (element) {\n          // <img src="${backendurl}/jetstore/${element.imageurl}" alt=""\n          // class="featured-image">\n          rowbuilder.append("\\n                  <td class=\\"item-row\\">\\n                  <a href=\\"/jetcart/productpage\\" onclick=\\"loadprd(\'".concat(element.id, "\',\'/jetcart/productpage\')\\">\\n                  <img src=\\"").concat(_url__WEBPACK_IMPORTED_MODULE_6__.backendurl, "/jetstore/").concat(element.imageurl, "\\" class=\\"featured-image\\" alt=\\"\\">\\n                  </a>\\n              <div class=\\"product-price product_price\\"><strong>On Sale:\\n                  </strong><span>N").concat(parseFloat(element.productprice).toFixed(2).replace(/\\d(?=(\\d{3})+\\.)/g, \'$&,\'), "</span></div>\\n              <form class=\\"variants clearfix\\">\\n                  <input type=\\"hidden\\">\\n                  <a href=\\"javascript:void(0);\\" title=\\"Add to Cart\\" onclick=\\"addtocart(\'").concat(element.id, "\')\\" class=\\"add-to-cart btn btn-solid\\">Add to\\n                      Cart</a>\\n              </form>\\n              <p class=\\"grid-link__title hidden\\">").concat(element.productname, "</p>\\n                        </td>   \\n                     "));\n        });\n        rowbuilder.append("</tr>");\n        rowbuilder.append("<tr><th class=\\"product-name\\">Product Description</th>");\n        json.forEach(function (element) {\n          rowbuilder.append("\\n           <td class=\\"item-row\\">\\n            <p class=\\"description-compare\\">".concat(element.productdescription, "</p>\\n                </td>\\n               "));\n        });\n        rowbuilder.append("</tr>");\n        $(\'#table-compare\').empty().html(rowbuilder.toString());\n      });\n      break;\n\n    case "".concat(_url__WEBPACK_IMPORTED_MODULE_6__.loginurl, "/jetcart/wishlist"):\n      // sessionStorage.clear();\n      // if customer is logged in\n      console.log(\'checking\', localStorage.getItem(\'customertoken\'));\n      (0,_miscellaneous__WEBPACK_IMPORTED_MODULE_7__.invalidateSession)(jwt_decode, \'customertoken\');\n\n      if (localStorage.getItem(\'customertoken\') !== null) {\n        console.log(\'inside logging .\');\n        var wishliststore = JSON.parse(sessionStorage.getItem(\'wishlist\'));\n\n        if ($.isEmptyObject(wishliststore)) {\n          //alert(\'empty\') ;\n          var _content7 = (0,_tsbackendscript_ajaxfunctioncall__WEBPACK_IMPORTED_MODULE_8__.contenttypewithtoken)(localStorage.getItem(\'customertoken\'));\n\n          var custid = localStorage.getItem(\'ack\');\n          console.log(_content7, \' and \', custid); // load from db afresh if session store is empty \n          //people has to login to see wishlist\n\n          (0,_tsbackendscript_ajaxfunctioncall__WEBPACK_IMPORTED_MODULE_8__.setajax)(\'json\', "".concat(_url__WEBPACK_IMPORTED_MODULE_6__.backendurl, "/product/loadwishlist/").concat(custid), \'get\', "", function (response) {\n            console.log(\'response \', response); // response=[] ; \n\n            if (response !== undefined) {\n              if (response.length === 0) {\n                Swal.fire({\n                  icon: \'question\',\n                  text: \'Your WishList is Empty?\',\n                  showCancelButton: false,\n                  allowOutsideClick: false\n                }).then(function (result) {\n                  if (result.isConfirmed) {\n                    setTimeout(function () {\n                      window.location.href = \'./marketplace\';\n                    }, 1500); // redirects after this time\n                  }\n                });\n              }\n\n              var wishlistbuilder = new StringBuilder();\n              console.log(\'wishliststore empty store \', wishliststore);\n              response.forEach(function (f) {\n                wishlistbuilder.append("<tbody id=\\"".concat(f.id, "\\">\\n               <tr>\\n                   <td>\\n                       <a href=\\"/jetcart/productpage\\" onclick=\\"loadprd(\'").concat(f.id, "\',\'/jetcart/productpage\')\\">\\n                       <img src=\\"").concat(_url__WEBPACK_IMPORTED_MODULE_6__.backendurl, "/jetstore/").concat(f.imageurl, "\\" alt=\\"\\"></a>\\n                   </td>\\n                   <td><a href=\\"#\\">").concat(f.productname, "</a>\\n                       <div class=\\"mobile-cart-content row\\">\\n                           <div class=\\"col-xs-3\\">\\n                               <p>in stock</p>\\n                           </div>\\n                           <div class=\\"col-xs-3\\">\\n                               <h2 class=\\"td-color\\">N").concat(parseFloat(f.productprice).toFixed(2).replace(/\\d(?=(\\d{3})+\\.)/g, \'$&,\'), "</h2>\\n                           </div>\\n                           <div class=\\"col-xs-3\\">\\n                               <h2 class=\\"td-color\\"><a href=\\"#\\" class=\\"icon mr-1\\"><i class=\\"ti-close\\"></i>\\n                                   </a>\\n                              <a href=\\"#\\" class=\\"cart\\"><i class=\\"ti-shopping-cart\\"></i></a>\\n                               </h2>\\n                           </div>\\n                       </div>\\n                   </td>\\n                   <td>\\n                       <h2>N").concat(parseFloat(f.productprice).toFixed(2).replace(/\\d(?=(\\d{3})+\\.)/g, \'$&,\'), "</h2>\\n                   </td>\\n                   <td>\\n                   <a href=\\"javascript:void(0)\\" class=\\"icon mr-3\\">\\n                   <i class=\\"ti-close\\" title=\\"remove\\" onclick=\\"removeRow(\'").concat(f.id, "\')\\"></i></a>\\n                     <a href=\\"javascript:void(0)\\" onclick=\\"addtocartforwishlist(\'").concat(f.id, "\')\\" class=\\"cart\\"><i class=\\"ti-shopping-cart\\" title=\\"add to cart\\"></i></a>\\n                   </td>\\n                    </tr></tbody>"));\n              }); // set sessionstorage afresh \n\n              sessionStorage.setItem(\'wishlist\', JSON.stringify(response));\n              $(\'#wishlisttable\').append(wishlistbuilder.toString());\n            } else {\n              toastr.error(\'your wishlist is empty\');\n            }\n          }, function () {}, _content7);\n        } else {\n          var wishlistbuilder = new StringBuilder();\n          console.log(\'wishliststore store not empty \', wishliststore);\n          wishliststore.forEach(function (f) {\n            wishlistbuilder.append("<tbody id=\\"".concat(f.id, "\\">\\n               <tr>\\n                   <td>\\n                       <a href=\\"/jetcart/productpage\\" onclick=\\"loadprd(\'").concat(f.id, "\',\'/jetcart/productpage\')\\">\\n                       <img src=\\"").concat(_url__WEBPACK_IMPORTED_MODULE_6__.backendurl, "/jetstore/").concat(f.imageurl, "\\" alt=\\"\\"></a>\\n                   </td>\\n                   <td><a href=\\"#\\">").concat(f.productname, "</a>\\n                       <div class=\\"mobile-cart-content row\\">\\n                           <div class=\\"col-xs-3\\">\\n                               <p>in stock</p>\\n                           </div>\\n                           <div class=\\"col-xs-3\\">\\n                               <h2 class=\\"td-color\\">N").concat(parseFloat(f.productprice).toFixed(2).replace(/\\d(?=(\\d{3})+\\.)/g, \'$&,\'), "</h2>\\n                           </div>\\n                           <div class=\\"col-xs-3\\">\\n                               <h2 class=\\"td-color\\"><a href=\\"#\\" class=\\"icon mr-1\\"><i class=\\"ti-close\\"></i>\\n                                   </a><a href=\\"#\\" class=\\"cart\\"><i class=\\"ti-shopping-cart\\"></i></a></h2>\\n                           </div>\\n                       </div>\\n                   </td>\\n                   <td>\\n                       <h2>N").concat(parseFloat(f.productprice).toFixed(2).replace(/\\d(?=(\\d{3})+\\.)/g, \'$&,\'), "</h2>\\n                   </td>\\n                   <td>\\n                   <a href=\\"javascript:void(0)\\" class=\\"icon mr-3\\">\\n                   <i class=\\"ti-close\\" title=\\"remove\\" onclick=\\"removeRow(\'").concat(f.id, "\')\\"></i></a>\\n                     <a href=\\"javascript:void(0)\\" onclick=\\"addtocartforwishlist(\'").concat(f.id, "\')\\" class=\\"cart\\"><i size=\\"500px\\" class=\\"ti-shopping-cart\\" title=\\"add to cart\\"></i></a>\\n                   </td>\\n                    </tr></tbody>"));\n          }); //under add to cart,change the function\n          // $(\'#wishlisttable\').append(wishlistbuilder.toString());\n\n          $(\'#wishlisttable\').empty().html(wishlistbuilder.toString());\n        }\n      } else {\n        //alert() ;\n        //if the user does not logged in \n        console.log("not logged in");\n        Swal.fire({\n          icon: \'question\',\n          text: \'login please\',\n          showCancelButton: false,\n          allowOutsideClick: false\n        }).then(function (result) {\n          if (result.isConfirmed) {\n            window.location.href = \'./marketplace\';\n          }\n        });\n      }\n\n      break;\n\n    case "".concat(_url__WEBPACK_IMPORTED_MODULE_6__.loginurl, "/jetcart/collection"):\n      searchcollection();\n      break;\n\n    case "".concat(_url__WEBPACK_IMPORTED_MODULE_6__.loginurl, "/jetcart/category-page"):\n      //alert() ;\n      var caturl = new URL(decodeURIComponent(window.location.href));\n      var catsearchParams = new URLSearchParams(caturl.search).get(\'productid\');\n      var catproduct; //  console.log(\' catsearchParams \',catsearchParams) ;\n\n      fetch("".concat(_url__WEBPACK_IMPORTED_MODULE_6__.backendurl, "/product/display/").concat(catsearchParams)).then(function (response) {\n        return response.json();\n      }).then(function (response) {\n        catproduct = response;\n        console.log(\'catproduct \', catproduct);\n        $(\'#small-section\').empty().html("\\n                  <h4>".concat(catproduct.categoryid, "</h4>\\n                  <h5>").concat(catproduct.productname, "</h5>\\n                  <p>").concat(catproduct.proddescription, "</p>\\n                    ")); // console.log(\' catproduct \',catproduct,\' img \',`<img src=${backendurl}/jetstore/${catproduct.imageurl}>`) ;\n\n        $(\'#catimg\').empty().html("<img src=".concat(_url__WEBPACK_IMPORTED_MODULE_6__.backendurl, "/jetstore/").concat(catproduct.imageurl, ">"));\n        $(\'#catimg\').prop(\'href\', "/jetcart/productpage");\n        $(\'#catimg\').prop(\'width\', \'5px\');\n        $(\'#catimg\').prop(\'height\', \'5px\');\n        $(\'#catimg\').prop(\'onclick\', "loadprd(\'".concat(catproduct.id, "\',\'/jetcart/productpage\')"));\n        sessionStorage.setItem(\'product\', JSON.stringify(catproduct)); // console.log(\'cat response \',catproduct) ;\n        //process other ajax request \n\n        if (catproduct.model !== null) {\n          var productbrands = catproduct.model.split(","); // console.log("productbrands ",productbrands) ;\n          //adding brands to help collection search\n\n          productbrands = productbrands.map(function (br) {\n            // console.log("brands",br) ;\n            //brands.set("brands",br) ;  \n            return "<div class=\\"custom-control custom-radio collection-filter-radio\\">\\n                        <input name=\\"myradio\\" type=\\"radio\\" onclick=\\"searchbrands(this.id)\\" class=\\"custom-control-input\\" value=\\"".concat(br, "\\" id=\\"").concat(br, "\\">\\n                        <label class=\\"custom-control-label\\" for=\\"").concat(br, "\\">").concat(br, "</label>                     \\n                                </div>");\n          }); // console.log(" productbrands.join() ",productbrands.join()) ;\n\n          $("#collection-brand-filter").empty().html(productbrands.join(" "));\n        } //for color \n        //  let productcolor:string[]  = catproduct.manycolor.split(",") ; \n        //  productcolor  = productcolor.map(color=>{\n        //            if(color.toLowerCase() ===\'white\'){\n        //             return `<li class="color-1 ${color}" data-white="${color}"></li>` ;\n        //            }else if(color.toLowerCase() ===\'red\'){\n        //             return `<li class="color-2 ${color}" data-red="${color}"></li>` ;\n        //            }else if(color.toLowerCase() ===\'blue\'){\n        //             return `<li class="color-3 ${color}" data-blue="${color}"></li>` ;\n        //            }else if(color.toLowerCase() ===\'purple\'){\n        //             return `<li class="color-4 ${color}" data-purple="${color}"></li>` ;\n        //            }else if(color.toLowerCase() ===\'black\'){\n        //             return `<li class="color-5 ${color}" data-black="${color}"></li>` ;\n        //            }else if(color.toLowerCase() ===\'green\'){\n        //             return `<li class="color-6 ${color}" data-green="${color}"></li>` ;\n        //            }else if(color.toLowerCase() === \'grey\'){\n        //              return `<li class="color-7 ${color}" data-grey="grey"></li>` ;\n        //            }else if(color.toLowerCase() === \'yellow\'){\n        //             return `<li class="color-8 ${color}" data-yelow="yellow"></li>` ;\n        //           }\n        //          return \'\' ;\n        //        }) ;\n        // productcolor.push(`<li class="color-9 ${color}" data-white="${color}" title="None or Others"></li>`);\n        // $(\'#color-selector\').empty().html(productcolor.join("")) ;\n        // for sizes \n\n\n        if (catproduct.manysizes !== null) {\n          var productsize = catproduct.manysizes;\n          productsize = productsize.map(function (size) {\n            if (size.charAt(0).toLowerCase() === \'s\') {\n              return " <div class=\\"custom-control custom-radio collection-filter-radio\\">\\n                          <input onclick=\'searchtype(this.id)\' value=\'s\' name=\\"mysize\\" type=\\"radio\\" class=\\"custom-control-input\\" id=\\"hundred\\">\\n                          <label class=\\"custom-control-label\\" for=\\"hundred\\">s</label>\\n                               </div>";\n            } else if (size.charAt(0).toLowerCase() === \'m\') {\n              return "<div class=\\"custom-control custom-radio collection-filter-radio\\">\\n                          <input  onclick=\'searchtype(this.id)\' value=\'m\' name=\\"mysize\\" type=\\"radio\\" class=\\"custom-control-input\\" id=\\"twohundred\\">\\n                          <label class=\\"custom-control-label\\" for=\\"twohundred\\">m</label>\\n                                     </div>";\n            } else if (size.charAt(0).toLowerCase() === \'l\') {\n              return "<div class=\\"custom-control custom-radio collection-filter-radio\\">\\n                              <input  onclick=\'searchtype(this.id)\' name=\\"mysize\\" value=\'l\' type=\\"radio\\" class=\\"custom-control-input\\" id=\\"threehundred\\">\\n                              <label class=\\"custom-control-label\\" for=\\"threehundred\\">l</label>\\n                                </div>";\n            } else if (size.charAt(0).toLowerCase() === \'xl\') {\n              return "  <div class=\\"custom-control custom-radio collection-filter-radio\\">\\n                             <input  onclick=\'searchtype(this.id)\' name=\\"mysize\\" value=\'xl\' type=\\"radio\\" class=\\"custom-control-input\\" id=\\"fourhundred\\">\\n                             <label class=\\"custom-control-label\\" for=\\"fourhundred\\">xl</label>\\n                               </div>";\n            }\n\n            return \'\';\n          });\n          $(\'#collection-size-filter\').empty().html(productsize.join(" "));\n        }\n      })["catch"](function (err) {\n        console.log(err);\n      }); // load products into  category page\n\n      (0,_tsbackendscript_ajaxfunctioncall__WEBPACK_IMPORTED_MODULE_8__.setajax)(\'json\', "".concat(_url__WEBPACK_IMPORTED_MODULE_6__.backendurl, "/product/loadcatproduct?size=24"), \'get\', \'\', function (response) {\n        //console.log(\' response \',response) ;\n        if (response.length !== 0) {\n          var builder = new StringBuilder();\n          var myhtml = response.map(function (el) {\n            // console.log(\' jetstore \',`${backendurl}/jetstore/${el.imageurl}`);\n            return categorypagetemplate("".concat(_url__WEBPACK_IMPORTED_MODULE_6__.backendurl, "/jetstore/").concat(el.imageurl), el.id, el.productname, el.productprice, el.proddescription);\n          }).join(""); // console.log(myhtml) ;\n\n          $(\'#margin-res\').empty().html(myhtml);\n        }\n\n        console.log(\'added successfully\');\n      }, function () {}, _tsbackendscript_ajaxfunctioncall__WEBPACK_IMPORTED_MODULE_8__.contenttype); //newer product  \n\n      (0,_tsbackendscript_ajaxfunctioncall__WEBPACK_IMPORTED_MODULE_8__.setajax)(\'json\', "".concat(_url__WEBPACK_IMPORTED_MODULE_6__.backendurl, "/product/loadnewcatproduct?size=9"), \'get\', \'\', function (response) {\n        if (response.length != 0) {\n          var count = 1;\n          var count2 = 0;\n          var builder = new StringBuilder();\n          var builder2 = new StringBuilder();\n\n          var _iterator4 = _createForOfIteratorHelper(response),\n              _step4;\n\n          try {\n            for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n              var el = _step4.value;\n              builder.append(newprdtemplate("".concat(_url__WEBPACK_IMPORTED_MODULE_6__.backendurl, "/jetstore/").concat(el.imageurl), el.productname, el.productprice, el.id));\n              count2 = count2 + 1;\n\n              if (count2 === 3) {\n                console.log(\' builder count \', builder.toString());\n                builder2.append("<div>".concat(builder.toString(), "</div>"));\n                builder = null;\n                builder = new StringBuilder();\n                console.log(\' added \', count2);\n                count2 = 0;\n              }\n            }\n          } catch (err) {\n            _iterator4.e(err);\n          } finally {\n            _iterator4.f();\n          }\n\n          console.log(" builder2.toString() " + builder2.toString());\n          $(\'#slide-1\').empty().html("<h5 class=\\"title-border\\">new product</h5>\\n                   <div class=\\"offer-slider slide-1\\">" + builder2.toString() + "</div>");\n        }\n      }, function () {}, _tsbackendscript_ajaxfunctioncall__WEBPACK_IMPORTED_MODULE_8__.contenttype);\n      break;\n\n    default:\n  }\n}; //new product on category page\n\n\nvar newprdtemplate = function newprdtemplate(image, productname, price, id) {\n  return "\\n  <div class=\\"media\\">\\n  <a href=\\"/jetcart/productpage\\" onclick=\\"loadprd(\'".concat(id, "\',\'/jetcart/productpage\')\\" style=\\"cursor:pointer;\\"><img class=\\"img-fluid blur-up lazyload\\" src=\\"").concat(image, "\\" alt=\\"\\"></a>\\n  <div class=\\"media-body align-self-center\\">\\n      <div class=\\"rating\\"><i class=\\"fa fa-star\\"></i> <i class=\\"fa fa-star\\"></i> <i class=\\"fa fa-star\\"></i> <i class=\\"fa fa-star\\"></i> <i class=\\"fa fa-star\\"></i></div>\\n      <a href=\\"/jetcart/productpage\\" onclick=\\"loadprd(\'").concat(id, "\',\'/jetcart/productpage\')\\" style=\\"cursor:pointer;\\">\\n          <h6>").concat(productname, "</h6>\\n      </a>\\n      <h4>").concat(accounting.formatMoney(price, {\n    symbol: "N",\n    format: "%s %v"\n  }), "</h4>\\n  </div>\\n</div>\\n  ");\n}; // category-page template \n\n\nvar categorypagetemplate = function categorypagetemplate(image, id, productname, productprice, description) {\n  return "<div class=\\"col-xl-3 col-6 col-grid-box\\">\\n  <div class=\\"product-box\\">\\n      <div class=\\"img-wrapper\\">\\n          <div class=\\"front\\">\\n              <a href=\\"/jetcart/productpage\\" onclick=\\"loadprd(\'".concat(id, "\',\'/jetcart/productpage\')\\" style=\\"cursor:pointer;\\"><img src=\\"").concat(image, "\\" class=\\"img-fluid blur-up lazyload bg-img\\" alt=\\"\\"></a>\\n          </div>\\n          <div class=\\"back\\">\\n              <a href=\\"/jetcart/productpage\\" onclick=\\"loadprd(\'").concat(id, "\',\'/jetcart/productpage\')\\" style=\\"cursor:pointer;\\"><img src=\\"").concat(image, "\\" class=\\"img-fluid blur-up lazyload bg-img\\" alt=\\"\\"></a>\\n          </div>\\n          <div class=\\"cart-info cart-wrap\\">\\n              <button data-toggle=\\"modal\\" data-target=\\"#addtocart\\" title=\\"Add to cart\\"><i\\n                      class=\\"ti-shopping-cart\\"></i></button> <a href=\\"javascript:void(0)\\" onclick=\'addproducttowishlist(this.id)\' id=").concat(id, " title=\\"Add to Wishlist\\"><i\\n                      class=\\"ti-heart\\" aria-hidden=\\"true\\"></i></a> <a href=\\"#\\" data-toggle=\\"modal\\" data-target=\\"#quick-view\\" title=\\"Quick View\\"><i\\n                      class=\\"ti-search\\" aria-hidden=\\"true\\"></i></a> \\n          </div>\\n      </div>\\n      <div class=\\"product-detail\\">\\n          <div>\\n              <div class=\\"rating\\"><i class=\\"fa fa-star\\"></i> <i class=\\"fa fa-star\\"></i> <i class=\\"fa fa-star\\"></i> <i class=\\"fa fa-star\\"></i> <i class=\\"fa fa-star\\"></i></div>\\n              <a href=\\"/jetcart/productpage\\" onclick=\\"loadprd(\'").concat(id, "\',\'/jetcart/productpage\')\\" style=\\"cursor:pointer;\\">\\n                  <h6>").concat(productname, "</h6>\\n              </a>\\n              <p>\\n                ").concat(description, "\\n              </p>\\n              <h4>").concat(accounting.formatMoney(productprice, {\n    symbol: "N",\n    format: "%s %v"\n  }), "</h4>\\n          </div>\\n      </div>\\n  </div>\\n</div>\\n");\n}; //item selection in the category-page\n// $(\'.custom-control\').on(\'click\',(e:any)=>{\n//   e.preventDefault();\n//   //$(\'#\'+e.target.lastChild.data).prop(\'checked\',true) ;\n//   // console.log(\'innertext \'+e.target.innerText) ;\n//   // console.log(\'innerhtml \'+e.target.innerHTML) ;\n//   // console.log(\' data \'+e.target.lastChild.data) ;\n//   // console.log(\' e.target.classList[1] \',e.target.classList) ;\n//   // console.log(\' e \',e) ;\n//   console.log(\' e \',e.target) ;\n// });\n\n\nvar itemcriteriasearch = new _categorypage__WEBPACK_IMPORTED_MODULE_10__.itemcategorypage(); //item selection in the category-page.to use another logic-19/6/2022\n// $(\'#itemselection\').on(\'click\',(e:any)=>{\n//   e.preventDefault();\n//   //console.log(e) ;\n//  // console.log(\'innertext \'+e.target.innerText) ;\n//  // console.log(\'innerhtml \'+e.target.innerHTML) ;\n//   //console.log(\' data \'+e.target.lastChild.data) ;\n//   let colour  = "" ;\n//   let itemcategory  =  "" ;\n//    if(itemcriteriasearch.colour.includes(e.target.classList[1])){// for colours\n//        colour  =  e.target.classList[1] ;\n//        console.log(\' colour \',colour) ;\n//        itemcategory  = colour ;\n//     itemcriteriasearch.processitem(colour) ;\n//      }else if(e.target.innerText){ //for price,type,brand,size,colour\n//     //itemcategory = e.target.innerText  ;\n//     //console.log(\' itemcategory \',itemcategory) ;\n//     if(!e.target.innerText.includes(\'-\')){\n//       console.log(\'entered items \',e.target.innerText) ;\n//       if(!e.target.control.checked){\n//         e.target.control.checked  = true ;\n//         itemcategory = e.target.innerText  ;\n//         console.log(\'checked items \',itemcategory) ;\n//       //  itemcriteriasearch.processitem(itemcategory) ;\n//          }else if(e.target.control.checked){\n//           e.target.control.checked  = false ;\n//           itemcategory = e.target.innerText  ;\n//           console.log(\' unchecked items \',itemcategory) ;\n//           //itemcriteriasearch.processitem(itemcategory) ;\n//             }\n//       }else if(e.target.innerText.includes(\'-\')){\n//       itemcategory = e.target.innerText  ;  \n//       console.log(\' price \',itemcategory) ;  \n//     //  itemcriteriasearch.processitem(itemcategory) ; \n//            }\n//     itemcriteriasearch.processitem(itemcategory) ;\n//     // console.log(\' colour \',itemcriteriasearch.processcolour) ;\n//     // console.log(\' size \',itemcriteriasearch.processsize) ;\n//     // console.log(\' brand \',itemcriteriasearch.processbrand) ;\n//     console.log(\' type \',itemcriteriasearch.processtype) ;\n//    // console.log(\' price \',itemcriteriasearch.price) ;\n//        }\n//      //send data\n//     loadcategorypage();  \n//  //  console.log(\' colour3 \',e.target.classList[1]);\n//   // console.log(\' colour \',e.originalEvent.srcElement.dataset);\n//   // console.log(\' colour2 \',e.originalEvent.srcElement.dataset.keys);\n//   // let  data   = JSON.parse(JSON.stringify(e.originalEvent.srcElement.dataset)) ;\n// });\n//frontpage product search \n\n$(\'#prodsearch\').on(\'keyup\', function (e) {\n  e.preventDefault(); // var search  =  document.getElementById(\'prodsearch\');\n\n  var inputValue = document.getElementById(\'prodsearch\').value;\n  var matchlist = document.getElementById(\'match-list\');\n  console.log(\'search \', inputValue);\n  (0,_tsbackendscript_ajaxfunctioncall__WEBPACK_IMPORTED_MODULE_8__.processrequest2)("".concat(_url__WEBPACK_IMPORTED_MODULE_6__.backendurl, "/product/loadsearchitem?thename=").concat(inputValue, "&size=").concat(inputValue.length), \'get\', {}, function (r) {\n    r = JSON.parse(r);\n    console.log(\'res \', r);\n    var matches = r.filter(function (p) {\n      var regex = new RegExp("^".concat(inputValue), \'gi\'); // global and  case insensistive\n\n      return p.productname.match(regex); // if its match\n    });\n\n    if (inputValue.length === 0) {\n      matches = [];\n      matchlist.innerHTML = \'\';\n    } // to output the html of the  matches \n\n\n    (function () {\n      if (matches.length > 0) {\n        var html = matches.map(function (match) {\n          return "\\n              <div class=\\"card card-body mb-2\\" style=\\"cursor:pointer;\\">\\n              <h4  class=\\"text-primary m-auto\\" onclick=\\"loadprd(\'".concat(match.id, "\',\'/jetcart/productpage\')\\" style=\\"padding-right:50px;padding-left:50px;\\">").concat(match.productname, "</h4>           \\n              </div>\\n              ");\n        }).join(\'\');\n        matchlist.innerHTML = html;\n      }\n    })();\n  });\n}); //extracted market function\n\nvar marketplace = function marketplace(strbuildr, p) {\n  var image = "".concat(_url__WEBPACK_IMPORTED_MODULE_6__.backendurl, "/jetstore/").concat(p.imageurl);\n  strbuildr.append("<div class=\\"col-md-3\\">\\n                     <div class=\\"product-box\\">\\n                       <div class=\\"img-wrapper\\">\\n                       <div class=\\"lable-block\\"><span class=\\"lable3\\">".concat(p.productstatus, "</span>\\n                       <span class=\\"lable4\\">on\\n                      sale</span></div>\\n                       <div class=\\"lable-block\\"><span class=\\"lable3\\">\\n                       ").concat(p.productstatus, "</span> <span class=\\"lable4\\">on\\n                       sale</span>\\n                       </div>\\n             <a href=\\"javascript:void(0)\\" onclick=\\"loadprd(\'").concat(p.id, "\',\'/jetcart/productpage\')\\">\\n             <img src=\\"").concat(image, "\\" class=\'animate__animated animate__bounce\' width=\\"180px\\" height=\\"180px\\" alt=\\"\\"></a>                                      \\n                  <div class=\\"cart-info cart-wrap\\">\\n              <button data-toggle=\\"modal\\" onclick=\\"addtocart(").concat(p.id, ")\\" title=\\"Add to cart\\">\\n              <i class=\\"ti-shopping-cart\\"></i></button> \\n              <a href=\\"javascript:void(0)\\" onclick=\\"addtowishlist(\'").concat(p.id, "\')\\" title=\\"Add to Wishlist\\">\\n              <i class=\\"ti-heart\\" aria-hidden=\\"true\\"></i></a>\\n               <a href=\\"#\\" data-toggle=\\"modal\\"\\n                data-target=\\"#quick-view\\" title=\\"Quick View\\">\\n                <i class=\\"ti-search\\" aria-hidden=\\"true\\"></i>\\n                </a>\\n                <a href=\\"/jetcart/compare?name=").concat(encodeURIComponent(p.productname), "$price=").concat(p.productprice, "\\" title=\\"Compare\\">\\n                <i class=\\"ti-reload\\" aria-hidden=\\"true\\"></i></a>\\n                </div></div>\\n                               <div class=\\"product-detail\\">\\n                                <div class=\\"rating\\"><i class=\\"fa fa-star\\"></i> <i class=\\"fa fa-star\\"></i> <i class=\\"fa fa-star\\"></i> <i class=\\"fa fa-star\\"></i> <i class=\\"fa fa-star\\"></i>\\n                                </div>\\n                                <a href=\\"/jetcart/productpageappliance\\">\\n                                <h6>").concat(p.productname, "</h6>\\n                                </a>\\n                                <h4>N").concat(parseFloat(p.productprice).toFixed(2).replace(/\\d(?=(\\d{3})+\\.)/g, \'$&,\'), "</h4>\\n                            </div>\\n                            </div>\\n             </div>"));\n}; // on change product search.load items by search\n\n\n$(\'.itemsearch\').on(\'change\', function (e) {\n  e.preventDefault();\n  var userid = $(\'.itemsearch\').val();\n  console.log(\'userid \', $(\'.itemsearch\').text()); // alert($.trim(userid)) ;\n\n  $.ajax({\n    type: \'get\',\n    url: "".concat(_url__WEBPACK_IMPORTED_MODULE_6__.backendurl, "/product/loadsearchproduct"),\n    data: "id=".concat(userid, "&size=6"),\n    success: function success(data) {\n      console.log(\'result ...\', data);\n      var builder = new StringBuilder();\n      data.forEach(function (element) {\n        builder.append("\\n        <div class=\\"col-xl-2 col-md-4 col-sm-6\\">\\n        <div class=\\"product-box\\">\\n            <div class=\\"img-wrapper\\">\\n                <div class=\\"front\\">\\n                    <a href=\\"/jetcart/productpage\\" onclick=\\"loadprd(\'".concat(element.id, "\',\'/jetcart/productpage\')\\">\\n                    <img src=\\"").concat(_url__WEBPACK_IMPORTED_MODULE_6__.backendurl, "/jetstore/").concat(element.imageurl, "\\"\\n                            class=\\"img-fluid blur-up lazyload bg-img\\" alt=\\"\\"></a>\\n                </div>\\n                <div class=\\"back\\">\\n                    <a href=\\"/jetcart/productpage\\" onclick=\\"loadprd(\'").concat(element.id, "\',\'/jetcart/productpage\')\\">\\n                    <img src=\\"").concat(_url__WEBPACK_IMPORTED_MODULE_6__.backendurl, "/jetstore/").concat(element.imageurl, "\\"\\n                            class=\\"img-fluid blur-up lazyload bg-img\\" alt=\\"\\"></a>\\n                </div>\\n                <div class=\\"cart-info cart-wrap\\">\\n                    <button data-toggle=\\"modal\\" onclick=\\"addtocart(\'").concat(element.id, "\')\\" title=\\"Add to cart\\"><i\\n                            class=\\"ti-shopping-cart\\"></i></button>\\n          <a href=\\"javascript:void(0)\\" onclick=\\"addtocartforwishlist(\'").concat(element.id, "\')\\" title=\\"Add to Wishlist\\"><i class=\\"ti-heart\\" aria-hidden=\\"true\\"></i></a> \\n                        <a href=\\"#\\"\\n                        data-toggle=\\"modal\\" data-target=\\"#quick-view\\" title=\\"Quick View\\"><i\\n                            class=\\"ti-search\\" aria-hidden=\\"true\\"></i>\\n                            </a> \\n                      <a href=\\"/jetcart/compare?name=").concat(encodeURIComponent(element.productname), "$price=").concat(element.productprice, "\\"\\n                        title=\\"Compare\\"><i class=\\"ti-reload\\" aria-hidden=\\"true\\"></i></a></div>\\n            </div>\\n            <div class=\\"product-detail\\">\\n                <div class=\\"rating\\"><i class=\\"fa fa-star\\"></i> <i class=\\"fa fa-star\\"></i> <i\\n                        class=\\"fa fa-star\\"></i> <i class=\\"fa fa-star\\"></i> <i class=\\"fa fa-star\\"></i></div>\\n                <a href=\\"product-page(no-sidebar).html\\">\\n                    <h6>").concat(element.productname, "</h6>\\n                </a>\\n                <h4>N").concat(parseFloat(element.productprice).toFixed(2).replace(/\\d(?=(\\d{3})+\\.)/g, \'$&,\'), "</h4>\\n                <h4><del>N").concat(parseFloat(element.productoldprice).toFixed(2).replace(/\\d(?=(\\d{3})+\\.)/g, \'$&,\'), "</del></h4>\\n            </div>\\n        </div>\\n           </div>\\n              "));\n      });\n      $(\'.search-product\').empty().html(builder.toString());\n    }\n  });\n});\n$(document).ready(function () {\n  //const myform: HTMLFormElement = document.querySelector(\'#top-profile\')!;\n  if (URL) {\n    var currenthref = window.location.href;\n    var url = new URL(currenthref); //  console.log(\'test url \',(theprotocol+url.host+url.pathname));\n\n    pagesonload(_url__WEBPACK_IMPORTED_MODULE_6__.theprotocol + url.host + url.pathname);\n  } else {\n    alert(\'this browser seem to be too old\');\n  } //  render(()=>html`<button class="btn btn-primary" type="button" @click=${test()}>Update</button>`,document.body);\n\n}); //load category\n\nfunction loadcategorypage(pagenum) {\n  pagenum = pagenum ? pagenum : 0;\n  document.cookie = "current_page" + pagenum;\n  $.ajax({\n    type: \'get\',\n    datatype: \'json\',\n    url: "".concat(_url__WEBPACK_IMPORTED_MODULE_6__.backendurl, "/product/categoryitems"),\n    data: "brands=".concat(itemcriteriasearch.processbrand, "\\n    &size=").concat(itemcriteriasearch.processsize, "\\n    &type=").concat(itemcriteriasearch.processtype, "\\n    &price=").concat(itemcriteriasearch.price, "\\n    &pageNumber=").concat(pagenum, "&pageSize=", 20, "&colour=").concat(itemcriteriasearch.processcolour),\n    success: function success(data) {\n      console.log(\' data \', data);\n    }\n  });\n} //load collection\n\n\nfunction searchcollection(_x) {\n  return _searchcollection.apply(this, arguments);\n} // load product search\n\n\nfunction _searchcollection() {\n  _searchcollection = (0,_babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_0__["default"])( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_4___default().mark(function _callee2(pagenum) {\n    return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_4___default().wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            pagenum = pagenum ? pagenum : 0;\n            document.cookie = "current_page" + pagenum;\n            $.ajax({\n              type: \'get\',\n              url: "".concat(_url__WEBPACK_IMPORTED_MODULE_6__.backendurl, "/product/loadcollections"),\n              data: "pageNumber=".concat(pagenum, "&pageSize=", 20),\n              success: function success(data) {\n                console.log(\'data 2\', data);\n                var bodyimage = document.getElementById(\'collection\'); //console.log(\'appending to dom\') ;\n\n                bodyimage.innerHTML = data;\n              }\n            });\n\n          case 3:\n          case "end":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n  return _searchcollection.apply(this, arguments);\n}\n\nfunction searchFiter2(_x2) {\n  return _searchFiter.apply(this, arguments);\n}\n\nfunction _searchFiter() {\n  _searchFiter = (0,_babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_0__["default"])( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_4___default().mark(function _callee3(pagenum) {\n    return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_4___default().wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            pagenum = pagenum ? pagenum : 0;\n            document.cookie = "current_page" + pagenum;\n            $.ajax({\n              type: \'get\',\n              url: "".concat(_url__WEBPACK_IMPORTED_MODULE_6__.backendurl, "/product/byspecial"),\n              data: "pageNumber=".concat(pagenum, "&pageSize=", 20),\n              success: function success(data) {\n                //  console.log(data) ;\n                var bodyimage = document.getElementById(\'tab-3\'); //console.log(\'appending to dom\') ;\n\n                bodyimage.innerHTML = data;\n              }\n            });\n\n          case 3:\n          case "end":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  }));\n  return _searchFiter.apply(this, arguments);\n}\n\nfunction searchFeaturedFilter(_x3) {\n  return _searchFeaturedFilter.apply(this, arguments);\n} //by new arrival\n\n\nfunction _searchFeaturedFilter() {\n  _searchFeaturedFilter = (0,_babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_0__["default"])( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_4___default().mark(function _callee4(pagenum) {\n    return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_4___default().wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            pagenum = pagenum ? pagenum : 1;\n            document.cookie = "current_page" + pagenum;\n            $.ajax({\n              type: \'get\',\n              url: "".concat(_url__WEBPACK_IMPORTED_MODULE_6__.backendurl, "/product/byfeatured"),\n              data: "pageNumber=".concat(pagenum, "&pageSize=", 20),\n              success: function success(data) {\n                // console.log(data) ;\n                var bodyimage = document.getElementById(\'tab-2\'); //console.log(\'appending to dom\') ;\n\n                bodyimage.innerHTML = data;\n              }\n            });\n\n          case 3:\n          case "end":\n            return _context4.stop();\n        }\n      }\n    }, _callee4);\n  }));\n  return _searchFeaturedFilter.apply(this, arguments);\n}\n\nfunction searchNewArrivalFilter(_x4) {\n  return _searchNewArrivalFilter.apply(this, arguments);\n} // load market products\n\n\nfunction _searchNewArrivalFilter() {\n  _searchNewArrivalFilter = (0,_babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_0__["default"])( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_4___default().mark(function _callee5(pagenum) {\n    return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_4___default().wrap(function _callee5$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            pagenum = pagenum ? pagenum : 1;\n            document.cookie = "current_page" + pagenum;\n            $.ajax({\n              type: \'get\',\n              url: "".concat(_url__WEBPACK_IMPORTED_MODULE_6__.backendurl, "/product/bynewarrival"),\n              data: "pageNumber=".concat(pagenum, "&pageSize=", 20),\n              success: function success(data) {\n                // console.log(data) ;\n                var bodyimage = document.getElementById(\'tab-1\'); //console.log(\'appending to dom\') ;\n\n                bodyimage.innerHTML = data;\n              }\n            });\n\n          case 3:\n          case "end":\n            return _context5.stop();\n        }\n      }\n    }, _callee5);\n  }));\n  return _searchNewArrivalFilter.apply(this, arguments);\n}\n\nvar searchandloadmarketproducts = /*#__PURE__*/function () {\n  var _ref3 = (0,_babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_0__["default"])( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_4___default().mark(function _callee(pagenum) {\n    return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_4___default().wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            pagenum = pagenum ? pagenum : 1;\n            document.cookie = "current_page" + pagenum;\n            $.ajax({\n              type: \'get\',\n              url: "".concat(_url__WEBPACK_IMPORTED_MODULE_6__.backendurl, "/product/loadproduct"),\n              success: function success(data) {\n                var json = data;\n                var keys = Object.keys(data);\n                console.log(json);\n                var prdcatalogue = new StringBuilder();\n\n                for (var _i2 = 0, _keys2 = keys; _i2 < _keys2.length; _i2++) {\n                  var k = _keys2[_i2];\n                  var strbuildr = new StringBuilder();\n                  strbuildr.append("<div class=\\"row offset-5\\">\\n            <div class=\\"title2\\">\\n          <h2 class=\\"title-inner2\\">".concat(k, "</h2>\\n            </div>\\n            </div>\\n             <div class=\\"row offset-1\\">"));\n\n                  var _iterator5 = _createForOfIteratorHelper(json[k]),\n                      _step5;\n\n                  try {\n                    for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {\n                      var p = _step5.value;\n\n                      // console.log(\' p of \',k,`${backendurl}/jetstore/${p.imageurl}`) ;\n                      if (p.productstatus === \'refurbished\') {\n                        p.productstatus = \'ref\';\n                      }\n\n                      var image = "".concat(_url__WEBPACK_IMPORTED_MODULE_6__.backendurl, "/jetstore/").concat(p.imageurl);\n                      marketplace(strbuildr, p);\n                    } // console.log(\'got here \') ;\n\n                  } catch (err) {\n                    _iterator5.e(err);\n                  } finally {\n                    _iterator5.f();\n                  }\n\n                  strbuildr.append("</div>");\n                  prdcatalogue.append($.trim(strbuildr.toString()));\n                }\n\n                var bodyimage = document.getElementById(\'marketplace\'); //console.log(\'appending to dom\') ;\n\n                bodyimage.innerHTML = prdcatalogue.toString();\n                setTimeout(function () {\n                  //delay for 2000\n                  var catalogue = document.getElementById(\'marketplace\');\n                  (0,_animate__WEBPACK_IMPORTED_MODULE_11__.animateCSS)(\'.marketplace\', \'fadeOutRightBig\', function () {\n                    (0,_animate__WEBPACK_IMPORTED_MODULE_11__.animateitems)(_url__WEBPACK_IMPORTED_MODULE_6__.backendurl, \'.marketplace\', \'fadeOutRightBig\', catalogue, \'get\', "".concat(_url__WEBPACK_IMPORTED_MODULE_6__.backendurl, "/product/loadproduct"));\n                  });\n                }, 3000);\n              }\n            });\n\n          case 3:\n          case "end":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function searchandloadmarketproducts(_x5) {\n    return _ref3.apply(this, arguments);\n  };\n}();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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LGFBQU01VCw0Q0FBTix1QkFBNkIyVCxDQUFDLENBQUN4TSxRQUEvQixDQUFUO3NCQUNBME0sV0FBVyxDQUFDSCxTQUFELEVBQVlDLENBQVosQ0FBWDtvQkFDRCxDQWZpQixDQWdCbEI7O2tCQWhCa0I7b0JBQUE7a0JBQUE7b0JBQUE7a0JBQUE7O2tCQWlCbEJELFNBQVMsQ0FBQ3pNLE1BQVY7a0JBQ0F1TSxZQUFZLENBQUN2TSxNQUFiLENBQW9COUQsQ0FBQyxDQUFDMlEsSUFBRixDQUFPSixTQUFTLENBQUNoTSxRQUFWLEVBQVAsQ0FBcEI7Z0JBQ0Q7O2dCQUNELElBQUlrUSxTQUFTLEdBQUdoVyxRQUFRLENBQUNvQyxjQUFULENBQXdCLGFBQXhCLENBQWhCLENBekI0QixDQTBCNUI7O2dCQUNBNFQsU0FBUyxDQUFDMUQsU0FBVixHQUFzQlYsWUFBWSxDQUFDOUwsUUFBYixFQUF0QjtnQkFDQW1CLFVBQVUsQ0FBQyxZQUFNO2tCQUNmO2tCQUNBLElBQU15SyxTQUFTLEdBQUcxUixRQUFRLENBQUNvQyxjQUFULENBQXdCLGFBQXhCLENBQWxCO2tCQUNBbEQscURBQVUsQ0FBQyxjQUFELEVBQWlCLGlCQUFqQixFQUFvQyxZQUFNO29CQUNsREMsdURBQVksQ0FBQ2YsNENBQUQsRUFBYSxjQUFiLEVBQTZCLGlCQUE3QixFQUFnRHNULFNBQWhELEVBQTJELEtBQTNELFlBQXFFdFQsNENBQXJFLDBCQUFaO2tCQUNELENBRlMsQ0FBVjtnQkFHRCxDQU5TLEVBTVAsSUFOTyxDQUFWO2NBT0Q7WUF0Q0ksQ0FBUDs7VUFIa0M7VUFBQTtZQUFBO1FBQUE7TUFBQTtJQUFBO0VBQUEsQ0FBSDs7RUFBQSxnQkFBM0JtUywyQkFBMkI7SUFBQTtFQUFBO0FBQUEsR0FBakMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly93ZWJhcHAvLi90c19zY3JpcHRzL2luZGV4Mi50c3g/MzQyYSJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBpbXBvcnQgZXhwZWN0IFwiXCIgcXVvdGVzICBpbiB0eXBlc2NyaXB0XHJcbmRlY2xhcmUgdmFyICQ6IGFueTtcclxuZGVjbGFyZSB2YXIgand0X2RlY29kZTogYW55O1xyXG4vL2RlY2xhcmUgdmFyIGFqYXhjYWxsOmFueTtcclxuZGVjbGFyZSB2YXIgcHJvY2Vzc3JlcXVlc3Q6IGFueTtcclxuZGVjbGFyZSB2YXIgdG9hc3RyOiBhbnk7XHJcbmRlY2xhcmUgdmFyIFN3YWw6IGFueTtcclxuZGVjbGFyZSB2YXIgYWxlcnRpZnk6IGFueTtcclxuZGVjbGFyZSB2YXIgU3RyaW5nQnVpbGRlcjogYW55O1xyXG5kZWNsYXJlIHZhciBhY2NvdW50aW5nOiBhbnk7XHJcbmRlY2xhcmUgdmFyIERyb3B6b25lOiBhbnk7XHJcbmRlY2xhcmUgdmFyIENLRURJVE9SOiBhbnk7XHJcbmRlY2xhcmUgdmFyIHdpbmRvdzogYW55O1xyXG5kZWNsYXJlIHZhciBGbHV0dGVyd2F2ZUNoZWNrb3V0OiBhbnk7XHJcbmltcG9ydCB7IGRpYWxvZywgc2Vjb25kaWFsb2cgfSBmcm9tIFwiLi9saXRodG1sc2NyaXB0XCI7XHJcbmltcG9ydCB7IGJhY2tlbmR1cmwsIGxvZ2ludXJsLCB0aGVwcm90b2NvbCwgYnJhbmRzLCBzaXplLCBjb2xvciB9IGZyb20gXCIuL3VybFwiO1xyXG5pbXBvcnQgeyBpbnZhbGlkYXRlU2Vzc2lvbiwgaW52YWxpZGF0ZVNlc3Npb25BbmRUb2tlbiwgaW52YWxpZGF0ZXRva2VuMiwgcmVkaXJlY3RpZnRva2VuaXNudWxsLCBqc29ucmVzdWx0LCBkb0RlY3J5cHRpb24sIGRvRW5jcnlwdGlvbiB9IGZyb20gXCIuL21pc2NlbGxhbmVvdXNcIjtcclxuaW1wb3J0IHsgZm9ybXN1Ym1pdCwgY2hlY2t0b2tlbiwgc3VibWl0Zm9ybSwgcHJvY2Vzc3JlcXVlc3QyLCBzZXRhamF4LCBjb250ZW50dHlwZSwgY29udGVudHR5cGV3aXRodG9rZW4sIHNldGFqYXh3aXRocHJvbWlzZSxvbk1lc3NhZ2VSZWNlaXZlZCxvblByaXZhdGVNZXNzYWdlIH0gZnJvbSBcIi4vdHNiYWNrZW5kc2NyaXB0L2FqYXhmdW5jdGlvbmNhbGxcIjtcclxuaW1wb3J0IHsgY3JlYXRldGFibGVzMiB9IGZyb20gJy4vdGFibGVzJ1xyXG5pbXBvcnQgeyBTZWFyY2ggfSBmcm9tIFwiZ3JpZGpzL2Rpc3Qvc3JjL3ZpZXcvcGx1Z2luL3NlYXJjaC9zZWFyY2hcIjtcclxuaW1wb3J0IHsgb3JkZXIsIGNhcnRwcm9kdWN0IH0gZnJvbSAnLi9vcmRlcic7XHJcbi8vaW1wb3J0IHtkb0RlY3J5cHRpb24sZG9FbmNyeXB0aW9ufSBmcm9tICAnLi4vZGlzdC9lbmNycHRpb24nIDtcclxuaW1wb3J0IHsgcHJvZHVjdCB9IGZyb20gXCIuL3Byb2R1Y3RcIjtcclxuaW1wb3J0IHsgaXRlbWNhdGVnb3J5cGFnZSB9IGZyb20gJy4vY2F0ZWdvcnlwYWdlJztcclxuaW1wb3J0IHsgYW5pbWF0ZUNTUywgYW5pbWF0ZWl0ZW1zLCBhbmltYXRlUHJkQ2F0LCBwcm9jZXNzYW5pbWF0ZWQsIGFuaW1hdGVQcm9kdWN0Q2F0ZWdvcnlQYWdlLCBhbmltYXRlcmVsYXRlZHByZCB9IGZyb20gXCIuL2FuaW1hdGVcIjtcclxuaW1wb3J0IHsgTXlXZWJzY29rZXQgfSBmcm9tIFwiLi93ZWJzb2NrZXRcIjtcclxubGV0IHdzVXJpOiBzdHJpbmcgPSBcIndzOi8vXCIgKyBcImxvY2FsaG9zdDoxMDIyXCI7XHJcbiAvL2xldCB3c1VyaTogc3RyaW5nID0gXCJ3czovL1wiICsgXCJodHRwOi8vMTA0LjQ1LjkyLjIwMDoxMDIyXCIgO1xyXG5cclxuLy9sZXQgd3NVcmk6IHN0cmluZyA9IFwid3M6Ly9cIiArIFwiaHR0cDovL2xvY2FsaG9zdDoxMDIyXCIgO1xyXG5cclxuLy9sZXQgc29ja2pzdXJsICA9ICdodHRwOi8vMTA0LjQ1LjkyLjIwMDoxMDIzJyA7XHJcblxyXG5sZXQgc29ja2pzdXJsICA9ICdodHRwOi8vbG9jYWxob3N0OjEwMjMnIDtcclxuXHJcbnRvYXN0ci5vcHRpb25zID0geyAgLy8gdG9hc3QgYW5kIG5vdGlmaWNhdGlvblxyXG4gIFwiY2xvc2VCdXR0b25cIjogdHJ1ZSxcclxuICBcImRlYnVnXCI6IGZhbHNlLFxyXG4gIFwibmV3ZXN0T25Ub3BcIjogZmFsc2UsXHJcbiAgXCJwcm9ncmVzc0JhclwiOiB0cnVlLFxyXG4gIFwicG9zaXRpb25DbGFzc1wiOiBcInRvYXN0LXRvcC1yaWdodFwiLFxyXG4gIFwicHJldmVudER1cGxpY2F0ZXNcIjogZmFsc2UsXHJcbiAgXCJvbmNsaWNrXCI6IG51bGwsXHJcbiAgXCJzaG93RHVyYXRpb25cIjogXCIyNTAwXCIsXHJcbiAgXCJoaWRlRHVyYXRpb25cIjogXCIyMDBcIixcclxuICBcInRpbWVPdXRcIjogXCIzMDAwXCIsXHJcbiAgXCJzaG93RWFzaW5nXCI6IFwic3dpbmdcIixcclxuICBcImhpZGVFYXNpbmdcIjogXCJsaW5lYXJcIixcclxuICBcInNob3dNZXRob2RcIjogXCJmYWRlSW5cIixcclxuICBcImhpZGVNZXRob2RcIjogXCJmYWRlT3V0XCJcclxufTtcclxuLy90aGUgZG9tIGZ1bmN0aW9uIGZvciBqc3hcclxuZnVuY3Rpb24gZG9tKHRhZzogYW55LCBhdHRyczogYW55LCAuLi5jaGlsZHJlbjogYW55KSB7XHJcbiAgLy8gICBjb25zdCBlbGVtZW50ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCh0YWcpXHJcbiAgLy8gT2JqZWN0LmVudHJpZXMoYXR0cnMgfHwge30pLmZvckVhY2goKFtuYW1lLCB2YWx1ZV0pID0+IHtcclxuICAvLyBcdGlmIChuYW1lLnN0YXJ0c1dpdGgoJ29uJykgJiYgbmFtZS50b0xvd2VyQ2FzZSgpIGluIHdpbmRvdylcclxuICAvLyBcdFx0ZWxlbWVudC5hZGRFdmVudExpc3RlbmVyKG5hbWUudG9Mb3dlckNhc2UoKS5zdWJzdHIoMiksIHZhbHVlKVxyXG4gIC8vIFx0ZWxzZSBlbGVtZW50LnNldEF0dHJpYnV0ZShuYW1lLCB2YWx1ZS50b1N0cmluZygpKVxyXG4gIC8vIH0pXHJcbiAgLy8gY2hpbGRyZW4uZm9yRWFjaCgoY2hpbGQpID0+IHtcclxuICAvLyBcdGFwcGVuZENoaWxkKGVsZW1lbnQsIGNoaWxkKVxyXG4gIC8vICAgfSlcclxuICAvLyAgICAgICByZXR1cm4gZWxlbWVudFxyXG5cclxuICAvL0N1c3RvbSBDb21wb25lbnRzIHdpbGwgYmUgZnVuY3Rpb25zXHJcbiAgaWYgKHR5cGVvZiB0YWcgPT09ICdmdW5jdGlvbicpIHsgcmV0dXJuIHRhZygpIH1cclxuICAvLyByZWd1bGFyIGh0bWwgdGFncyB3aWxsIGJlIHN0cmluZ3MgdG8gY3JlYXRlIHRoZSBlbGVtZW50c1xyXG4gIGlmICh0eXBlb2YgdGFnID09PSAnc3RyaW5nJykge1xyXG4gICAgLy8gZnJhZ21lbnRzIHRvIGFwcGVuZCBtdWx0aXBsZSBjaGlsZHJlbiB0byB0aGUgaW5pdGlhbCBub2RlXHJcbiAgICBjb25zdCBmcmFnbWVudHMgPSBkb2N1bWVudC5jcmVhdGVEb2N1bWVudEZyYWdtZW50KClcclxuICAgIGNvbnN0IGVsZW1lbnQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KHRhZylcclxuICAgIGNoaWxkcmVuLmZvckVhY2goY2hpbGQgPT4ge1xyXG4gICAgICBpZiAoY2hpbGQgaW5zdGFuY2VvZiBIVE1MRWxlbWVudCkge1xyXG4gICAgICAgIGZyYWdtZW50cy5hcHBlbmRDaGlsZChjaGlsZClcclxuICAgICAgfSBlbHNlIGlmICh0eXBlb2YgY2hpbGQgPT09ICdzdHJpbmcnKSB7XHJcbiAgICAgICAgY29uc3QgdGV4dG5vZGUgPSBkb2N1bWVudC5jcmVhdGVUZXh0Tm9kZShjaGlsZClcclxuICAgICAgICBmcmFnbWVudHMuYXBwZW5kQ2hpbGQodGV4dG5vZGUpXHJcbiAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgLy8gbGF0ZXIgb3RoZXIgdGhpbmdzIGNvdWxkIG5vdCBiZSBIVE1MRWxlbWVudCBub3Qgc3RyaW5nc1xyXG4gICAgICAgIGNvbnNvbGUubG9nKCdub3QgYXBwZW5kYWJsZScsIGNoaWxkKTtcclxuICAgICAgfVxyXG4gICAgfSlcclxuICAgIGVsZW1lbnQuYXBwZW5kQ2hpbGQoZnJhZ21lbnRzKVxyXG4gICAgLy8gTWVyZ2UgZWxlbWVudCB3aXRoIGF0dHJpYnV0ZXNcclxuICAgIC8vICBjb25zb2xlLmxvZygnYXR0cnMgLi4uJywgYXR0cnMpO1xyXG4gICAgT2JqZWN0LmVudHJpZXMoYXR0cnMgfHwge30pLmZvckVhY2goKFtuYW1lLCB2YWx1ZV0pID0+IHtcclxuICAgICAgaWYgKG5hbWUuc3RhcnRzV2l0aCgnb24nKSAmJiBuYW1lLnRvTG93ZXJDYXNlKCkgaW4gd2luZG93KVxyXG4gICAgICAgIGVsZW1lbnQuYWRkRXZlbnRMaXN0ZW5lcihuYW1lLnRvTG93ZXJDYXNlKCkuc3Vic3RyKDIpLCB2YWx1ZSk7XHJcbiAgICAgIC8vIGVsc2UgZWxlbWVudC5zZXRBdHRyaWJ1dGUobmFtZSwgdmFsdWUudG9TdHJpbmcoKSlcclxuICAgIH0pXHJcbiAgICBPYmplY3QuYXNzaWduKGVsZW1lbnQsIGF0dHJzKVxyXG4gICAgcmV0dXJuIGVsZW1lbnRcclxuICB9XHJcbn1cclxuXHJcbi8vIGN1c3RvbWVyICBsb2dpblxyXG4kKCcjY3VzdG9tZXJsb2dpbicpLm9uKCdjbGljaycsICgpID0+IHtcclxuICAkKGRpYWxvZyhcIlwiLCBcIlwiLCBcIlwiKSkuaW5zZXJ0QWZ0ZXIoXCIucGFnZS1tYWluLWhlYWRlclwiKTtcclxuICAvL2ludm9rZSB0aGUgZGlhbG9nIGJveFxyXG4gIGNvbnN0IG15ZGlhbG9ncG9zOiBhbnkgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLm1vZGFsLWRpYWxvZ1wiKTtcclxuICBteWRpYWxvZ3Bvcy5jbGFzc0xpc3QuYWRkKGBtb2RhbC1kaWFsb2ctY2VudGVyZWRgKTsgLy8gY2VudGVyICBpdCB2ZXJ0aWNhbGx5Y2xcclxuICAkKFwiLm1vZGFsLWhlYWRlclwiKS5odG1sKCgoKSA9PiB7XHJcbiAgICByZXR1cm4gKDxoNSBjbGFzc05hbWU9XCJtb2RhbC10aXRsZSBmLXctNjAwXCIgaWQ9XCJleGFtcGxlTW9kYWxMYWJlbFwiPkN1c3RvbWVyIExvZ2luPC9oNT4pO1xyXG4gIH0pKCkpO1xyXG4gICQoJy5tb2RhbC1ib2R5JykuZW1wdHkoKS5odG1sKCgoKSA9PiB7XHJcbiAgICByZXR1cm4gKFxyXG4gICAgICA8Zm9ybSBjbGFzc05hbWU9XCJuZWVkcy12YWxpZGF0aW9uXCIgaWQ9XCJjYXRmb3JtXCIgYXV0b0NvbXBsZXRlPVwib2ZmXCI+XHJcbiAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJmb3JtXCI+XHJcbiAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImZvcm0tZ3JvdXBcIj5cclxuICAgICAgICAgICAgPGxhYmVsIGZvcj1cInZhbGlkYXRpb25DdXN0b20wMVwiIGNsYXNzTmFtZT1cIm1iLTFcIj5Vc2VybmFtZTo8L2xhYmVsPlxyXG4gICAgICAgICAgICA8aW5wdXQgY2xhc3NOYW1lPVwiZm9ybS1jb250cm9sXCIgaWQ9XCJ1c2VybmFtZVwiIHR5cGU9XCJ0ZXh0XCIgbmFtZT1cInVzZXJuYW1lXCIgLz5cclxuICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJmb3JtLWdyb3VwIG1iLTBcIj5cclxuICAgICAgICAgICAgPGxhYmVsIGZvcj1cInZhbGlkYXRpb25DdXN0b20wMlwiIGNsYXNzTmFtZT1cIm1iLTFcIj5QYXN3b3JkOjwvbGFiZWw+XHJcbiAgICAgICAgICAgIDxpbnB1dCBjbGFzc05hbWU9XCJmb3JtLWNvbnRyb2xcIiBpZD1cInBhc3N3b3JkXCIgdHlwZT1cInBhc3N3b3JkXCIgbmFtZT1cInBhc3N3b3JkXCIgLz5cclxuICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgIDwvZGl2PlxyXG4gICAgICA8L2Zvcm0+XHJcbiAgICApO1xyXG4gIH0pKCkpO1xyXG4gIC8vYWRkIGZvb3RlclxyXG4gICQoXCIubW9kYWwtZm9vdGVyXCIpLmVtcHR5KCkuaHRtbCgoKCkgPT4ge1xyXG4gICAgZnVuY3Rpb24gbG9naW4oZTogYW55KSB7XHJcbiAgICAgIGUucHJldmVudERlZmF1bHQoKTtcclxuICAgICAgLy8gcHJvY2Vzc3BoeXNpY2FsYW5kZGlnaXRhbGNhdGVnb3J5KCdwb3N0JywgJ1N1YiBDYXRlZ29yeScsIGAke2JhY2tlbmR1cmx9L3N1YmNhdC9jcmVhdGVzdWJjYXRlZ29yeWAsICdEbyB5b3Ugd2FudCB0byBjcmVhdGUgc3ViLWNhdGVnb3J5JywgJ2NhdGZvcm0nLCBcInN1YiBjYXRlZ29yeSBjcmVhdGVkIHN1Y2Nlc3NmdWx5XCIsICdlcnJvciBjcmVhdGluZyBjYXRlZ29yeScpO1xyXG4gICAgICBjb25zdCBmb3JtID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2NhdGZvcm0nKSBhcyBIVE1MRm9ybUVsZW1lbnQ7XHJcbiAgICAgIGNvbnN0IGZvcm1kYXRhID0gbmV3IEZvcm1EYXRhKGZvcm0pO1xyXG4gICAgICAvLyBzdWJtaXRmb3JtKGAke2xvZ2ludXJsfS9hcGkvbG9naW5gLHt1c2VybmFtZTp0aGlzLnVzZXJuYW1lLHBhc3N3b3JkOnRoaXMucGFzc3dvcmR9LG51bGwsJ3RleHQnLCdwb3N0Jyk7Ly9zZW5kIGZvcm1cclxuICAgICAgLy9zdWJtaXRmb3JtKGAke2JhY2tlbmR1cmx9L2N1c3RvbWVybG9naW5gLGZvcm1kYXRhLG51bGwsJ3RleHQnLCdwb3N0Jyk7Ly9zZW5kIGZvcm1cclxuICAgICAgZmV0Y2goYCR7bG9naW51cmx9L2FwaS9sb2dpbmAsIHtcclxuICAgICAgICBtZXRob2Q6ICdwb3N0JyxcclxuICAgICAgICBjcmVkZW50aWFsczogJ3NhbWUtb3JpZ2luJyxcclxuICAgICAgICBoZWFkZXJzOiB7XHJcbiAgICAgICAgICAnQ29udGVudC1UeXBlJzogXCJhcHBsaWNhdGlvbi9qc29uXCIsXHJcbiAgICAgICAgfSxcclxuICAgICAgICBib2R5OiBKU09OLnN0cmluZ2lmeSh7IHVzZXJuYW1lOiBmb3JtZGF0YS5nZXQoJ3VzZXJuYW1lJykgYXMgc3RyaW5nLCBwYXNzd29yZDogZm9ybWRhdGEuZ2V0KFwicGFzc3dvcmRcIikgYXMgc3RyaW5nIH0pXHJcbiAgICAgIH0pLnRoZW4ocmVzcG9uc2UgPT4ge1xyXG4gICAgICAgIGlmIChyZXNwb25zZS5zdGF0dXMgIT0gMjAwKSB7XHJcbiAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJuZXR3b3JrIGFjY2VzcyAgZXJyb3JcIik7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHJldHVybiByZXNwb25zZS50ZXh0KCk7XHJcbiAgICAgIH0pLnRoZW4ociA9PiB7XHJcbiAgICAgICAgLy8gY29uc29sZS5sb2coJ3IgaW4gZnVuY3Rpb24gJywgcik7XHJcbiAgICAgICAgbG9jYWxTdG9yYWdlLnNldEl0ZW0oXCJjdXN0b21lcnRva2VuXCIsIHIpO1xyXG4gICAgICAgIHZhciBkZWNvZGVkID0gand0X2RlY29kZShyKTtcclxuICAgICAgIGNvbnNvbGUubG9nKGRlY29kZWQsICdleHAgJywgZGVjb2RlZFsnZXhwJ10sICdzdWIgJywgZGVjb2RlZC5zdWIsICd2ZW5kb3JuYW1lICcsIGRlY29kZWQudmVuZG9ybmFtZSwgJyBhY2sgJywgZGVjb2RlZC5hY2spO1xyXG4gICAgICAgIGNvbnN0IG5vdyA9IERhdGUubm93KCkudmFsdWVPZigpIC8gMTAwMDtcclxuICAgICAgICBjb25zdCB0b2tlbmV4cCA9IHBhcnNlSW50KGRlY29kZWQuZXhwKTtcclxuICAgICAgICBjb25zb2xlLmxvZyhkZWNvZGVkLnVzZXJuYW1lKTtcclxuICAgICAgICBsb2NhbFN0b3JhZ2Uuc2V0SXRlbSgndmVuZG9ybmFtZScsIGRlY29kZWQudmVuZG9ybmFtZSk7XHJcbiAgICAgICAgbG9jYWxTdG9yYWdlLnNldEl0ZW0oJ2FjaycsIGRlY29kZWQuYWNrKTtcclxuICAgICAgICBsb2NhbFN0b3JhZ2Uuc2V0SXRlbSgndXNlcm5hbWUnLCBkZWNvZGVkLnVzZXJuYW1lKTtcclxuICAgICAgICBjb25zdCBsb2dpbiA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5sb2dpbicpIGFzIEhUTUxEaXZFbGVtZW50O1xyXG4gICAgICAgIGxvZ2luLmNsYXNzTGlzdC5hZGQoXCJhbGVydFwiKTtcclxuICAgICAgICBsb2dpbi5jbGFzc0xpc3QuYWRkKFwiYWxlcnQtc3VjY2Vzc1wiKTtcclxuICAgICAgICBsb2dpbi5jbGFzc0xpc3QuYWRkKFwiYWxlcnQtZGlzbWlzc2libGVcIik7XHJcbiAgICAgICAgbG9naW4uY2xhc3NMaXN0LmFkZChcImZhZGVcIik7XHJcbiAgICAgICAgbG9naW4uY2xhc3NMaXN0LmFkZChcInNob3dcIik7XHJcbiAgICAgICAgJCgnLmxvZ2luJykuZW1wdHkoKS5odG1sKGA8c3Ryb25nPldlbGNvbWUgJHtsb2NhbFN0b3JhZ2UuZ2V0SXRlbSgndXNlcm5hbWUnKT8udG9VcHBlckNhc2UoKX0gJm5ic3A7PC9zdHJvbmc+IExvZ2dlZCBpbi5cclxuICAgICAgPGJ1dHRvbiB0eXBlPVwiYnV0dG9uXCIgY2xhc3M9XCJjbG9zZVwiIGRhdGEtZGlzbWlzcz1cImFsZXJ0XCIgYXJpYS1sYWJlbD1cIkNsb3NlXCI+XHJcbiAgICAgICAgPHNwYW4gYXJpYS1oaWRkZW49XCJ0cnVlXCI+JnRpbWVzOzwvc3Bhbj48L2J1dHRvbj5gKTtcclxuICAgICAgICAvL2NoZWNrIGlmIGl0IGlzIHdpc2hsaXN0XHJcbiAgICAgICAgaWYgKHdpbmRvdy5sb2NhdGlvbi5ocmVmLmluY2x1ZGVzKCcvd2lzaGxpc3QnKSkge1xyXG4gICAgICAgICAgLy8gbG9hZCB3aXNobGlzdCBhbmQgY2FydFxyXG4gICAgICAgICAgbGV0IGNvbnRlbnQgPSBjb250ZW50dHlwZXdpdGh0b2tlbihsb2NhbFN0b3JhZ2UuZ2V0SXRlbSgnY3VzdG9tZXJ0b2tlbicpKTtcclxuICAgICAgICAgIGNvbnNvbGUubG9nKCdjb250ZW50ICcsIGNvbnRlbnQpO1xyXG4gICAgICAgICAgc2V0YWpheCgnanNvbicsIGAke2JhY2tlbmR1cmx9L3Byb2R1Y3QvbG9hZHdpc2hsaXN0LyR7ZGVjb2RlZC5hY2t9YCwgJ2dldCcsIFwiXCIsIChyZXNwb25zZTogYW55KSA9PiB7XHJcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKCdyZXNwb25zZSAnLCByZXNwb25zZSk7XHJcbiAgICAgICAgICAgIC8vIHJlc3BvbnNlPVtdIDsgIFxyXG4gICAgICAgICAgICBpZiAocmVzcG9uc2UubGVuZ3RoID09PSAwKSB7XHJcbiAgICAgICAgICAgICAgU3dhbC5maXJlKHtcclxuICAgICAgICAgICAgICAgIGljb246ICdxdWVzdGlvbicsXHJcbiAgICAgICAgICAgICAgICB0ZXh0OiAnWW91ciBXaXNoTGlzdCBpcyBFbXB0eT8nLFxyXG4gICAgICAgICAgICAgICAgc2hvd0NhbmNlbEJ1dHRvbjogZmFsc2UsXHJcbiAgICAgICAgICAgICAgICBhbGxvd091dHNpZGVDbGljazogZmFsc2UsXHJcbiAgICAgICAgICAgICAgfSkudGhlbigocmVzdWx0OiBhbnkpID0+IHtcclxuICAgICAgICAgICAgICAgIGlmIChyZXN1bHQuaXNDb25maXJtZWQpIHtcclxuICAgICAgICAgICAgICAgICAgd2luZG93LmxvY2F0aW9uLmhyZWYgPSAnLi9tYXJrZXRwbGFjZSc7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgbGV0IHdpc2hsaXN0YnVpbGRlciA9IG5ldyBTdHJpbmdCdWlsZGVyKCk7XHJcbiAgICAgICAgICAgIC8vY29uc29sZS5sb2coJ3dpc2hsaXN0c3RvcmUgZW1wdHkgc3RvcmUgJywgd2lzaGxpc3RzdG9yZSk7XHJcbiAgICAgICAgICAgIHJlc3BvbnNlLmZvckVhY2goKGY6IGFueSkgPT4ge1xyXG4gICAgICAgICAgICAgIHdpc2hsaXN0YnVpbGRlci5hcHBlbmQoYDx0Ym9keSBpZD1cIiR7Zi5pZH1cIj5cclxuICAgICAgICAgICAgICAgPHRyPlxyXG4gICAgICAgICAgICAgICAgICAgPHRkPlxyXG4gICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9XCIvamV0Y2FydC9wcm9kdWN0cGFnZVwiIG9uY2xpY2s9XCJsb2FkcHJkKCcke2YuaWR9JywnL2pldGNhcnQvcHJvZHVjdHBhZ2UnKVwiPlxyXG4gICAgICAgICAgICAgICAgICAgICAgIDxpbWcgc3JjPVwiJHtiYWNrZW5kdXJsfS9qZXRzdG9yZS8ke2YuaW1hZ2V1cmx9XCIgYWx0PVwiXCI+PC9hPlxyXG4gICAgICAgICAgICAgICAgICAgPC90ZD5cclxuICAgICAgICAgICAgICAgICAgIDx0ZD48YSBocmVmPVwiI1wiPiR7Zi5wcm9kdWN0bmFtZX08L2E+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cIm1vYmlsZS1jYXJ0LWNvbnRlbnQgcm93XCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJjb2wteHMtM1wiPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHA+aW4gc3RvY2s8L3A+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiY29sLXhzLTNcIj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxoMiBjbGFzcz1cInRkLWNvbG9yXCI+TiR7KHBhcnNlRmxvYXQoZi5wcm9kdWN0cHJpY2UpLnRvRml4ZWQoMikucmVwbGFjZSgvXFxkKD89KFxcZHszfSkrXFwuKS9nLCAnJCYsJykpfTwvaDI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiY29sLXhzLTNcIj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxoMiBjbGFzcz1cInRkLWNvbG9yXCI+PGEgaHJlZj1cIiNcIiBjbGFzcz1cImljb24gbXItMVwiPjxpIGNsYXNzPVwidGktY2xvc2VcIj48L2k+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9hPjxhIGhyZWY9XCIjXCIgY2xhc3M9XCJjYXJ0XCI+PGkgY2xhc3M9XCJ0aS1zaG9wcGluZy1jYXJ0XCI+PC9pPjwvYT48L2gyPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgIDwvdGQ+XHJcbiAgICAgICAgICAgICAgICAgICA8dGQ+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgPGgyPk4keyhwYXJzZUZsb2F0KGYucHJvZHVjdHByaWNlKS50b0ZpeGVkKDIpLnJlcGxhY2UoL1xcZCg/PShcXGR7M30pK1xcLikvZywgJyQmLCcpKX08L2gyPlxyXG4gICAgICAgICAgICAgICAgICAgPC90ZD5cclxuICAgICAgICAgICAgICAgICAgIDx0ZD5cclxuICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9XCJqYXZhc2NyaXB0OnZvaWQoMClcIiBjbGFzcz1cImljb24gbXItM1wiPlxyXG4gICAgICAgICAgICAgICAgICAgPGkgY2xhc3M9XCJ0aS1jbG9zZVwiIHRpdGxlPVwicmVtb3ZlXCIgb25jbGljaz1cInJlbW92ZVJvdygnJHtmLmlkfScpXCI+PC9pPjwvYT5cclxuICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj1cImphdmFzY3JpcHQ6dm9pZCgwKVwiIG9uY2xpY2s9XCJhZGR0b2NhcnRmb3J3aXNobGlzdCgnJHtmLmlkfScpXCIgY2xhc3M9XCJjYXJ0XCI+PGkgY2xhc3M9XCJ0aS1zaG9wcGluZy1jYXJ0XCIgdGl0bGU9XCJhZGQgdG8gY2FydFwiPjwvaT48L2E+XHJcbiAgICAgICAgICAgICAgICAgICA8L3RkPlxyXG4gICAgICAgICAgICAgICAgICAgIDwvdHI+PC90Ym9keT5gKTtcclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgIC8vIHNldCBzZXNzaW9uc3RvcmFnZSBhZnJlc2ggXHJcbiAgICAgICAgICAgIHNlc3Npb25TdG9yYWdlLnNldEl0ZW0oJ3dpc2hsaXN0JywgSlNPTi5zdHJpbmdpZnkocmVzcG9uc2UpKTtcclxuICAgICAgICAgICAgJCgnI3dpc2hsaXN0dGFibGUnKS5hcHBlbmQod2lzaGxpc3RidWlsZGVyLnRvU3RyaW5nKCkpO1xyXG4gICAgICAgICAgfSwgKCkgPT4geyB9LCBjb250ZW50KTtcclxuICAgICAgICB9XHJcbiAgICAgICAgaWYgKHdpbmRvdy5sb2NhdGlvbi5ocmVmLmluY2x1ZGVzKCcvY2FydCcpKSB7XHJcbiAgICAgICAgICBsZXQgY29udGVudCA9IGNvbnRlbnR0eXBld2l0aHRva2VuKGxvY2FsU3RvcmFnZS5nZXRJdGVtKCdjdXN0b21lcnRva2VuJykpO1xyXG4gICAgICAgICAgY29uc29sZS5sb2coJ2NvbnRlbnQgJywgY29udGVudCk7XHJcbiAgICAgICAgICBzZXRhamF4KCdqc29uJywgYCR7YmFja2VuZHVybH0vcHJvZHVjdC9sb2FkY2FydGxpc3QvJHtkZWNvZGVkLmFja31gLCAnZ2V0JywgXCJcIiwgKHN0b3JlOiBhbnkpID0+IHtcclxuICAgICAgICAgICAgY29uc29sZS5sb2coJ3Jlc3BvbnNlICcsIHN0b3JlKTtcclxuICAgICAgICAgICAgLy8gcmVzcG9uc2U9W10gOyAgXHJcbiAgICAgICAgICAgIGlmIChzdG9yZS5sZW5ndGggPT09IDApIHtcclxuICAgICAgICAgICAgICBTd2FsLmZpcmUoe1xyXG4gICAgICAgICAgICAgICAgaWNvbjogJ3F1ZXN0aW9uJyxcclxuICAgICAgICAgICAgICAgIHRleHQ6ICdZb3VyIENhcnQgaXMgRW1wdHk/JyxcclxuICAgICAgICAgICAgICAgIHNob3dDYW5jZWxCdXR0b246IGZhbHNlLFxyXG4gICAgICAgICAgICAgICAgYWxsb3dPdXRzaWRlQ2xpY2s6IGZhbHNlLFxyXG4gICAgICAgICAgICAgIH0pLnRoZW4oKHJlc3VsdDogYW55KSA9PiB7XHJcbiAgICAgICAgICAgICAgICBpZiAocmVzdWx0LmlzQ29uZmlybWVkKSB7XHJcbiAgICAgICAgICAgICAgICAgIHdpbmRvdy5sb2NhdGlvbi5ocmVmID0gJy4vbWFya2V0cGxhY2UnO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIC8vbG9hZCBjYXJ0IGFmcmVzaCBmcm9tIGRiIFxyXG4gICAgICAgICAgICAvL2NvbnN0IHN0b3JlID0gSlNPTi5wYXJzZShzZXNzaW9uU3RvcmFnZS5nZXRJdGVtKCdzdG9yZScpIGFzIHN0cmluZyk7XHJcbiAgICAgICAgICAgIC8vICQoJyNjdXN0b21lcmNhcnQnKS5lbXB0eSgpLmh0bWwocHJvY2Vzc2NhcnQoKSkgO1xyXG4gICAgICAgICAgICBjb25zb2xlLmxvZygnc3RvcmUgJywgc3RvcmUpO1xyXG4gICAgICAgICAgICBpZiAoc3RvcmUgPT09IG51bGwgfHwgc3RvcmUuaW5jbHVkZXMobnVsbCkpIHtcclxuICAgICAgICAgICAgICAkKCcjY3VzdG9tZXJjYXJ0JykuZW1wdHkoKS5odG1sKGA8Y2VudGVyPjxwPllvdXIgY2FydCBpcyBlbXB0eTwvcD48L2NlbnRlcj5gKTtcclxuICAgICAgICAgICAgICByZXR1cm47XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgY29uc3QgdG90YWxib2R5ID0gc3RvcmUubWFwKChlbGVtOiBhbnkpID0+IHtcclxuICAgICAgICAgICAgICBjb25zb2xlLmxvZygnZWxlbWVudCAnLCBlbGVtKTtcclxuICAgICAgICAgICAgICAvL3Byb2Nlc3NpbmcgZWFjaCBvYmplY3QgaW4gY2FydCBcclxuICAgICAgICAgICAgICByZXR1cm4gYFxyXG4gICAgICAgICAgICAgICA8dGJvZHk+XHJcbiAgICAgICAgICAgICAgICAgPHRyPlxyXG4gICAgICAgICAgICAgICAgICAgPHRkPlxyXG4gICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9XCIjXCI+PGltZyBzcmM9XCIke2JhY2tlbmR1cmx9L2pldHN0b3JlLyR7ZWxlbS5pbWFnZXVybH1cIiBhbHQ9XCJcIiAvPjwvYT5cclxuICAgICAgICAgICAgICAgICAgIDwvdGQ+XHJcbiAgICAgICAgICAgICAgICAgICA8dGQ+XHJcbiAgICAgICAgICAgICAgICAgICA8YSBocmVmPVwiI1wiPiR7ZWxlbS5wcm9kdWN0bmFtZX08L2E+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cIm1vYmlsZS1jYXJ0LWNvbnRlbnQgcm93XCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJjb2wteHMtM1wiPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cInF0eS1ib3hcIj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiaW5wdXQtZ3JvdXBcIj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGlucHV0IHR5cGU9XCJ0ZXh0XCIgbmFtZT1cInF1YW50aXR5XCIgXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNsYXNzPVwiZm9ybS1jb250cm9sIGlucHV0LW51bWJlclwiXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YWx1ZT1cIiR7cGFyc2VGbG9hdChlbGVtLnByb2R1Y3RxdWFudGl0eSl9XCIgLz5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImNvbC14cy0zXCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aDIgY2xhc3M9XCJ0ZC1jb2xvclwiPiR7ZWxlbS5wcm9kdWN0cHJpY2V9PC9oMj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJjb2wteHMtM1wiPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGgyIGNsYXNzPVwidGQtY29sb3JcIj48YSBocmVmPVwiI1wiIGNsYXNzPVwiaWNvblwiPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aSBjbGFzcz1cInRpLWNsb3NlXCI+PC9pPjwvYT5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvaDI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgPC90ZD5cclxuICAgICAgICAgICAgICAgICAgIDx0ZD5cclxuICAgICAgICAgICAgICAgICAgICAgICA8aDI+TiR7KHBhcnNlRmxvYXQoZWxlbS5wcm9kdWN0cHJpY2UpKS50b0ZpeGVkKDIpLnJlcGxhY2UoL1xcZCg/PShcXGR7M30pK1xcLikvZywgJyQmLCcpfTwvaDI+XHJcbiAgICAgICAgICAgICAgICAgICA8L3RkPlxyXG4gICAgICAgICAgICAgICAgICAgPHRkPlxyXG4gICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJxdHktYm94XCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJpbnB1dC1ncm91cFwiPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGlucHV0IHR5cGU9XCJudW1iZXJcIiBuYW1lPVwicXVhbnRpdHlcIiBcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNsYXNzPVwiZm9ybS1jb250cm9sIGlucHV0LW51bWJlclwiIHJlYWRvbmx5XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFsdWU9XCIke3BhcnNlRmxvYXQoZWxlbS5wcm9kdWN0cXVhbnRpdHkpfVwiIC8+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgPC90ZD5cclxuICAgICAgICAgICAgICAgICAgIDx0ZD5cclxuICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9XCJqYXZhc2NyaXB0OnZvaWQoMClcIiBjbGFzcz1cImljb24gbXItM1wiPlxyXG4gICAgICAgICAgICAgICAgICAgPGkgY2xhc3M9XCJ0aS1jbG9zZVwiIHRpdGxlPVwicmVtb3ZlXCIgb25jbGljaz1cInJlbW92ZVJvdygnJHtlbGVtLmlkfScpXCI+PC9pPjwvYT5cclxuICAgICAgICAgICAgICAgICAgIDwvdGQ+XHJcbiAgICAgICAgICAgICAgICAgICA8dGQ+XHJcbiAgICAgICAgICA8aDIgY2xhc3M9XCJ0ZC1jb2xvclwiPk4keyhwYXJzZUZsb2F0KGVsZW0ucHJvZHVjdHByaWNlKSAqIHBhcnNlRmxvYXQoZWxlbS5wcm9kdWN0cXVhbnRpdHkpKS50b0ZpeGVkKDIpLnJlcGxhY2UoL1xcZCg/PShcXGR7M30pK1xcLikvZywgJyQmLCcpfTwvaDI+XHJcbiAgICAgICAgICAgICAgICAgICA8L3RkPiAgICAgICAgICAgXHJcbiAgICAgICAgICAgICAgIDwvdHI+XHJcbiAgICAgICAgICAgPC90Ym9keT5gXHJcbiAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICAvLyAgPHRkPiR7cGFyc2VGbG9hdChlbGVtLnByb2R1Y3RwcmljZSl9PC90ZD5cclxuICAgICAgICAgICAgLy8gIDx0ZD4ke3BhcnNlRmxvYXQoZWxlbS5wcm9kdWN0cXVhbnRpdHkpfTwvdGQ+XHJcbiAgICAgICAgICAgIHZhciBidWlsZGVyID0gbmV3IFN0cmluZ0J1aWxkZXIoKTtcclxuICAgICAgICAgICAgYnVpbGRlci5hcHBlbmQoYFxyXG4gICAgICAgICAgIDx0YWJsZSBjbGFzcz1cInRhYmxlIGNhcnQtdGFibGUgdGFibGUtcmVzcG9uc2l2ZS14c1wiPlxyXG4gICAgICAgICAgICAgPHRoZWFkPlxyXG4gICAgICAgICAgIDx0ciBjbGFzc05hbWU9XCJ0YWJsZS1oZWFkXCI+XHJcbiAgICAgICAgICAgICAgIDx0aCBzY29wZT1cImNvbFwiPmltYWdlPC90aD5cclxuICAgICAgICAgICAgICAgPHRoIHNjb3BlPVwiY29sXCI+cHJvZHVjdCBuYW1lPC90aD5cclxuICAgICAgICAgICAgICAgPHRoIHNjb3BlPVwiY29sXCI+cHJpY2U8L3RoPlxyXG4gICAgICAgICAgICAgICA8dGggc2NvcGU9XCJjb2xcIj5xdWFudGl0eTwvdGg+XHJcbiAgICAgICAgICAgICAgIDx0aCBzY29wZT1cImNvbFwiPmFjdGlvbjwvdGg+XHJcbiAgICAgICAgICAgICAgIDx0aCBzY29wZT1cImNvbFwiPnRvdGFsPC90aD5cclxuICAgICAgICAgICA8L3RyPlxyXG4gICAgICAgICAgICAgPC90aGVhZD5gKTtcclxuICAgICAgICAgICAgdG90YWxib2R5LmZvckVhY2goKGVsOiBhbnkpID0+IHtcclxuICAgICAgICAgICAgICBidWlsZGVyLmFwcGVuZChlbCk7XHJcbiAgICAgICAgICAgIH0pXHJcbiAgICAgICAgICAgIGJ1aWxkZXIuYXBwZW5kKGA8L3RhYmxlPmApO1xyXG4gICAgICAgICAgICBjb25zdCB0b3RhbHByaWNlID0gc3RvcmUubWFwKChyZXM6IGFueSkgPT4ge1xyXG4gICAgICAgICAgICAgIHJldHVybiByZXMucHJvZHVjdHByaWNlICogcmVzLnByb2R1Y3RxdWFudGl0eTtcclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKCd0b3RhbHByaWNlJywgdG90YWxwcmljZSk7XHJcbiAgICAgICAgICAgIGJ1aWxkZXIuYXBwZW5kKGA8dGFibGUgY2xhc3NOYW1lPVwidGFibGUgY2FydC10YWJsZSB0YWJsZS1yZXNwb25zaXZlLW1kXCI+XHJcbiAgICAgICAgICAgICAgICAgICAgPHRmb290PlxyXG4gICAgICAgICAgICAgICAgICAgICAgPHRyPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICA8dGQ+VG90YWwgUHJpY2UgOjwvdGQ+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICA8aDI+TiR7KHBhcnNlRmxvYXQodG90YWxwcmljZS5yZWR1Y2UoKGE6IGFueSwgYjogYW55KSA9PiBhICsgYiwgMC4wKSkudG9GaXhlZCgyKS5yZXBsYWNlKC9cXGQoPz0oXFxkezN9KStcXC4pL2csICckJiwnKSl9PC9oMj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgPC90ZD5cclxuICAgICAgICAgICAgICAgICAgICAgIDwvdHI+XHJcbiAgICAgICAgICAgICAgICAgICAgPC90Zm9vdD5cclxuICAgICAgICAgICAgICAgICAgPC90YWJsZT5cclxuICAgICAgICAgICAgICAgICAgYCk7XHJcbiAgICAgICAgICAgIHNlc3Npb25TdG9yYWdlLnNldEl0ZW0oJ3N0b3JlJywgSlNPTi5zdHJpbmdpZnkoc3RvcmUpKTtcclxuICAgICAgICAgICAgJCgnI2N1c3RvbWVyY2FydCcpLmVtcHR5KCkuaHRtbChidWlsZGVyLnRvU3RyaW5nKCkpO1xyXG4gICAgICAgICAgfSwgKCkgPT4geyB9LCBjb250ZW50KTtcclxuICAgICAgICB9XHJcbiAgICAgICAgaWYod2luZG93LmxvY2F0aW9uLmhyZWYuaW5jbHVkZXMoJy9jaGVja291dCcpKXtcclxuICAgICAgICAgbGV0IGlkPWxvY2FsU3RvcmFnZS5nZXRJdGVtKCdhY2snKSA7XHJcbiAgICAgICAgICBsZXQgY29udGVudCA9IGNvbnRlbnR0eXBld2l0aHRva2VuKGxvY2FsU3RvcmFnZS5nZXRJdGVtKCdjdXN0b21lcnRva2VuJykpO1xyXG4gICAgICAgICAgc2V0YWpheCgnanNvbicsIGAke2JhY2tlbmR1cmx9L3VzZXJkZXRhaWwvJHtpZH1gLCAnZ2V0JywgXCJcIiwgKHJlc3BvbnNlOiBhbnkpID0+IHtcclxuICAgICAgICAgICAgLy8gcHJvY2VzcyB0aGUgcmVzcG9uc2VcclxuICAgICAgICAgICAgbGV0IHBob25lbnVtYmVyID0gcmVzcG9uc2VbMF0ucGhvbmVudW1iZXI7XHJcbiAgICAgICAgICAgIGxldCBqc29uID0geyAuLi5yZXNwb25zZVswXSB9O1xyXG4gICAgICAgICAgICBqc29uLnBob25lID0gcGhvbmVudW1iZXI7XHJcbiAgICAgICAgICAgIGRlbGV0ZSBqc29uLnBob25lbnVtYmVyO1xyXG4gICAgICAgICAgICAvLyBqc29uID0gT2JqZWN0LmFzc2lnbih7fSwgYXJyYXkpO1xyXG4gICAgICAgICAgICAvLyBqc29uID0gYXJyYXkucmVkdWNlKChqc29uLCB2YWx1ZSwga2V5KSA9PiB7IGpzb25ba2V5XSA9IHZhbHVlOyByZXR1cm4ganNvbjsgfSwge30pO1xyXG4gICAgICAgICAgICBjb25zb2xlLmxvZygncmVzcG9uc2UgZnJvbSAgJywgcmVzcG9uc2UsICdqc29uJywganNvbik7XHJcbiAgICAgICAgICAgICQoXCIjcmVnZm9ybVwiKS5hdXRvZmlsbChqc29uKTtcclxuICAgICAgICAgIH0sICgpID0+IHsgfSwgY29udGVudCk7XHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgY2xvc2UoZSk7XHJcbiAgICAgIH0pO1xyXG4gICAgfVxyXG4gICAgZnVuY3Rpb24gY2xvc2UoZTogYW55KSB7XHJcbiAgICAgIGUucHJldmVudERlZmF1bHQoKTtcclxuICAgICAgJCgnI2V4YW1wbGVNb2RhbCcpLm1vZGFsKCdoaWRlJyk7XHJcbiAgICAgIHNldFRpbWVvdXQoKCkgPT4ge1xyXG4gICAgICAgICQoJyNleGFtcGxlTW9kYWwnKS5yZW1vdmUoKTtcclxuICAgICAgfSwgODAwKTtcclxuICAgIH1cclxuICAgIHJldHVybiAoPGRpdj5cclxuICAgICAgPGJ1dHRvbiBjbGFzc05hbWU9XCJidG4gYnRuLXByaW1hcnlcIiB0eXBlPVwiYnV0dG9uXCIgb25DbGljaz17KGUpID0+IGxvZ2luKGUpfT5Mb2dpbjwvYnV0dG9uPiZuYnNwOyZuYnNwOyZuYnNwO1xyXG4gICAgICA8YnV0dG9uIGNsYXNzTmFtZT1cImJ0biBidG4tc2Vjb25kYXJ5XCIgdHlwZT1cImJ1dHRvblwiIGRhdGEtZGlzbWlzcz1cIm1vZGFsXCIgb25DbGljaz17KGUpID0+IGNsb3NlKGUpfT5DbG9zZTwvYnV0dG9uPlxyXG4gICAgPC9kaXY+KVxyXG4gIH0pKCkpO1xyXG4gICQoJyNleGFtcGxlTW9kYWwnKS5tb2RhbCgnc2hvdycpOy8vc2hvdyBtb2RhbFxyXG59KTtcclxuXHJcbi8vIGxvZyBvdXQgY3VzdG9tZXIgXHJcbiQoJyNjdXN0bG9nb3V0Jykub24oJ2NsaWNrJywgKGU6IGFueSkgPT4ge1xyXG4gIGUucHJldmVudERlZmF1bHQoKTtcclxuICBTd2FsLmZpcmUoe1xyXG4gICAgaWNvbjogJ3F1ZXN0aW9uJyxcclxuICAgIHRleHQ6ICdEbyB5b3Ugd2FudCB0byBsb2cgb3V0ID8nLFxyXG4gICAgc2hvd0NhbmNlbEJ1dHRvbjogdHJ1ZSxcclxuICAgIGFsbG93T3V0c2lkZUNsaWNrOiBmYWxzZSxcclxuICB9KS50aGVuKChyZXN1bHQ6IGFueSkgPT4ge1xyXG4gICAgbG9jYWxTdG9yYWdlLmNsZWFyKCk7XHJcbiAgICBzZXNzaW9uU3RvcmFnZS5jbGVhcigpO1xyXG4gICAgd2luZG93LmxvY2F0aW9uLmhyZWYgPSAnLi9pbmRleCc7XHJcbiAgfSk7XHJcbn0pO1xyXG4vL2dldCBzdGF0ZSBmcm9tIGNvdW50cmllcyAuYWxzbyB1c2UgY2hlY2tvdXRcclxuJCgnI2NvdW50cnknKS5vbignY2hhbmdlJywgKGU6IGFueSkgPT4ge1xyXG4gIGUucHJldmVudERlZmF1bHQoKTtcclxuICAvL2FsZXJ0KGUudGFyZ2V0LnZhbHVlLnRvTG93ZXJDYXNlKCkpIDtcclxuICBsZXQgY291bnRyeWFuZHN0YXRlcyA9IHtcclxuICAgIFwiY291bnRyeVwiOiBlLnRhcmdldC52YWx1ZS50b0xvd2VyQ2FzZSgpXHJcbiAgfVxyXG4gIHNldGFqYXgoJ2pzb24nLCBgaHR0cHM6Ly9jb3VudHJpZXNub3cuc3BhY2UvYXBpL3YwLjEvY291bnRyaWVzL3N0YXRlc2AsICdwb3N0JywgSlNPTi5zdHJpbmdpZnkoY291bnRyeWFuZHN0YXRlcyksIChyZXNwb25zZTogYW55KSA9PiB7XHJcbiAgICAvLyBwcm9jZXNzIHRoZSByZXNwb25zZVxyXG4gICAgLy8gY29uc29sZS5sb2coJ3Jlc3BvbnNlICcscmVzcG9uc2UpO1xyXG4gICAgcmVzcG9uc2UgPSByZXNwb25zZS5kYXRhLnN0YXRlcy5tYXAoKGU6IGFueSkgPT4ge1xyXG4gICAgICByZXR1cm4gYDxvcHRpb24gdmFsdWU9JyR7ZS5uYW1lfSc+JHtlLm5hbWV9PC9vcHRpb24+YDtcclxuICAgIH0pO1xyXG4gICAgJChcIiNzdGF0ZVwiKS5lbXB0eSgpLmh0bWwocmVzcG9uc2Uuam9pbihcIlwiKSk7XHJcbiAgfSwgKCkgPT4geyB9LCBjb250ZW50dHlwZSk7XHJcbn0pO1xyXG5cclxuLy8gZ2V0IGNpdGllcyBmcm9tIHN0YXRlcyBcclxuJChcIiNzdGF0ZVwiKS5vbignY2hhbmdlJywgKGU6IGFueSkgPT4ge1xyXG4gIGNvbnNvbGUubG9nKFwiQ291bnRyeSBcIiwgJCgnI2NvdW50cnknKS50ZXh0KCkpO1xyXG4gIC8vIGFsZXJ0KCQoJyNjb3VudHJ5JykudGV4dCgpKSA7XHJcbiAgLy8gYWxlcnQoJCgnI2NvdW50cnknKS52YWwoKSkgO1xyXG4gIGUucHJldmVudERlZmF1bHQoKTtcclxuICBsZXQgY291bnRyeWFuZHN0YXRlcyA9IHtcclxuICAgIFwiY291bnRyeVwiOiAkKCcjY291bnRyeScpLnZhbCgpLFxyXG4gICAgXCJzdGF0ZVwiOiBlLnRhcmdldC52YWx1ZVxyXG4gIH1cclxuICBzZXRhamF4KCdqc29uJywgYGh0dHBzOi8vY291bnRyaWVzbm93LnNwYWNlL2FwaS92MC4xL2NvdW50cmllcy9zdGF0ZS9jaXRpZXNgLCAncG9zdCcsIEpTT04uc3RyaW5naWZ5KGNvdW50cnlhbmRzdGF0ZXMpLCAocmVzcG9uc2U6IGFueSkgPT4ge1xyXG4gICAgLy8gcHJvY2VzcyB0aGUgcmVzcG9uc2VcclxuICAgIC8vIGNvbnNvbGUubG9nKCdyZXNwb25zZSAnLHJlc3BvbnNlLmRhdGEpO1xyXG4gICAgcmVzcG9uc2UgPSByZXNwb25zZS5kYXRhLm1hcCgoZTogYW55KSA9PiB7XHJcbiAgICAgIHJldHVybiBgPG9wdGlvbiB2YWx1ZT0nJHtlfSc+JHtlfTwvb3B0aW9uPmA7XHJcbiAgICB9KTtcclxuICAgIHJlc3BvbnNlLnB1c2goYDxvcHRpb24gdmFsdWU9XCJPdGhlclwiPk90aGVyPC9vcHRpb24+YCk7XHJcbiAgICAkKFwiI2NpdHlcIikuZW1wdHkoKS5odG1sKHJlc3BvbnNlLmpvaW4oXCJcIikpO1xyXG4gIH0sICgpID0+IHsgfSwgY29udGVudHR5cGUpO1xyXG59KTtcclxuLy9jcmVhdGUgYWNjb3VudFxyXG4kKCcjY3JlYXRlYWNjb3VudCcpLm9uKCdjbGljaycsIChlOiBhbnkpID0+IHtcclxuICBlLnByZXZlbnREZWZhdWx0KCk7XHJcbiAgLy8gIGludmFsaWRhdGV0b2tlbjIoand0X2RlY29kZSwgJ2N1c3RvbWVydG9rZW4nKTsgLy8gY2hlY2sgdG9rZW5cclxuICBhbGVydGlmeS5jb25maXJtKCdSZWdpc3RyYXRpb24nLCAnRG8geW91IHdhbnQgdG8gUmVnaXN0ZXIgTm93ID8nLCBmdW5jdGlvbiAoKSB7XHJcbiAgICAvLyBjb25zdCBmb3JtMiA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdyZWdmb3JtJykgYXMgSFRNTEZvcm1FbGVtZW50IDtcclxuICAgIGxldCBmb3JtID0gSlNPTi5wYXJzZSgkKCcjcmVnZm9ybScpLmpmb3JtKCkpO1xyXG4gICAgY29uc29sZS5sb2coJyBmb3JtICcsIGZvcm0pO1xyXG4gICAgaWYgKGZvcm0ucGhvbmUgPT09IFwiXCIgfHwgZm9ybS5waG9uZSA9PT0gbnVsbCkge1xyXG4gICAgICB0b2FzdHIuZXJyb3IoJ1Bob25lIGNhbm5vdCBiZSBlbXB0eScpO1xyXG4gICAgICByZXR1cm47XHJcbiAgICB9XHJcbiAgICBpZiAoZm9ybS5wYXNzd29yZCA9PT0gXCJcIiB8fCBmb3JtLnBhc3N3b3JkID09PSBudWxsKSB7XHJcbiAgICAgIHRvYXN0ci5lcnJvcignUGFzc3dvcmQgY2Fubm90IGJlIGVtcHR5Jyk7XHJcbiAgICAgIHJldHVybjtcclxuICAgIH1cclxuICAgIGlmIChmb3JtLnBhc3N3b3JkID09PSBcIlwiIHx8IGZvcm0ucGFzc3dvcmQgPT09IG51bGwpIHtcclxuICAgICAgdG9hc3RyLmVycm9yKCdjb25maXJtcGFzc3dvcmQgY2Fubm90IGJlIGVtcHR5Jyk7XHJcbiAgICAgIHJldHVybjtcclxuICAgIH1cclxuICAgIGlmIChmb3JtLmVtYWlsID09PSBcIlwiIHx8IGZvcm0uZW1haWwgPT09IG51bGwpIHtcclxuICAgICAgdG9hc3RyLmVycm9yKCdQaG9uZSBjYW5ub3QgYmUgZW1wdHknKTtcclxuICAgICAgcmV0dXJuO1xyXG4gICAgfVxyXG4gICAgaWYgKGZvcm0uY291bnRyeSA9PT0gXCJcIiB8fCBmb3JtLmNvdW50cnkgPT09IG51bGwpIHtcclxuICAgICAgdG9hc3RyLmVycm9yKCdDb3VudHJ5IGNhbm5vdCBiZSBlbXB0eScpO1xyXG4gICAgICByZXR1cm47XHJcbiAgICB9XHJcbiAgICBpZiAoZm9ybS5zdGF0ZSA9PT0gXCJcIiB8fCBmb3JtLnN0YXRlID09PSBudWxsKSB7XHJcbiAgICAgIHRvYXN0ci5lcnJvcignU3RhdGUgY2Fubm90IGJlIGVtcHR5Jyk7XHJcbiAgICAgIHJldHVybjtcclxuICAgIH1cclxuICAgIHNlc3Npb25TdG9yYWdlLnNldEl0ZW0oJ2Zvcm0nLCBKU09OLnN0cmluZ2lmeShmb3JtKSk7XHJcbiAgICBzZXRhamF4KCd0ZXh0JywgYCR7YmFja2VuZHVybH0vY3VzdG9tZXIvcmVnaXN0ZXJgLCAncG9zdCcsIEpTT04uc3RyaW5naWZ5KGZvcm0pLCAocmVzcG9uc2U6IGFueSkgPT4ge1xyXG4gICAgICAvLyBwcm9jZXNzIHRoZSByZXNwb25zZVxyXG4gICAgICBjb25zb2xlLmxvZygncmVzcG9uc2UgJywgcmVzcG9uc2UpO1xyXG4gICAgICBTd2FsLmZpcmUoe1xyXG4gICAgICAgIGljb246ICdpbmZvJyxcclxuICAgICAgICB0ZXh0OiByZXNwb25zZSArICdQbGVhc2UgY2hlY2sgeW91ciBFbWFpbCBmb3IgQWNjb3VudCBBY3RpdmF0aW9uJyxcclxuICAgICAgICBzaG93Q2FuY2VsQnV0dG9uOiB0cnVlLFxyXG4gICAgICAgIGFsbG93T3V0c2lkZUNsaWNrOiBmYWxzZSxcclxuICAgICAgfSkudGhlbigocmVzdWx0OiBhbnkpID0+IHtcclxuICAgICAgICBpZiAocmVzdWx0LmlzQ29uZmlybWVkKSB7XHJcbiAgICAgICAgICAoZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3JlZ2Zvcm0nKSBhcyBIVE1MRm9ybUVsZW1lbnQpLnJlc2V0KCk7XHJcbiAgICAgICAgICB3aW5kb3cubG9jYXRpb24uaHJlZiA9IFwiLi9wcm9kdWN0cGFnZVwiO1xyXG4gICAgICAgIH1cclxuICAgICAgfVxyXG4gICAgICApO1xyXG4gICAgfSwgKCkgPT4geyB9LCBjb250ZW50dHlwZSk7XHJcbiAgICAvLyBmb3Jtc3VibWl0KGAke2JhY2tlbmR1cmx9L2N1c3RvbWVyL3JlZ2lzdGVyYCwgZm9ybSwgbnVsbCwgJ3RleHQnLCAncG9zdCcsIChpZDogc3RyaW5nKSA9PiB7XHJcbiAgICAvLyAgICQoXCIjZXJyb3JcIikuZW1wdHkoKS5odG1sKCc8YnIvPjxkaXYgY2xhc3M9XCJhbGVydCBhbGVydC1zdWNjZXNzXCIgc3R5bGU9XCJkaXNwbGF5OmlubGluZS1ibG9jaztcIj4gPGEgaHJlZj1cIi9qZXRjYXJ0L2NoZWNrb3V0XCIgY2xhc3M9XCJidG4gYnRuLXByaW1hcnlcIj5CYWNrPC9hPiAmbmJzcDsmbmJzcDs8c3BhbiBjbGFzcz1cImdseXBoaWNvbiBnbHlwaGljb24taW5mby1zaWduXCI+PC9zcGFuPiAmbmJzcDsgJyArICdSZWdpc3RyYXRpb24gaXMgU3VjY2Vzc2Z1bCcgKyAnICE8L2Rpdj4nKTtcclxuICAgIC8vICAgYWxlcnRpZnkuc3VjY2VzcygnQWNjb3VudCBjcmVhdGlvbiBzdWNjZXNzZnVsJyk7XHJcbiAgICAvLyB9LCAoKSA9PiB7XHJcbiAgICAvLyAgICQoXCIjZXJyb3JcIikuZW1wdHkoKS5odG1sKCc8YnIvPjxkaXYgY2xhc3M9XCJhbGVydCBhbGVydC1kYW5nZXJcIiBzdHlsZT1cImRpc3BsYXk6aW5saW5lLWJsb2NrO1wiPiA8c3BhbiBjbGFzcz1cImdseXBoaWNvbiBnbHlwaGljb24taW5mby1zaWduXCI+PC9zcGFuPiAmbmJzcDsgJyArICdSZWdpc3RyYXRpb24gaXMgIG5vdCBTdWNjZXNzZnVsJyArICcgITwvZGl2PicpO1xyXG4gICAgLy8gfSk7XHJcbiAgfSxcclxuICAgIGZ1bmN0aW9uICgpIHtcclxuICAgICAgYWxlcnRpZnkuZXJyb3IoJ2NhbmNlbGxlZCcpO1xyXG4gICAgfVxyXG4gICk7XHJcbn0pO1xyXG4vLyQoJyQnKVxyXG4vLyByZWdpc3RlcmF0aW9uXHJcbi8vICQoJyNjcmVhdGVhY2NvdW50Jykub24oJ2NsaWNrJywoZTphbnkpPT57XHJcbi8vICAgZS5wcmV2ZW50RGVmYXVsdCgpIDtcclxuLy8gICBhbGVydCgnc2VlbicpIDtcclxuLy8gfSk7XHJcbi8vY3JlYXRlIGJpbGxpbmcgc3lzdGVtIHVuZGVyICBjaGVjayBvdXRcclxuJCgnI2NyZWF0ZWJpbGxpbmcnKS5vbignY2xpY2snLCAoZTogYW55KSA9PiB7XHJcbiAgLy8gYWxlcnQoKSA7XHJcbiAgZS5wcmV2ZW50RGVmYXVsdCgpO1xyXG4gIGNvbnN0IGFjY291bnRvcHRpb24gPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcImFjY291bnQtb3B0aW9uXCIpIGFzIEhUTUxJbnB1dEVsZW1lbnQ7XHJcbiAgLy8gYWxlcnQoJ3dvcmtzJykgO1xyXG4gIC8vcmV0dXJuIDtcclxuICBpZiAoYWNjb3VudG9wdGlvbi5jaGVja2VkKSB7XHJcbiAgICB3aW5kb3cubG9jYXRpb24uaHJlZiA9IFwiL2pldGNhcnQvcmVnaXN0ZXJcIjtcclxuICB9XHJcbiAgZWxzZSBpZiAoIWFjY291bnRvcHRpb24uY2hlY2tlZCkge1xyXG4gICAgYWxlcnRpZnkuY29uZmlybSgnQmlsbGluZyBEZXRhaWxzJyxcclxuICAgICAgJ0RvIHlvdSB3YW50IGNyZWF0ZSBCaWxsaW5nIERldGFpbHMgYW5kIG9yZGVyIHRoaXMvdGhlc2UgR29vZHMvUHJvZHVjdC9JdGVtcyA/JyxcclxuICAgICAgZnVuY3Rpb24gKCkge1xyXG4gICAgICAgIGxldCBwYXltZW50Z3JvdXAgPSBkb2N1bWVudC5nZXRFbGVtZW50c0J5TmFtZSgncGF5bWVudGdyb3VwJyk7XHJcbiAgICAgICAgLy8gY29uc3QgcGF5bWVudG9uZGVsaXZlcnkgID0gKEFycmF5LmZyb20ocGF5bWVudGdyb3VwKVswXSBhcyBIVE1MSW5wdXRFbGVtZW50KS5jaGVja2VkIDtcclxuICAgICAgICBsZXQgcGF5bWVudHdpdGhkZWJpdGNhcmQgPSAoQXJyYXkuZnJvbShwYXltZW50Z3JvdXApWzFdIGFzIEhUTUxJbnB1dEVsZW1lbnQpLmNoZWNrZWQ7XHJcbiAgICAgICAgLy8gbGV0IHNlbGVjdHR5cGVyYWRpbyA9IEFycmF5LmZyb20oZG9jdW1lbnQuZ2V0RWxlbWVudHNCeU5hbWUoJ3NlbGVjdHlwZScpIGFzIE5vZGVMaXN0T2Y8SFRNTElucHV0RWxlbWVudD4pO1xyXG4gICAgICAgIChkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgncGF5bWVudC01JykgYXMgSFRNTElucHV0RWxlbWVudCkub25jbGljayA9IGZ1bmN0aW9uIChlOiBhbnkpIHtcclxuICAgICAgICAgIGNvbnNvbGUubG9nKGUudGFyZ2V0LnZhbHVlLCAnIGFuZCAnLCBlLnRhcmdldC5jaGVja2VkKTtcclxuICAgICAgICAgIGlmIChlLnRhcmdldC5jaGVja2VkKSB7XHJcbiAgICAgICAgICAgIHBheW1lbnR3aXRoZGViaXRjYXJkID0gZS50YXJnZXQuY2hlY2tlZDtcclxuICAgICAgICAgIH1cclxuICAgICAgICAgIGNvbnNvbGUubG9nKCdBcnJheSAnLCBwYXltZW50d2l0aGRlYml0Y2FyZCk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGlmIChwYXltZW50d2l0aGRlYml0Y2FyZCA9PT0gZmFsc2UpIHtcclxuICAgICAgICAgIGFsZXJ0aWZ5LmNvbmZpcm0oKS5kZXN0cm95KCk7XHJcbiAgICAgICAgICB0b2FzdHIuZXJyb3IoJ1BscyBDaG9vc2UgZWl0aGVyIG9uZSBvZiB0aGUgdHdvIG9wdGlvbnMnKTtcclxuICAgICAgICAgIHRocm93IG5ldyBFcnJvcignb3B0aW9uIGVyb3InKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgbGV0IGZvcm0gPSBKU09OLnBhcnNlKCQoJyNyZWdmb3JtJykuamZvcm0oKSk7XHJcbiAgICAgICAvLyBjb25zb2xlLmxvZygndXNlcmlkICcsIGxvY2FsU3RvcmFnZS5nZXRJdGVtKCdhY2snKSwgJ2Zvcm0nLCBmb3JtKTtcclxuICAgICAgICBpZiAoIWxvY2FsU3RvcmFnZS5nZXRJdGVtKCdhY2snKSkge1xyXG4gICAgICAgICAgZm9ybSA9IHt9O1xyXG4gICAgICAgICAgaWYgKCQuaXNFbXB0eU9iamVjdChmb3JtKSkge1xyXG4gICAgICAgICAgICBhbGVydGlmeS5jb25maXJtKCkuZGVzdHJveSgpO1xyXG4gICAgICAgICAgICB0b2FzdHIuZXJyb3IoJ1BsZWFzZSBmaWxsIHRoZSBCaWxsaW5nIERldGFpbHMnKTtcclxuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdPcHRpb24gZXJyb3InKTtcclxuICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICAgICAgZm9ybS50b3RhbCA9ICQoJyN0b3RhbCcpLnRleHQoKTtcclxuICAgICAgICAvLyBjb25zb2xlLmxvZygnZm9ybScsIGZvcm0pO1xyXG4gICAgICAgIHZhciB0YWJsZWRhdGEgPSAkKCcucXR5JykudGFibGVUb0pTT04oKTtcclxuICAgICAgIC8vIGNvbnNvbGUubG9nKCcgdGFibGUgJywgdGFibGVkYXRhKTsvL2FycmFuZ2UgYW5kIHByb2Nlc3MgZm9yIG9yZGVyIFxyXG4gICAgICAgIGxldCBvcmRlcmFycmF5ID0gW107XHJcbiAgICAgICAgY29uc3QgbXlzdG9yZSA9IEpTT04ucGFyc2Uoc2Vzc2lvblN0b3JhZ2UuZ2V0SXRlbSgnc3RvcmUnKSBhcyBzdHJpbmcpOyAvLyBnZXQgc2Vzc2lvbiBzdG9yZVxyXG4gICAgICAgIC8vY29uc29sZS5sb2coJ215c3RvcmUnLCBteXN0b3JlKTtcclxuICAgICAgICBmb3IgKGxldCBwcmQgb2YgdGFibGVkYXRhKSB7XHJcbiAgICAgICAgICAvL2NvbnNvbGUubG9nKCdwcm9kdWN0ICcgLCBwcmQpIDtcclxuICAgICAgICAgIGNvbnN0IG9yZGVyb2JqID0ge30gYXMgb3JkZXI7ICAvL2Nhc3QgdG8gb3JkZXIgXHJcbiAgICAgICAgICBvcmRlcm9iai5wcm9kdWN0bmFtZSA9IHByZC5wcm9kdWN0O1xyXG4gICAgICAgICAgZm9yIChsZXQgcHJkc3RvcmUgb2YgbXlzdG9yZSkge1xyXG4gICAgICAgICAgICBjb25zb2xlLmxvZyhcInByZHN0b3JlLnByb2R1Y3RuYW1lID09PSBwcmQucHJvZHVjdCBcIixwcmRzdG9yZS5pZCA9PT0gcHJkLnByb2R1Y3QpO1xyXG4gICAgICAgICAgICBpZiAocHJkc3RvcmUucHJvZHVjdCA9PT0gcHJkLnByb2R1Y3RuYW1lKSB7XHJcbiAgICAgICAgICAgICAgb3JkZXJvYmoucHJvZHVjdGlkID0gcHJkc3RvcmUuaWQ7XHJcbiAgICAgICAgICAgICAgb3JkZXJvYmoudmVuZG9ybmFtZSAgPSBwcmRzdG9yZS52ZW5kb3JuYW1lXHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgIH1cclxuICAgICAgICAgIG9yZGVyb2JqLnByaWNlID0gcHJkLnByaWNlO1xyXG4gICAgICAgICAgb3JkZXJvYmoub3JkaWQgPSBcIlwiLFxyXG4gICAgICAgICAgb3JkZXJvYmoucXVhbnRpdHkgPSBwcmQucXVhbnRpdHk7XHJcbiAgICAgICAgICBvcmRlcm9iai5vcmRzdGF0dXMgPSBcIlwiO1xyXG4gICAgICAgICAgb3JkZXJvYmoudG93biA9IGZvcm0udG93bjtcclxuICAgICAgICAgIG9yZGVyb2JqLnN0YXRlID0gZm9ybS5zdGF0ZTtcclxuICAgICAgICAgIG9yZGVyb2JqLnRvdGFsID0gcHJkLnRvdGFsO1xyXG4gICAgICAgICAgb3JkZXJvYmoudGF4ID0gcHJkLnRheDtcclxuICAgICAgICAgIG9yZGVyb2JqLmNvdW50cnkgPSBmb3JtLmNvdW50cnk7XHJcbiAgICAgICAgICBvcmRlcm9iai5hZGRyZXNzID0gZm9ybS5hZGRyZXNzO1xyXG4gICAgICAgICAgb3JkZXJvYmouZmlyc3RuYW1lID0gZm9ybS5maXJzdG5hbWU7XHJcbiAgICAgICAgICBvcmRlcm9iai5sYXN0bmFtZSA9IGZvcm0ubGFzdG5hbWU7XHJcbiAgICAgICAgICBvcmRlcm9iai5lbWFpbCA9IGZvcm0uZW1haWw7XHJcbiAgICAgICAgICBvcmRlcm9iai5wYXltZW50bWV0aG9kID0gZm9ybS5wYXltZW50Z3JvdXA7XHJcbiAgICAgICAgICBvcmRlcm9iai5wYXltZW50c3RhdHVzID0gXCJcIjtcclxuICAgICAgICAgIG9yZGVyb2JqLnBob25lID0gZm9ybS5waG9uZTtcclxuICAgICAgICAgIG9yZGVyb2JqLm92ZXJhbGx0b3RhbCA9IGZvcm0udG90YWw7XHJcbiAgICAgICAgICBvcmRlcm9iai5wb3N0YWxjb2RlID0gZm9ybS5wb3N0YWxjb2RlXHJcbiAgICAgICAgIC8vIG9yZGVyb2JqLnJlcXVlc3Rfb3JkZXJfaWQgPSBcIlwiOyAvLyB0aGlzIHNob3dzIGlmIHRoZXkgYXJlIG9mIHRoZSBzYW1lIG9yZGVyIGdyb3VwXHJcbiAgICAgICAgICBvcmRlcm9iai51c2VyaWQgPSBsb2NhbFN0b3JhZ2UuZ2V0SXRlbSgnYWNrJykgYXMgc3RyaW5nXHJcbiAgICAgICAgICBpZiAoZm9ybS5zaGlwcGluZyA9PT0gJ29uJykge1xyXG4gICAgICAgICAgICBvcmRlcm9iai5zaGlwcGluZyA9IHRydWVcclxuICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgIG9yZGVyb2JqLnNoaXBwaW5nID0gZmFsc2U7XHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgICBpZiAoZm9ybS5sb2NhbHBpY2t1cCA9PT0gJ29uJykge1xyXG4gICAgICAgICAgICBvcmRlcm9iai5sb2NhbHBpY2t1cCA9IHRydWU7XHJcbiAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICBvcmRlcm9iai5sb2NhbHBpY2t1cCA9IGZhbHNlO1xyXG4gICAgICAgICAgfVxyXG4gICAgICAgICAgb3JkZXJhcnJheS5wdXNoKG9yZGVyb2JqKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgY29uc3QgdG90YWxvcmRlciA9IHtcclxuICAgICAgICAgIFwib3JkZXJcIjogb3JkZXJhcnJheVxyXG4gICAgICAgIH07XHJcbiAgICAgICAgc2V0VGltZW91dCgoKSA9PiB7XHJcbiAgICAgICAgICAvL2NvbnNvbGUubG9nKCd0b3RhbG9yZGVyJywgSlNPTi5zdHJpbmdpZnkodG90YWxvcmRlci5vcmRlciksICd0b3RhbCcscGFyc2VGbG9hdChmb3JtLnRvdGFsKSk7XHJcbiAgICAgICAgICBjb25zb2xlLmxvZygndG90YWwnLHBhcnNlRmxvYXQoZm9ybS50b3RhbCkpO1xyXG4gICAgICAgICAgbGV0IGNvbnRlbnQgPSBjb250ZW50dHlwZXdpdGh0b2tlbihsb2NhbFN0b3JhZ2UuZ2V0SXRlbSgnY3VzdG9tZXJ0b2tlbicpKTtcclxuICAgICAgICAgIHNldGFqYXgoJ2pzb24nLCBgJHtiYWNrZW5kdXJsfS9vcmRlci9zYXZlb3JkZXJgLCAncG9zdCcsIEpTT04uc3RyaW5naWZ5KHRvdGFsb3JkZXIub3JkZXIpLCAocmVzcG9uc2U6IGFueSkgPT4ge1xyXG4gICAgICAgICAgICAvLyBwcm9jZXNzIHRoZSByZXNwb25zZVxyXG4gICAgICAgICAgIC8vIGNvbnNvbGUubG9nKCdyZXNwb25zZSBhbmQgZGlzcGF0Y2ggZXZlbnQgJywgcmVzcG9uc2UpO1xyXG4gICAgICAgICAgLy8gIGNvbnNvbGUubG9nKCdsb2NhbHN0b3JhZ2UgJyxsb2NhbFN0b3JhZ2UpO1xyXG4gICAgICAgICAgICAvLyBzZW5kIHRoZSBldmVudCBcclxuICAgICAgICAgICAgbGV0IHVyaWVuY29kZSAgPSBlbmNvZGVVUklDb21wb25lbnQoYFske2xvY2FsU3RvcmFnZS5nZXRJdGVtKCd2ZW5kb3JuYW1lJyl9XWApIDtcclxuICAgICAgICAgICAvLyBsZXQgZGF0YXJyYXkgICA9IG5ldyBBcnJheSgke2xvY2FsU3RvcmFnZS5nZXRJdGVtKCd2ZW5kb3JuYW1lJyl9KSA7XHJcbiAgICAgICAgICAgIHNldGFqYXgoJycsYCR7YmFja2VuZHVybH0vZGlzcGF0Y2hFdmVudD92ZW5kb3JuYW1lPSR7dXJpZW5jb2RlfSZmcmVzaE5ld3M9JHtsb2NhbFN0b3JhZ2UuZ2V0SXRlbSgndXNlcm5hbWUnKX1gLCdnZXQnLFwiXCIsIChyZXNwb25zZTogYW55KSA9PiB7XHJcbiAgICAgICAgICAgICAgLy8gcHJvY2VzcyB0aGUgcmVzcG9uc2VcclxuICAgICAgICAgICAgIC8vIGNvbnNvbGUubG9nKCdyZXNwb25zZSAnLCByZXNwb25zZSk7IFxyXG4gICAgICAgICAgLy8gc3Vic2NyaWJldG9ldmVudChuZXcgRXZlbnRTb3VyY2UoYCR7YmFja2VuZHVybH0vc3Vic2NyaWJlP3ZlbmRvcm5hbWU9JHtsb2NhbFN0b3JhZ2UuZ2V0SXRlbSgndmVuZG9ybmFtZScpfSZmcmVzaE5ld3M9J1RoaXMgaXMgbWUnYCksJ3ZlbmRvcm5ld3MnKTtcclxuICAgICAgICAgICAgfSwgKCkgPT4ge30sIGNvbnRlbnQpO1xyXG4gICAgICAgICAgIG1ha2VQYXltZW50KEpTT04uc3RyaW5naWZ5KHRvdGFsb3JkZXIpLCBnZW5lcmF0ZUlkKCkscGFyc2VGbG9hdChmb3JtLnRvdGFsKSwgXCJQbHMgRmlsbCBpbiB5b3VyIENhcmQgSW5mb1wiLCBgJHtiYWNrZW5kdXJsfS9qZXRzdG9yZS9jcmlzdGEtZGlnaXRhbC5qcGdgLCBcIkpUTCBQbGF0Zm9ybVwiLCBcIlwiKTtcclxuICAgICAgICAgIH0sICgpID0+IHsgfSwgY29udGVudCk7XHJcbiAgICAgICAgfSwgMTUwMCk7XHJcbiAgICAgIH0sIGZ1bmN0aW9uICgpIHtcclxuICAgICAgICBhbGVydGlmeS5lcnJvcignY2FuY2VsbGVkJyk7XHJcbiAgICAgIH0pO1xyXG4gIH1cclxuXHJcbn0pO1xyXG4vL2NyZWF0ZSByZXZpZXcgXHJcbiQoJyNzdWJtaXRyZXZpZXcnKS5vbignY2xpY2snLCAoZTogYW55KSA9PiB7XHJcbiAgZS5wcmV2ZW50RGVmYXVsdCgpO1xyXG4gIC8vIGFsZXJ0KCdyZXZpZXcnKTtcclxuICBTd2FsLmZpcmUoe1xyXG4gICAgaWNvbjogJ3F1ZXN0aW9uJyxcclxuICAgIHRleHQ6ICdEbyB5b3Ugd2FudCB0byBhZGQgUmV2aWV3ID8nLFxyXG4gICAgc2hvd0NhbmNlbEJ1dHRvbjogdHJ1ZSxcclxuICAgIGFsbG93T3V0c2lkZUNsaWNrOiBmYWxzZSxcclxuICB9KS50aGVuKChyZXN1bHQ6IGFueSkgPT4ge1xyXG4gICAgaWYgKHJlc3VsdC5pc0NvbmZpcm1lZCkge1xyXG4gICAgICBpbnZhbGlkYXRldG9rZW4yKGp3dF9kZWNvZGUsICdjdXN0b21lcnRva2VuJyk7IC8vIGNoZWNrIHRva2VuXHJcbiAgICAgIGNvbnN0IGZvcm0gPSBuZXcgRm9ybURhdGEoZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2Zvcm1yZXZpZXcnKSBhcyBIVE1MRm9ybUVsZW1lbnQpO1xyXG4gICAgICBmb3JtLmFwcGVuZChcImN1c3RpZFwiLCAobG9jYWxTdG9yYWdlLmdldEl0ZW0oJ2FjaycpIGFzIHN0cmluZykpO1xyXG4gICAgICBjb25zdCBpZCA9IEpTT04ucGFyc2Uoc2Vzc2lvblN0b3JhZ2UuZ2V0SXRlbSgncHJvZHVjdCcpIGFzIHN0cmluZykuaWQ7IC8vIHNlc3Npb24gY3JlYXRlZCBmb3IgcHJvZHVjdFxyXG4gICAgICBjb25zdCBqc29uZm9ybSA9IE9iamVjdC5mcm9tRW50cmllcyhmb3JtKTtcclxuICAgICAganNvbmZvcm0ucHJvZHVjdGlkID0gaWQ7XHJcbiAgICAgIGNvbnNvbGUubG9nKCdhY2snLCBsb2NhbFN0b3JhZ2UuZ2V0SXRlbSgnYWNrJyksICcganNvbmZvcm0gJywganNvbmZvcm0pO1xyXG4gICAgICBmZXRjaChgJHtiYWNrZW5kdXJsfS9yZXZpZXdgLCB7XHJcbiAgICAgICAgbWV0aG9kOiAncG9zdCcsXHJcbiAgICAgICAgY3JlZGVudGlhbHM6ICdzYW1lLW9yaWdpbicsXHJcbiAgICAgICAgaGVhZGVyczoge1xyXG4gICAgICAgICAgJ0NvbnRlbnQtVHlwZSc6ICdhcHBsaWNhdGlvbi9qc29uJyxcclxuICAgICAgICAgICdBdXRob3JpemF0aW9uJzogJ0JlYXJlciAnICsgbG9jYWxTdG9yYWdlLmdldEl0ZW0oJ2N1c3RvbWVydG9rZW4nKVxyXG4gICAgICAgIH0sXHJcbiAgICAgICAgYm9keTogSlNPTi5zdHJpbmdpZnkoanNvbmZvcm0pXHJcbiAgICAgIH1cclxuICAgICAgKS50aGVuKChyOiBhbnkpID0+IHtcclxuICAgICAgICBjb25zb2xlLmxvZygncmVzcG9uc2UnLCByLCByLmNsb25lKCkudGV4dCgpKTtcclxuICAgICAgICByZXR1cm4gci50ZXh0KCk7XHJcbiAgICAgIH0pLnRoZW4oKHI6IGFueSkgPT4ge1xyXG4gICAgICAgIGNvbnNvbGUubG9nKCdyICcsIHIpO1xyXG4gICAgICAgICQoJyNlcnJvcicpLmVtcHR5KCkuaHRtbCgnPGJyLz48ZGl2IGNsYXNzPVwiYWxlcnQgYWxlcnQtZGFuZ2VyXCIgc3R5bGU9XCJkaXNwbGF5OmlubGluZS1ibG9jaztcIj4gPHNwYW4gY2xhc3M9XCJnbHlwaGljb24gZ2x5cGhpY29uLWluZm8tc2lnblwiPjwvc3Bhbj4gJm5ic3A7ICcgKyByICsgJyAhPC9kaXY+Jyk7XHJcbiAgICAgIH0pLmNhdGNoKChlcnI6IGFueSkgPT4ge1xyXG4gICAgICAgIGNvbnNvbGUubG9nKCdlcnInLCBlcnIpO1xyXG4gICAgICAgICQoJyNlcnJvcicpLmVtcHR5KCkuaHRtbCgnPGJyLz48ZGl2IGNsYXNzPVwiYWxlcnQgYWxlcnQtZGFuZ2VyXCI+IDxzcGFuIGNsYXNzPVwiZ2x5cGhpY29uIGdseXBoaWNvbi1pbmZvLXNpZ25cIj48L3NwYW4+ICZuYnNwOyAnICsgYFlvdSBoYXZlIG5laXRoZXIgUmVnaXN0ZXJlZC9Mb2dpbmAgKyAnICE8L2Rpdj4nKTtcclxuICAgICAgfSk7XHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICB0b2FzdHIuZXJyb3IoJ2NhbmNlbGxlZCcpO1xyXG4gICAgfVxyXG4gIH0pO1xyXG59KTtcclxuLy9kZXRlY3QgZHVwbGljYXRlcyBvbiBjYXJ0IGFuZCB3aXNobGlzdFxyXG5jb25zdCBtdXR1YWxseUV4Y2x1ZGVXaXNoTGlzdEZvckNhcnQgPSAoc3RvcmU6IHN0cmluZywgd2lzaGxpc3Q6IHN0cmluZywgcHJvZHVjdDogYW55KSA9PiB7XHJcbiAgbGV0IHdpc2hsaXN0c3RvcmUgPSBKU09OLnBhcnNlKHNlc3Npb25TdG9yYWdlLmdldEl0ZW0od2lzaGxpc3QpIGFzIHN0cmluZyk7IC8vIHRvIGNoZWNrIGlmIHRoZXJlIGlzIGluIHdpc2hsaXN0XHJcbiAgY29uc29sZS5sb2coJ3dpc2hsaXN0c3RvcmUgJywgd2lzaGxpc3RzdG9yZSk7XHJcbiAgSlNPTi5wYXJzZShzZXNzaW9uU3RvcmFnZS5nZXRJdGVtKHN0b3JlKSBhcyBzdHJpbmcpLmZvckVhY2goKGVsZW1lbnQ6IGFueSkgPT4ge1xyXG4gICAgLy9jb25zb2xlLmxvZygnIGVsZW1lbnQgJywgZWxlbWVudCk7XHJcbiAgICBpZiAod2lzaGxpc3RzdG9yZSE9PXVuZGVmaW5lZCAmJiB3aXNobGlzdHN0b3JlIT09bnVsbCkgeyAgLy8gaWYgaXQgaXMgbm90IGVtcHR5XHJcbiAgICAgIHdpc2hsaXN0c3RvcmUgPSB3aXNobGlzdHN0b3JlLmZpbHRlcigoZTogYW55KSA9PiB7XHJcbiAgICAgICAgY29uc29sZS5sb2coZS5pZCwgZWxlbWVudC5pZCk7XHJcbiAgICAgICAgaWYoZS5pZD09PWVsZW1lbnQuaWQpeyAgLy8gcmVtb3ZlIGZyb20gZGJcclxuICAgICAgICAgIGNvbnN0IGNvbnRlbnQgID0gY29udGVudHR5cGV3aXRodG9rZW4obG9jYWxTdG9yYWdlLmdldEl0ZW0oJ3Rva2VuJykpIDsgICBcclxuICAgICAgICAgIHNldGFqYXgoJ2pzb24nLCBgJHtiYWNrZW5kdXJsfS9wcm9kdWN0L3JlbW92ZWZyb213aXNobGlzdC8ke2VsZW1lbnQuaWR9YCwgJ2dldCcsIFwiXCIsKHJlc3BvbnNlOmFueSk9PntcclxuICAgICAgICAgICAgY29uc29sZS5sb2coJ3Jlc3BvbnNlJyxyZXNwb25zZSkgO1xyXG4gICAgICAgICAgICAgIH0sKCk9Pnt9LGNvbnRlbnQpO1xyXG4gICAgICAgICAgIH1cclxuICAgICAgcmV0dXJuIGUuaWQgIT09IGVsZW1lbnQuaWRcclxuICAgICAgfSk7XHJcbiAgICAgIGNvbnNvbGUubG9nKCdzZXR0aW5nIGEgbmV3IHdpc2hsaXN0c3RvcmUganNvbicsIHdpc2hsaXN0c3RvcmUpO1xyXG4gICAgICBzZXNzaW9uU3RvcmFnZS5zZXRJdGVtKCd3aXNobGlzdCcsIEpTT04uc3RyaW5naWZ5KHdpc2hsaXN0c3RvcmUpKTtcclxuICAgIH1cclxuICAgIGNvbnNvbGUubG9nKCduZXcgd2lzaGxpc3RzdG9yZSBzZXQnKTtcclxuICB9XHJcbiAgICAvLyBpZiAoZWxlbWVudC5pZCA9PT0gcHJvZHVjdC5pZCkgeyAvLyBjaGVjayBkdXBsaWNhdGUgIGl0ZW1zXHJcbiAgICAvLyAvLyAgY29uc29sZS5sb2coJ2R1cGxpY2F0ZSAgaXRlbXMnKTtcclxuICAgIC8vICAvLyB0b2FzdHIuZXJyb3IoXCJUaGlzIGl0ZW0gaXMgYWxyZWFkeSBpbiBDYXJ0XCIpO1xyXG4gICAgLy8gICBpZih3aXNobGlzdHN0b3JlKXsgLy8gcmVtb3ZlIGl0IGZyb20gd2lzaGxpc3RcclxuICAgIC8vICAgICB2YXIga2V5cyAgPSBPYmplY3Qua2V5cyh3aXNobGlzdHN0b3JlKSA7XHJcbiAgICAvLyAgICAgY29uc29sZS5sb2coJ2tleXMgJyxrZXlzKSA7XHJcbiAgICAvLyAgICAga2V5cyAgPSBrZXlzLmZpbHRlcigoZTphbnkpPT57XHJcbiAgICAvLyAgICAgICBjb25zb2xlLmxvZygnZSx3aXNobGlzdHN0b3JlLHByb2R1Y3QnLGUsd2lzaGxpc3RzdG9yZS5lLHByb2R1Y3QuZSkgO1xyXG4gICAgLy8gICAgICAgcmV0dXJuIHdpc2hsaXN0c3RvcmUuZT09PXByb2R1Y3QuZSA7XHJcbiAgICAvLyAgICAgfSkgO1xyXG4gICAgLy8gICBjb25zb2xlLmxvZygnZmlsdGVyZWQga2V5cyAnLGtleXNbMF0pIDtcclxuICAgIC8vICBpZihPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwod2lzaGxpc3RzdG9yZSxrZXlzWzBdKSl7XHJcbiAgICAvLyAgICBjb25zb2xlLmxvZygnZGVsZXRpbmcgLi4uLi4uLicpIDtcclxuICAgIC8vICAgICAgIGRlbGV0ZSB3aXNobGlzdHN0b3JlLmtleXNbMF0gOyAvL2Zyb20gd2lzaGxpc3QgaWYgcHJlc2VudFxyXG4gICAgLy8gICAgICAgICB9XHJcbiAgICAvLyAgICAgIH1cclxuICAgIC8vICAgfVxyXG4gICk7XHJcbn1cclxuLy9hZGQgdG8gY2FydCBsb2dpY1xyXG5jb25zdCBzdG9yYWdlYXJyYXkgPSBuZXcgU2V0KCk7ICAvLyB0byBzdG9yZSBvYmplY3RcclxuJCgnI2FkZGNhcnQnKS5vbignY2xpY2snLCAoZTogYW55KSA9PiB7XHJcbiAgLy8gZS5wcmV2ZW50RGVmYXVsdCgpIDtcclxuICAvLyBhbGVydChsb2NhbFN0b3JhZ2UuZ2V0SXRlbSgnY3VzdG9tZXJ0b2tlbicpK1wiMjIyMlwiKSA7XHJcbiAgLy9hbGVydCgndmlldyB0aGUgY2FydCcpIDtcclxuIC8vIHJldHVybiA7XHJcbiAgbGV0IHRva2VuID0gbG9jYWxTdG9yYWdlLmdldEl0ZW0oJ2N1c3RvbWVydG9rZW4nKTtcclxuICBjb25zb2xlLmxvZyhcInRva2VuIFwiICsgdG9rZW4pO1xyXG4gIGlmICh0b2tlbiAhPT0gbnVsbCkge1xyXG4gICAgaW52YWxpZGF0ZVNlc3Npb24oand0X2RlY29kZSwgJ2N1c3RvbWVydG9rZW4nKTtcclxuICAgIGNvbnN0IHByb2R1Y3QgPSBKU09OLnBhcnNlKHNlc3Npb25TdG9yYWdlLmdldEl0ZW0oJ3Byb2R1Y3QnKSBhcyBzdHJpbmcpO1xyXG4gICAgbGV0IGlucHV0bnVtYmVyICA9ICQoJyNpbnB1dC1udW1iZXInKS52YWwoKSAgO1xyXG4gICAgcHJvZHVjdC5wcm9kdWN0cXVhbnRpdHkgID0gaW5wdXRudW1iZXIgO1xyXG4gIC8vICBjb25zb2xlLmxvZygnY2FydCBwcm9kdWN0ICcsIHByb2R1Y3QuY2F0ZWdvcnlpZCwgJyBhbmQgJywgcHJvZHVjdCk7XHJcbiAgICAvL2FsZXJ0KGlucHV0bnVtYmVyKSA7XHJcbiAgIC8vIHJldHVybiA7XHJcbiAgICBsZXQgY29udGVudCA9IGNvbnRlbnR0eXBld2l0aHRva2VuKGxvY2FsU3RvcmFnZS5nZXRJdGVtKCdjdXN0b21lcnRva2VuJykpO1xyXG4gICAgc2V0YWpheCgnanNvbicsIGAke2JhY2tlbmR1cmx9L3Byb2R1Y3QvZGlzcGxheWFuZGxvYWRzaW1pbGFyaXRlbXMvJHtwcm9kdWN0LmlkfWAsICdnZXQnLCBcIlwiLCAocjogYW55KSA9PiB7XHJcbiAgICAgIC8vIHByb2Nlc3MgdGhlIHJlc3BvbnNlXHJcbiAgICAgIGNvbnNvbGUubG9nKCdhZGRpbmcgdG8gY2FydCAnLCAncmVzJywgcik7XHJcbiAgICAgIGNvbnNvbGUubG9nKCcgciAnLCByKTtcclxuICAgICAgJCgnI3Byb2R1Y3R0eXBlJykudGV4dChwcm9kdWN0LnByb2R1Y3RuYW1lKTtcclxuICAgICAgJCgnI3Byb2R1Y3RpbWFnZScpLnByb3AoJ3NyYycsIGAke2JhY2tlbmR1cmx9L2pldHN0b3JlLyR7cHJvZHVjdC5pbWFnZXVybH1gKTtcclxuICAgICAgdmFyIGJ1aWxkZXIgPSBuZXcgU3RyaW5nQnVpbGRlcigpO1xyXG4gICAgICAvL3Nlc3Npb25TdG9yYWdlLnNldEl0ZW0oJ3N0b3JlJywgSlNPTi5zdHJpbmdpZnkoQXJyYXkuZnJvbShzdG9yYWdlYXJyYXkuYWRkKHByb2R1Y3QpKSkpO1xyXG4gICAgICBpZiAoQXJyYXkuaXNBcnJheShyKSkge1xyXG4gICAgICAgIHIuZm9yRWFjaCgoZWxlbWVudDogYW55KSA9PiB7XHJcbiAgICAgICAgICBjb25zb2xlLmxvZygncHJvZHVjdG5hbWUgJywgZWxlbWVudC5wcm9kdWN0bmFtZSk7XHJcbiAgICAgICAgICBidWlsZGVyLmFwcGVuZChgXHJcbiAgICAgICAgIDxkaXYgY2xhc3M9XCJwcm9kdWN0LWJveCBjb2wtc20tMyBjb2wtNlwiPlxyXG4gICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiaW1nLXdyYXBwZXJcIj5cclxuICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJmcm9udFwiPlxyXG4gICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9XCIvamV0Y2FydC9wcm9kdWN0cGFnZVwiIG9uY2xpY2s9XCJsb2FkcHJkKCcke2VsZW1lbnQuaWR9JywnL2pldGNhcnQvcHJvZHVjdHBhZ2UnKVwiPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICA8aW1nIHNyYz1cIiR7YmFja2VuZHVybH0vamV0c3RvcmUvJHtlbGVtZW50LmltYWdldXJsfVwiXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjbGFzcz1cImltZy1mbHVpZCBibHVyLXVwIGxhenlsb2FkIG1iLTFcIlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYWx0PVwiY290dG9uIHRvcFwiPlxyXG4gICAgICAgICAgICAgICAgICAgICAgIDwvYT5cclxuICAgICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cInByb2R1Y3QtZGV0YWlsXCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgPGg2PjxhIGhyZWY9XCIjXCI+PHNwYW4+JHtlbGVtZW50LnByb2R1Y3RuYW1lfTwvc3Bhbj48L2E+PC9oNj5cclxuICAgICAgICAgICAgICAgICAgICAgICA8aDQ+PHNwYW4+TiR7KHBhcnNlRmxvYXQoZWxlbWVudC5wcm9kdWN0cHJpY2UpLnRvRml4ZWQoMikucmVwbGFjZSgvXFxkKD89KFxcZHszfSkrXFwuKS9nLCAnJCYsJykpfTwvc3Bhbj48L2g0PlxyXG4gICAgICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICBgKTtcclxuICAgICAgICB9KVxyXG4gICAgICB9XHJcbiAgICAgICQoJyN1cHNlbGxfcHJvZHVjdCcpLmVtcHR5KCkuaHRtbChidWlsZGVyLnRvU3RyaW5nKCkpO1xyXG4gICAgICBjb25zb2xlLmxvZygnY2FsbGluZyB0aGUgbW9kYWwgJyk7XHJcbiAgICAgICQoJyNhZGR0b2NhcnQyJykubW9kYWwoJ3Nob3cnKTtcclxuICAgICAgY29uc29sZS5sb2coJ2JlZm9yZSBpZiAnLCBKU09OLnBhcnNlKHNlc3Npb25TdG9yYWdlLmdldEl0ZW0oJ3N0b3JlJykgYXMgc3RyaW5nKSk7XHJcbiAgICAgIGNvbnN0IHN0b3JlID0gSlNPTi5wYXJzZShzZXNzaW9uU3RvcmFnZS5nZXRJdGVtKCdzdG9yZScpIGFzIHN0cmluZyk7XHJcbiAgICAgIGlmIChzdG9yZSA9PT0gbnVsbCB8fCBzdG9yZS5pbmNsdWRlcyhudWxsKSkgeyAvLyBjaGVjayBmb3IgdGhlIGZpcnN0IHRpbWVcclxuICAgICAgICAvLyBhZGR0b2RiXHJcbiAgICAgICAgLy8gc2Vzc2lvblN0b3JhZ2Uuc2V0SXRlbSgnc3RvcmUnLCBKU09OLnN0cmluZ2lmeShBcnJheS5mcm9tKHN0b3JhZ2VhcnJheS5hZGQocHJvZHVjdCkpKSk7XHJcbiAgICAgICAgbGV0IGNvbnRlbnQgPSBjb250ZW50dHlwZXdpdGh0b2tlbihsb2NhbFN0b3JhZ2UuZ2V0SXRlbSgnY3VzdG9tZXJ0b2tlbicpKTtcclxuICAgICAgICBjb25zb2xlLmxvZygnY29udGVudCAnLCBjb250ZW50LCAnIHByb2R1Y3QgJywgcHJvZHVjdCk7XHJcbiAgICAgICAgY29uc29sZS5sb2coJ2ZpcnN0IHN0b3JlICcsIEpTT04ucGFyc2Uoc2Vzc2lvblN0b3JhZ2UuZ2V0SXRlbSgnc3RvcmUnKSBhcyBzdHJpbmcpKTtcclxuICAgICAgICBzZXRhamF4KCd0ZXh0JywgYCR7YmFja2VuZHVybH0vcHJvZHVjdC9hZGRjYXJ0bGlzdC8ke3Byb2R1Y3QuaWR9LyR7bG9jYWxTdG9yYWdlLmdldEl0ZW0oJ2FjaycpfS8ke3Byb2R1Y3QucHJvZHVjdHF1YW50aXR5fWAsICdnZXQnLFwiXCIsIChyZXNwb25zZTogYW55KSA9PiB7XHJcbiAgICAgICAgICAvLyBwcm9jZXNzIHRoZSByZXNwb25zZVxyXG4gICAgICAgICAgY29uc29sZS5sb2coJ3Jlc3BvbnNlICcsIHJlc3BvbnNlKTtcclxuICAgICAgICAgIHNlc3Npb25TdG9yYWdlLnNldEl0ZW0oJ3N0b3JlJywgSlNPTi5zdHJpbmdpZnkoQXJyYXkuZnJvbShzdG9yYWdlYXJyYXkuYWRkKHByb2R1Y3QpKSkpO1xyXG4gICAgICAgICAgY29uc29sZS5sb2coJ2dvaW5nIHRvIHByb2Nlc3MgZXhjbHVzaXZlJyk7XHJcbiAgICAgICAgICBtdXR1YWxseUV4Y2x1ZGVXaXNoTGlzdEZvckNhcnQoJ3N0b3JlJywgJ3dpc2hsaXN0JywgcHJvZHVjdCk7XHJcbiAgICAgICAgICBjb25zb2xlLmxvZygnZmluaXNoIHByb2Nlc3NpbmcgZXhjbHVzaXZlJyk7XHJcbiAgICAgICAgICAvL3RvYXN0ci5zdWNjZXNzKCcnKSA7XHJcbiAgICAgICAgfSwgKCkgPT4geyB9LCBjb250ZW50KTtcclxuICAgICAgICAvLyByZXR1cm4gO1xyXG4gICAgICB9XHJcbiAgICAgIGlmIChzdG9yZSAhPT0gbnVsbCAmJiBzdG9yZS5sZW5ndGggPiAwKSB7XHJcbiAgICAgICAgSlNPTi5wYXJzZShzZXNzaW9uU3RvcmFnZS5nZXRJdGVtKCdzdG9yZScpIGFzIHN0cmluZykuZm9yRWFjaCgoZWxlbWVudDogYW55KSA9PiB7XHJcbiAgICAgICAgICBjb25zb2xlLmxvZygnIGVsZW1lbnQgJywgZWxlbWVudCk7XHJcbiAgICAgICAgICBpZiAoZWxlbWVudC5pZCA9PT0gcHJvZHVjdC5pZCkgeyAvLyBjaGVjayBkdXBsaWNhdGUgIGl0ZW1zXHJcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKCdkdXBsaWNhdGUgIGl0ZW1zJyk7XHJcbiAgICAgICAgICAgIHRvYXN0ci5lcnJvcihcIlRoaXMgaXRlbSBpcyBhbHJlYWR5IGluIENhcnRcIik7XHJcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcignZHVwbGljYXRlICBpdGVtJyk7XHJcbiAgICAgICAgICAgIC8vIHJldHVybjtcclxuICAgICAgICAgIH1cclxuICAgICAgICAgIC8vIGFsc28gY2hlY2sgaWYgaXQgaXMgaW4gZGIgdG9vXHJcbiAgICAgICAgfSk7XHJcbiAgICAgICAgY29uc3Qgc3RvcmUgPSBKU09OLnBhcnNlKHNlc3Npb25TdG9yYWdlLmdldEl0ZW0oJ3N0b3JlJykgYXMgc3RyaW5nKTtcclxuICAgICAgICBjb25zb2xlLmxvZygnIGFjayAnLCBsb2NhbFN0b3JhZ2UuZ2V0SXRlbSgnYWNrJykpO1xyXG4gICAgICAgIGNvbnNvbGUubG9nKCcgc3RvcmUgdG8gY2FydCAnLCBzdG9yZSk7XHJcbiAgICAgICAgbGV0IGNvbnRlbnQgPSBjb250ZW50dHlwZXdpdGh0b2tlbihsb2NhbFN0b3JhZ2UuZ2V0SXRlbSgnY3VzdG9tZXJ0b2tlbicpKTtcclxuICAgICAgICBjb25zb2xlLmxvZygnY29udGVudCAnLCBjb250ZW50LCAnIHByb2R1Y3QgJywgcHJvZHVjdCk7XHJcbiAgICAgICAgc2V0YWpheCgndGV4dCcsIGAke2JhY2tlbmR1cmx9L3Byb2R1Y3QvYWRkY2FydGxpc3QvJHtwcm9kdWN0LmlkfS8ke2xvY2FsU3RvcmFnZS5nZXRJdGVtKCdhY2snKX0vJHtwcm9kdWN0LnByb2R1Y3RxdWFudGl0eX1gLCAnZ2V0JywgXCJcIiwgKHJlc3BvbnNlOiBhbnkpID0+IHtcclxuICAgICAgICAgIC8vIHByb2Nlc3MgdGhlIHJlc3BvbnNlXHJcbiAgICAgICAgICBjb25zb2xlLmxvZygncmVzcG9uc2Ugc3RvcmUgbm90IGVtcHR5ICcsIHJlc3BvbnNlKTtcclxuICAgICAgICAgIGNvbnNvbGUubG9nKCcgcHJvZHVjdCAnLCBwcm9kdWN0KTtcclxuICAgICAgICAgIHN0b3JlLnB1c2gocHJvZHVjdCk7XHJcbiAgICAgICAgICBzZXNzaW9uU3RvcmFnZS5zZXRJdGVtKCdzdG9yZScsIEpTT04uc3RyaW5naWZ5KHN0b3JlKSk7XHJcbiAgICAgICAgICBtdXR1YWxseUV4Y2x1ZGVXaXNoTGlzdEZvckNhcnQoJ3N0b3JlJywgJ3dpc2hsaXN0JywgcHJvZHVjdCk7XHJcbiAgICAgICAgICBjb25zb2xlLmxvZygnbmV4dCBzdG9yZSAnLCBKU09OLnBhcnNlKHNlc3Npb25TdG9yYWdlLmdldEl0ZW0oJ3N0b3JlJykgYXMgc3RyaW5nKSk7XHJcbiAgICAgICAgfSwgKCkgPT4geyB9LCBjb250ZW50KTtcclxuICAgICAgfVxyXG4gICAgfSwgKCkgPT4geyB9LCBjb250ZW50KTtcclxuICB9IGVsc2Uge1xyXG4gICAgLy8gdG9hc3RyLmVycm9yKFwiUGxlYXNlIGxvZ2luIHRvIGFkZCB0byBjYXJ0XCIpIDtcclxuICAgIC8vICQoc2Vjb25kaWFsb2coKCk9PntcclxuICAgIC8vICAgcmV0dXJuIChgPGg1IGNsYXNzPVwibW9kYWwtdGl0bGVcIj5BY2NvdW50IE1hbmFnZW1lbnQ8L2g1PmApIDtcclxuICAgIC8vIH0sKCk9PntcclxuICAgIC8vICAgcmV0dXJuIChgPGRpdiBjbGFzcz1cInJvdyBmb3JtLWdyb3VwXCI+XHJcbiAgICAvLyAgICAgPGJ1dHRvbiBjbGFzcz1cImJ0biBidG4tc2Vjb25kYXJ5XCIgdHlwZT1cImJ1dHRvblwiIGRhdGEtZGlzbWlzcz1cIm1vZGFsXCI+Q2xvc2U8L2J1dHRvbj5cclxuICAgIC8vICAgICA8YnV0dG9uIGNsYXNzPVwiYnRuIGJ0bi1wcmltYXJ5XCIgdHlwZT1cImJ1dHRvblwiIGlkPVwicmVkaXJlY3R0b2xvZ2luXCI+TG9naW48L2J1dHRvbj5cclxuICAgIC8vICAgPC9kaXY+YClcclxuICAgIC8vIH0sKCk9PntcclxuICAgIC8vICAgcmV0dXJuIChcclxuICAgIC8vICAgICBcIlwiXHJcbiAgICAvLyAgICk7XHJcbiAgICAvLyB9KSkuaW5zZXJ0QWZ0ZXIoXCIucHJvZHVjdC1kZXNjcmlwdGlvblwiKTsgXHJcbiAgICAkKHNlY29uZGlhbG9nKCgpID0+IHtcclxuICAgICAgcmV0dXJuIChgPGRpdiBjbGFzcz1cInJvd1wiPlxyXG4gICAgICAgIDxkaXYgY2xhc3M9XCJjb2wtbWQtNVwiPlxyXG4gICAgICA8YnV0dG9uIGNsYXNzPVwiYnRuIGJ0bi1saW5rXCIgaWQ9XCJyZWRpcmVjdHRvcmVnXCI+Q3JlYXRlIEFjY291bnQ8L2J1dHRvbj5cclxuICAgICAgICA8L2Rpdj5cclxuICAgICAgICA8ZGl2IGNsYXNzPVwiY29sLW1kLTZcIj5cclxuICAgICAgPGJ1dHRvbiBjbGFzcz1cImJ0biBidG4tbGlua1wiIGlkPVwicmVkaXJlY3R0b2xvZ2luXCI+TG9naW4gdG8geW91ciBBY2NvdW50PC9idXR0b24+XHJcbiAgICAgICA8L2Rpdj5cclxuICAgICAgPC9kaXY+YClcclxuICAgIH0sICgpID0+IHtcclxuICAgICAgcmV0dXJuIChgPGg1IGNsYXNzPVwibW9kYWwtdGl0bGVcIj5BY2NvdW50IE1hbmFnZW1lbnQ8L2g1PmApO1xyXG4gICAgfSwgKCkgPT4ge1xyXG4gICAgICByZXR1cm4gKFxyXG4gICAgICAgIFwiXCJcclxuICAgICAgKTtcclxuICAgIH0pKS5pbnNlcnRBZnRlcihcIi5wcm9kdWN0LWRlc2NyaXB0aW9uXCIpO1xyXG4gICAgJCgnI2V4YW1wbGVNb2RhbCcpLm1vZGFsKCdzaG93Jyk7Ly9zaG93IG1vZGFsXHJcbiAgfVxyXG59KTtcclxuXHJcbi8vY3VzdG9tZXIgYWNjZXNzIGludG8gdGhlIHN5c3RlbVxyXG4kKGRvY3VtZW50KS5vbihcImNsaWNrXCIsIFwiI3JlZGlyZWN0dG9sb2dpblwiLCBmdW5jdGlvbiAoKSB7XHJcbiAgKGZ1bmN0aW9uICgpIHtcclxuICAgICQoJyNleGFtcGxlTW9kYWwnKS5tb2RhbCgnaGlkZScpO1xyXG4gICAgc2V0VGltZW91dCgoKSA9PiB7XHJcbiAgICAgICQoJyNleGFtcGxlTW9kYWwnKS5yZW1vdmUoKTtcclxuICAgICAgbGV0IGlkID0gSlNPTi5wYXJzZShzZXNzaW9uU3RvcmFnZS5nZXRJdGVtKCdwcm9kdWN0JykgYXMgc3RyaW5nKS5wcm9kdWN0bmFtZTtcclxuICAgICAgd2luZG93LmxvY2F0aW9uLmhyZWYgPSAnLi9jdXN0bG9naW4/Y3VzdGxvZ2luPScgKyBidG9hKHVuZXNjYXBlKGlkKSk7XHJcbiAgICB9LCA4MDApO1xyXG4gIH0pKCk7XHJcbn0pO1xyXG5cclxuJChkb2N1bWVudCkub24oXCJjbGlja1wiLCBcIiNyZWRpcmVjdHRvcmVnXCIsIGZ1bmN0aW9uICgpIHtcclxuICAoZnVuY3Rpb24gKCkge1xyXG4gICAgJCgnI2V4YW1wbGVNb2RhbCcpLm1vZGFsKCdoaWRlJyk7XHJcbiAgICBzZXRUaW1lb3V0KCgpID0+IHtcclxuICAgICAgJCgnI2V4YW1wbGVNb2RhbCcpLnJlbW92ZSgpO1xyXG4gICAgICAvL2xldCBjb3Vyc2VuYW1lPSBkZWNvZGVVUklDb21wb25lbnQoZXNjYXBlKHdpbmRvdy5hdG9iKHBhcmFtcy5nZXQoJ2NzbicpKSkpO1xyXG4gICAgICAvLyAke2J0b2EodW5lc2NhcGUoZW5jb2RlVVJJQ29tcG9uZW50KGlkKSkpfVxyXG4gICAgICBsZXQgaWQgPSBKU09OLnBhcnNlKHNlc3Npb25TdG9yYWdlLmdldEl0ZW0oJ3Byb2R1Y3QnKSBhcyBzdHJpbmcpLnByb2R1Y3RuYW1lO1xyXG4gICAgICB3aW5kb3cubG9jYXRpb24uaHJlZiA9ICcuL3JlZ2lzdGVyP3ByZD0nICsgYnRvYSh1bmVzY2FwZShpZCkpO1xyXG4gICAgfSwgODAwKTtcclxuICB9KSgpO1xyXG59KTtcclxuLy9jdXN0b21lciAgbG9naW5cclxuJCgnI2N1c3Rsb2dpbicpLm9uKCdjbGljaycsICgpID0+IHtcclxuICAvLyBhbGVydCgpIDtcclxuICBTd2FsLmZpcmUoe1xyXG4gICAgaWNvbjogJ2luZm8nLFxyXG4gICAgdGV4dDogJ0RvIHlvdSB3YW50IHRvIGxvZ2luID8nLFxyXG4gICAgc2hvd0NhbmNlbEJ1dHRvbjogdHJ1ZSxcclxuICAgIGFsbG93T3V0c2lkZUNsaWNrOiBmYWxzZSxcclxuICB9KS50aGVuKChyZXN1bHQ6IGFueSkgPT4ge1xyXG4gICAgaWYgKHJlc3VsdC5pc0NvbmZpcm1lZCkge1xyXG4gICAgICBjb25zdCBmb3JtID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2N1c3Rsb2dpbmZvcm0nKSBhcyBIVE1MRm9ybUVsZW1lbnQ7XHJcbiAgICAgIGNvbnN0IGZvcm1kYXRhID0gbmV3IEZvcm1EYXRhKGZvcm0pO1xyXG4gICAgICBjb25zb2xlLmxvZygndXNlcm5hbWUgJywgKGZvcm1kYXRhLmdldCgndXNlcm5hbWUnKSBhcyBzdHJpbmcpID09PSAnJyk7XHJcbiAgICAgIGlmICgoZm9ybWRhdGEuZ2V0KCd1c2VybmFtZScpIGFzIHN0cmluZykgPT09ICcnKSB7XHJcbiAgICAgICAgdG9hc3RyLmVycm9yKCdQbGVhc2UgZmlsbCB0aGUgdXNlcm5hbWUgZmllbGQnKTtcclxuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ2xvZ2luIGVycm9yJyk7XHJcbiAgICAgIH0gZWxzZSBpZiAoKGZvcm1kYXRhLmdldChcInBhc3N3b3JkXCIpIGFzIHN0cmluZykgPT09ICcnKSB7XHJcbiAgICAgICAgdG9hc3RyLmVycm9yKCdQbGVhc2UgZmlsbCB0aGUgcGFzc3dvcmQgZmllbGQnKTtcclxuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ2xvZ2luIGVycm9yJyk7XHJcbiAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgc2V0YWpheCgndGV4dCcsIGAke2xvZ2ludXJsfS9hcGkvbG9naW5gLCAncG9zdCcsIEpTT04uc3RyaW5naWZ5KHsgdXNlcm5hbWU6IGZvcm1kYXRhLmdldCgndXNlcm5hbWUnKSBhcyBzdHJpbmcsIHBhc3N3b3JkOiBmb3JtZGF0YS5nZXQoXCJwYXNzd29yZFwiKSBhcyBzdHJpbmcgfSksIChyZXNwb25zZTogYW55KSA9PiB7XHJcbiAgICAgICAgICAvLyBwcm9jZXNzIHRoZSByZXNwb25zZVxyXG4gICAgICAgICAgY29uc29sZS5sb2coJ3Jlc3BvbnNlIHN0b3JlIG5vdCBlbXB0eSAnLCByZXNwb25zZSk7XHJcbiAgICAgICAgICBTd2FsLmZpcmUoe1xyXG4gICAgICAgICAgICBpY29uOiAnaW5mbycsXHJcbiAgICAgICAgICAgIHRleHQ6ICdQbHMgcHJvY2VlZCB0byBjYXJ0JyxcclxuICAgICAgICAgICAgc2hvd0NhbmNlbEJ1dHRvbjogZmFsc2UsXHJcbiAgICAgICAgICAgIGFsbG93T3V0c2lkZUNsaWNrOiBmYWxzZSxcclxuICAgICAgICAgIH0pLnRoZW4oKHJlc3VsdDogYW55KSA9PiB7XHJcbiAgICAgICAgICAgIGlmIChyZXN1bHQuaXNDb25maXJtZWQpIHtcclxuICAgICAgICAgICAgICBjb25zb2xlLmxvZygncmVzcG9uc2Ugc3RvcmUgbm90IGVtcHR5ICcsIHJlc3BvbnNlKTtcclxuICAgICAgICAgICAgICBsb2NhbFN0b3JhZ2Uuc2V0SXRlbShcImN1c3RvbWVydG9rZW5cIiwgcmVzcG9uc2UpO1xyXG4gICAgICAgICAgICAgIHZhciBkZWNvZGVkID0gand0X2RlY29kZShyZXNwb25zZSk7XHJcbiAgICAgICAgICAgICAgLy8gY29uc29sZS5sb2coZGVjb2RlZCwgJ2V4cCAnLCBkZWNvZGVkWydleHAnXSwgJ3N1YiAnLCBkZWNvZGVkLnN1YiwgJ3ZlbmRvcm5hbWUgJywgZGVjb2RlZC52ZW5kb3JuYW1lLCAnIGFjayAnLCBkZWNvZGVkLmFjayk7XHJcbiAgICAgICAgICAgICAgY29uc3Qgbm93ID0gRGF0ZS5ub3coKS52YWx1ZU9mKCkgLyAxMDAwO1xyXG4gICAgICAgICAgICAgIGNvbnN0IHRva2VuZXhwID0gcGFyc2VJbnQoZGVjb2RlZC5leHApO1xyXG4gICAgICAgICAgICAgIGNvbnNvbGUubG9nKGRlY29kZWQudXNlcm5hbWUpO1xyXG4gICAgICAgICAgICAgIC8vIGxvY2FsU3RvcmFnZS5zZXRJdGVtKCd2ZW5kb3JuYW1lJywgZGVjb2RlZC52ZW5kb3JuYW1lKTtcclxuICAgICAgICAgICAgICBsb2NhbFN0b3JhZ2Uuc2V0SXRlbSgnYWNrJywgZGVjb2RlZC5hY2spO1xyXG4gICAgICAgICAgICAgIGxvY2FsU3RvcmFnZS5zZXRJdGVtKCd1c2VybmFtZScsIGRlY29kZWQudXNlcm5hbWUpO1xyXG4gICAgICAgICAgICAgIGxvY2FsU3RvcmFnZS5zZXRJdGVtKFwidmVuZG9ybmFtZVwiLGRlY29kZWQudmVuZG9ybmFtZSk7XHJcbiAgICAgICAgICAgICAgY29uc3QgbG9naW4gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcubG9naW4nKSBhcyBIVE1MRGl2RWxlbWVudDtcclxuICAgICAgICAgICAgICBsb2dpbi5jbGFzc0xpc3QuYWRkKFwiYWxlcnRcIik7XHJcbiAgICAgICAgICAgICAgbG9naW4uY2xhc3NMaXN0LmFkZChcImFsZXJ0LXN1Y2Nlc3NcIik7XHJcbiAgICAgICAgICAgICAgbG9naW4uY2xhc3NMaXN0LmFkZChcImFsZXJ0LWRpc21pc3NpYmxlXCIpO1xyXG4gICAgICAgICAgICAgIGxvZ2luLmNsYXNzTGlzdC5hZGQoXCJmYWRlXCIpO1xyXG4gICAgICAgICAgICAgIGxvZ2luLmNsYXNzTGlzdC5hZGQoXCJzaG93XCIpO1xyXG4gICAgICAgICAgICAgICQoJy5sb2dpbicpLmVtcHR5KCkuaHRtbChgPHN0cm9uZz5XZWxjb21lICR7bG9jYWxTdG9yYWdlLmdldEl0ZW0oJ3VzZXJuYW1lJyk/LnRvVXBwZXJDYXNlKCl9ICZuYnNwOzwvc3Ryb25nPiBMb2dnZWQgaW4uXHJcbiAgICAgICAgICAgICAgPGJ1dHRvbiB0eXBlPVwiYnV0dG9uXCIgY2xhc3M9XCJjbG9zZVwiIGRhdGEtZGlzbWlzcz1cImFsZXJ0XCIgYXJpYS1sYWJlbD1cIkNsb3NlXCI+XHJcbiAgICAgICAgICAgICAgICA8c3BhbiBhcmlhLWhpZGRlbj1cInRydWVcIj4mdGltZXM7PC9zcGFuPjwvYnV0dG9uPmApO1xyXG4gICAgICAgICAgICAgIHNldFRpbWVvdXQoZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICAgICAgLy8gcmVkaXJlY3QgYmFjayB0byB0aGUgcGFnZVxyXG4gICAgICAgICAgICAgICAgLy9zZXNzaW9uU3RvcmFnZS5jbGVhcigpIDtcclxuICAgICAgICAgICAgICAgIC8vIHNlc3Npb25TdG9yYWdlLnNldEl0ZW0oJ3N0b3JlJyxKU09OLnN0cmluZ2lmeShKU09OLnBhcnNlKHNlc3Npb25TdG9yYWdlLmdldEl0ZW0oJ3Byb2R1Y3QnKSBhcyBzdHJpbmcpKSkgO1xyXG4gICAgICAgICAgICAgICAgLy8gY29uc29sZS5sb2coKSA7XHJcbiAgICAgICAgICAgICAgICB3aW5kb3cubG9jYXRpb24uaHJlZiA9ICcuL3Byb2R1Y3RwYWdlJztcclxuICAgICAgICAgICAgICB9LCAyMDAwKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgfSk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgICAgLCAoKSA9PiB7IH0sIGNvbnRlbnR0eXBlKTtcclxuICAgICAgfVxyXG4gICAgfSBlbHNlIHtcclxuICAgICAgdG9hc3RyLmVycm9yKCdBdHRlbXB0IGNhbmNlbGxlZCcpO1xyXG4gICAgfVxyXG4gIH0pO1xyXG59XHJcbik7XHJcbi8vbG9hZCAgcHIwZHVjdHBhZ2UgaW5mb1xyXG5jb25zdCBmaWxscHJvZHVjdGluZm8gPSAocHJvZHVjdDogYW55LCBwYWdlbGluazogc3RyaW5nKSA9PiB7XHJcbiAgaWYgKCQuaXNFbXB0eU9iamVjdChwcm9kdWN0KSkgeyAvLyBpbmNhc2Ugbm8gcHJvZHVjdCBpbiBwcm9kdWN0IHNlc3Npb24gXHJcbiAgICAkKCcjcGFnZXRpdGxlJykuZW1wdHkoKS5odG1sKGA8aDI+TmlsPC9oMj5gKTtcclxuICAgICQoJyNwYWdldHlwZScpLmVtcHR5KCkuaHRtbChgPGxpIGNsYXNzPVwiYnJlYWRjcnVtYi1pdGVtXCI+PGEgaHJlZj1cIiR7cGFnZWxpbmt9XCI+SG9tZTwvYT48L2xpPlxyXG4gICA8bGkgY2xhc3M9XCJicmVhZGNydW1iLWl0ZW0gYWN0aXZlXCIgYXJpYS1jdXJyZW50PVwicGFnZVwiPk5pbDwvbGk+YCk7XHJcbiAgICAkKCcjY2F0JykudGV4dChgTmlsYCk7XHJcbiAgICAkKGAjdG9wLWhvbWVgKS5lbXB0eSgpLmh0bWwoYE5pbGApO1xyXG4gICAgJCgnI3RvcC1wcm9maWxlJykuZW1wdHkoKS5odG1sKGBOaWxgKTtcclxuICAgIC8vICAkKCcubXlpbWFnZScpLnByb3AoJ3NyYycsYCR7YmFja2VuZHVybH0vamV0c3RvcmUvJHtwcm9kdWN0LmltYWdldXJsfWApIDtcclxuICAgIC8vICQoJy5pbnB1dC1udW1iZXInKS52YWwoYCR7cHJvZHVjdH1gKSA7XHJcbiAgICAkKCcjcHJkZXRhaWxzJykuZW1wdHkoKS5odG1sKGBcclxuICAgICAgICA8aDYgY2xhc3M9XCJwcm9kdWN0LXRpdGxlXCI+cHJvZHVjdCBkZXRhaWxzPC9oNj5cclxuICAgICAgICA8cD5OaWw8cD5cclxuICAgICAgICA8cD48c3Ryb25nPiBQcm9kdWN0IE5hbWUgPC9zdHJvbmc+ICZuYnNwOyZuYnNwO05pbDwvcD5cclxuICAgICAgICA8cD48c3Ryb25nPlByb2R1Y3QgU2l6ZTwvc3Ryb25nPiAmbmJzcDsmbmJzcDtOaWw8L3A+XHJcbiAgICAgICAgPHA+PHN0cm9uZz4gUHJvZHVjdCBTdGF0dXM8L3N0cm9uZz4gJm5ic3A7Jm5ic3A7TmlsPC9wPlxyXG4gICAgICAgIDxwPjxzdHJvbmc+UHJvZHVjdCBQcmljZTwvc3Ryb25nPiAmbmJzcDsmbmJzcDtOaWw8L3A+XHJcbiAgICAgICAgPHA+PHN0cm9uZz5Qcm9kdWN0IFRheCA8L3N0cm9uZz4gJm5ic3A7Jm5ic3A7TmlsJTwvcD5cclxuICAgICAgICA8cD48c3Ryb25nPlByb2R1Y3QgTW9kZWwgPC9zdHJvbmc+ICZuYnNwOyZuYnNwO05pbDwvcD5cclxuICAgICAgICA8cD48c3Ryb25nPlZlbmRvciBpbiBDaGFyZ2UgPC9zdHJvbmc+ICZuYnNwOyZuYnNwO05pbDwvcD5cclxuICAgICAgICBgKTtcclxuICAgIHJldHVybjtcclxuICB9XHJcbiAgJCgnI3BhZ2V0aXRsZScpLmVtcHR5KCkuaHRtbChgPGgyPiR7cHJvZHVjdC5jYXRlZ29yeWlkfTwvaDI+YCk7XHJcbiAgJCgnI3BhZ2V0eXBlJykuZW1wdHkoKS5odG1sKGA8bGkgY2xhc3M9XCJicmVhZGNydW1iLWl0ZW1cIj48YSBocmVmPVwiJHtwYWdlbGlua31cIj5Ib21lPC9hPjwvbGk+XHJcbiA8bGkgY2xhc3M9XCJicmVhZGNydW1iLWl0ZW0gYWN0aXZlXCIgYXJpYS1jdXJyZW50PVwicGFnZVwiPiR7cHJvZHVjdC5jYXRlZ29yeWlkfTwvbGk+YCk7XHJcbiAgJCgnI2NhdCcpLnRleHQoYCR7cHJvZHVjdC5jYXRlZ29yeWlkfWApO1xyXG4gICQoYCN0b3AtaG9tZWApLmVtcHR5KCkuaHRtbChgJHtwcm9kdWN0LnByb2RkZXNjcmlwdGlvbn1gKTtcclxuICAkKCcjdG9wLXByb2ZpbGUnKS5lbXB0eSgpLmh0bWwoYCR7cHJvZHVjdC5zaG9ydHN1bW1hcnl9YCk7XHJcbiAgJCgnLm15aW1hZ2UnKS5wcm9wKCdzcmMnLCBgJHtiYWNrZW5kdXJsfS9qZXRzdG9yZS8ke3Byb2R1Y3QuaW1hZ2V1cmx9YCk7XHJcbiAgLy8gJCgnLmlucHV0LW51bWJlcicpLnZhbChgJHtwcm9kdWN0fWApIDtcclxuICAkKCcjcHJkZXRhaWxzJykuZW1wdHkoKS5odG1sKGBcclxuICAgICAgPGg2IGNsYXNzPVwicHJvZHVjdC10aXRsZVwiPnByb2R1Y3QgZGV0YWlsczwvaDY+XHJcbiAgICAgIDxwPiR7cHJvZHVjdC5zaG9ydHN1bW1hcnl9PHA+XHJcbiAgICAgIDxwPjxzdHJvbmc+IFByb2R1Y3QgTmFtZSA8L3N0cm9uZz4gJm5ic3A7Jm5ic3A7JHtwcm9kdWN0LnByb2R1Y3RuYW1lfTwvcD5cclxuICAgICAgPHA+PHN0cm9uZz5Qcm9kdWN0IFNpemU8L3N0cm9uZz4gJm5ic3A7Jm5ic3A7JHtwcm9kdWN0LnNpemV9PC9wPlxyXG4gICAgICA8cD48c3Ryb25nPiBQcm9kdWN0IFN0YXR1czwvc3Ryb25nPiAmbmJzcDsmbmJzcDske3Byb2R1Y3QucHJvZHVjdHN0YXR1c308L3A+XHJcbiAgICAgIDxwPjxzdHJvbmc+UHJvZHVjdCBQcmljZTwvc3Ryb25nPiAmbmJzcDsmbmJzcDske3Byb2R1Y3QucHJvZHVjdHByaWNlfTwvcD5cclxuICAgICAgPHA+PHN0cm9uZz5Qcm9kdWN0IFRheCA8L3N0cm9uZz4gJm5ic3A7Jm5ic3A7JHtwcm9kdWN0LnRheH0lPC9wPlxyXG4gICAgICA8cD48c3Ryb25nPlByb2R1Y3QgTW9kZWwgPC9zdHJvbmc+ICZuYnNwOyZuYnNwOyR7cHJvZHVjdC5tb2RlbH08L3A+XHJcbiAgICAgIDxwPjxzdHJvbmc+VmVuZG9yIGluIENoYXJnZSA8L3N0cm9uZz4gJm5ic3A7Jm5ic3A7JHtwcm9kdWN0LnZlbmRvcm5hbWV9PC9wPlxyXG4gICAgICA8YSBzdHlsZT1cImNvbG9yOmJsdWU7XCIgdGFyZ2V0PVwiX1wiIGhyZWY9XCIuL2NoYXRcIj48c3Ryb25nPkNoYXQgd2l0aCA8L3N0cm9uZz50aGUgUHJvZHVjdCBPd25lcjwvc3Ryb25nPjwvYT5cclxuICAgICAgYCk7XHJcbiAgLy90byB3aXNobGlzdCBidXR0b25cclxuICAkKFwiI3dpc2hsaXN0LWJ0blwiKS5lbXB0eSgpLmh0bWwoYFxyXG4gIDxhIGhyZWY9XCJqYXZhc2NyaXB0OnZvaWQoMClcIiBjbGFzcz1cImJ0bi1saW5rXCIgb25jbGljaz1cImFkZHRvY2FydGZvcndpc2hsaXN0KCR7cHJvZHVjdC5pZH0pXCI+XHJcbiAgPGkgY2xhc3M9XCJmYSBmYS1oZWFydFwiPjwvaT48c3BhbiBjbGFzcz1cInRpdGxlLWZvbnRcIj5BZGQgVG9cclxuICAgIFdpc2hMaXN0PC9zcGFuPlxyXG4gICAgICAgICA8L2E+XHJcbiAgICAgICAgIGApXHJcbn07XHJcbmxldCB1c2VybWFwICA9ICBuZXcgTWFwKCkgO1xyXG4vLyB0aGUgbWVudSBcclxuJCgnLm11bHRpbWVudTInKS5vbignY2xpY2snLCAoZTogYW55KSA9PiB7XHJcbiAgZS5wcmV2ZW50RGVmYXVsdCgpO1xyXG4gIC8vYWxlcnQoZS50YXJnZXQuaW5uZXJUZXh0KSA7XHJcbiAgLy9jb25zb2xlLmxvZygndGhlIGV2ZW50ICcsZS50YXJnZXQuaW5uZXJUZXh0KSA7XHJcbiAgY29uc3QgZW5jb2RlciA9IGVuY29kZVVSSUNvbXBvbmVudChlLnRhcmdldC5pbm5lclRleHQpO1xyXG4gIHdpbmRvdy5sb2NhdGlvbi5ocmVmID0gYC4uL2pldGNhcnQvcHJvZHVjdGJ5Y2F0ZWdvcnk/cHJvZHVjdD0ke2VuY29kZXJ9YFxyXG59KTtcclxuJCgnI3JlbW92ZWl0ZW1mcm9tY2FydCcpLm9uKCdjbGljaycsIChlOiBhbnkpID0+IHtcclxuICBhbGVydCgnc2VlbicpO1xyXG59KTtcclxubGV0IHNvY2tldCA9IG51bGw7XHJcbmxldCBzdG9tcENsaWVudCA9IG51bGw7XHJcbi8vcGF5IG9uIGRlbGl2ZXJ5XHJcbiQoJyNwYXltZW50LTInKS5vbignY2xpY2snLCAoZTogYW55KSA9PiB7XHJcbiAgJChkaWFsb2coXCJcIiwgXCJcIiwgXCJcIikpLmluc2VydEFmdGVyKFwiLnVwcGVyLWJveFwiKTtcclxuICAkKCcubW9kYWwtYm9keScpLmVtcHR5KCkuaHRtbCgoKCkgPT4ge1xyXG4gICAgcmV0dXJuIChcclxuICAgICAgPHRhYmxlIGNsYXNzTmFtZT1cInRhYmxlIHRhYmxlLXN0cmlwZWRcIj5cclxuICAgICAgICA8dGhlYWQ+XHJcbiAgICAgICAgICA8dHI+XHJcbiAgICAgICAgICAgIDx0aCBzY29wZT1cImNvbFwiPiM8L3RoPlxyXG4gICAgICAgICAgICA8dGggc2NvcGU9XCJjb2xcIj5Db21wYW55IE5hbWU8L3RoPlxyXG4gICAgICAgICAgICA8dGggc2NvcGU9XCJjb2xcIj5CYW5rIE5hbWU8L3RoPlxyXG4gICAgICAgICAgICA8dGggc2NvcGU9XCJjb2xcIj5BY2NvdW50PC90aD5cclxuICAgICAgICAgIDwvdHI+XHJcbiAgICAgICAgPC90aGVhZD5cclxuICAgICAgICA8dGJvZHk+XHJcbiAgICAgICAgICA8dHI+XHJcbiAgICAgICAgICAgIDx0aCBzY29wZT1cInJvd1wiPjE8L3RoPlxyXG4gICAgICAgICAgICA8dGQ+Q3Jpc3RhbCBEaWdpdGFsIExpbWl0ZWQ8L3RkPlxyXG4gICAgICAgICAgICA8dGQ+QWNjZXNzIEJhbms8L3RkPlxyXG4gICAgICAgICAgICA8dGQ+MTExMTExMTExMTExMTE8L3RkPlxyXG4gICAgICAgICAgPC90cj5cclxuICAgICAgICA8L3Rib2R5PlxyXG4gICAgICA8L3RhYmxlPlxyXG4gICAgKTtcclxuICB9KSgpKTtcclxuICAkKFwiLm1vZGFsLWZvb3RlclwiKS5lbXB0eSgpLmh0bWwoKCgpID0+IHtcclxuICAgIGZ1bmN0aW9uIGNsb3NlKGU6IGFueSkge1xyXG4gICAgICBlLnByZXZlbnREZWZhdWx0KCk7XHJcbiAgICAgICQoJyNleGFtcGxlTW9kYWwnKS5tb2RhbCgnaGlkZScpO1xyXG4gICAgICBzZXRUaW1lb3V0KCgpID0+IHtcclxuICAgICAgICAkKCcjZXhhbXBsZU1vZGFsJykucmVtb3ZlKCk7XHJcbiAgICAgIH0sIDgwMCk7XHJcbiAgICB9XHJcbiAgICByZXR1cm4gKDxkaXY+XHJcbiAgICAgIDxidXR0b24gY2xhc3NOYW1lPVwiYnRuIGJ0bi1zZWNvbmRhcnlcIiB0eXBlPVwiYnV0dG9uXCIgZGF0YS1kaXNtaXNzPVwibW9kYWxcIiBvbkNsaWNrPXsoZSkgPT4gY2xvc2UoZSl9PkNsb3NlPC9idXR0b24+XHJcbiAgICA8L2Rpdj4pXHJcbiAgfSkoKSk7XHJcbiAgJCgnI2V4YW1wbGVNb2RhbCcpLm1vZGFsKCdzaG93Jyk7Ly9zaG93IG1vZGFsXHJcbn0pO1xyXG4vL3N1Ym1pdCBjb250YWN0IGZvcm1cclxuLy8gZnVuY3Rpb24gcmV0dXJuVG9QcmV2aW91c1BhZ2UoZTphbnkpe1xyXG4vLyAgIGUgPSBlIHx8IHdpbmRvdy5ldmVudDtcclxuLy8gICBjb25zb2xlLmxvZyhlKSA7XHJcbi8vICAgLy8gdmFsaWRhdGlvbiBjb2RlXHJcbi8vICAgYWxlcnQoJ2NvbnRhY3QnKSA7XHJcbi8vICAgLy8gaWYgaW52YWxpZFxyXG4vLyAgIGlmIChlLnByZXZlbnREZWZhdWx0KSB7XHJcbi8vICAgICBlLnByZXZlbnREZWZhdWx0KCk7XHJcbi8vICAgfSBlbHNlIHtcclxuLy8gICAgIGUucmV0dXJuVmFsdWUgPSBmYWxzZTtcclxuLy8gICB9XHJcbi8vIH1cclxuLy8gdmFyIHN1Ym1pdGNvbnRhY3QyID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJzdWJtaXRjb250YWN0MlwiKSBhcyBIVE1MQnV0dG9uRWxlbWVudDtcclxuLy8gaWYgKHN1Ym1pdGNvbnRhY3QyLmFkZEV2ZW50TGlzdGVuZXIpIHtcclxuLy8gICBzdWJtaXRjb250YWN0Mi5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgcmV0dXJuVG9QcmV2aW91c1BhZ2UpO1xyXG4vLyB9IGVsc2Uge1xyXG4vLyAgIC8vc3VibWl0Y29udGFjdDIuYXR0YWNoRXZlbnQoXCJvbmNsaWNrXCIsIHJldHVyblRvUHJldmlvdXNQYWdlKTtcclxuLy8gfVxyXG5cclxuLy8gJChkb2N1bWVudCkub24oJ3N1Ym1pdCcsICdzdWJtaXRjb250YWN0MicsIGZ1bmN0aW9uKGU6YW55KXtcclxuLy8gICBlLnByZXZlbnREZWZhdWx0KCk7XHJcbi8vICAgLy95b3VyIGNvZGUgZ29lcyBoZXJlXHJcbi8vICAgYWxlcnQoJ2NvbnRhY3QnKSA7XHJcbi8vICAgLy8xMDAlIHdvcmtzXHJcbi8vICAgcmV0dXJuO1xyXG4vLyB9KTtcclxuLy9tYWtlIHBheW1lbnQgXHJcbmZ1bmN0aW9uIG1ha2VQYXltZW50KGl0ZW1zYm91Z2h0OiBzdHJpbmcsIHR4cmVmOiBzdHJpbmcsIGFtb3VudDogbnVtYmVyLCBkZXNjcmlwdGlvbjogc3RyaW5nLCBpbWFnZWxpbms6IHN0cmluZywgdGl0bGU6IHN0cmluZywgY3VzdGRhdGE6IHN0cmluZykge1xyXG4gICBjb25zb2xlLmxvZygnaXRlbXNib3VnaHQgJyxKU09OLnBhcnNlKGl0ZW1zYm91Z2h0KSwnIHR4cmVmICcsdHhyZWYpIDtcclxuICAgY29uc29sZS5sb2coJ2Ftb3VudCAnLGFtb3VudCkgO1xyXG4gICBjb25zb2xlLmxvZygnZGVzY3JpcHRpb24gJyxkZXNjcmlwdGlvbikgO1xyXG4gICBjb25zb2xlLmxvZygnaW1hZ2VsaW5rICcsaW1hZ2VsaW5rKSA7XHJcbiAgIGNvbnNvbGUubG9nKCd0aXRsZSAnLHRpdGxlKSA7XHJcbiAgIGNvbnNvbGUubG9nKCdjdXN0ZGF0YSAnLGN1c3RkYXRhKSA7XHJcbiAgIGxldCBpdGVtcyA9SlNPTi5wYXJzZShpdGVtc2JvdWdodCkgO1xyXG4gICBjb25zb2xlLmxvZygnaXRlbXMgJyxwYXJzZUludChpdGVtcy5vcmRlclswXS5vdmVyYWxsdG90YWwuc3Vic3RyaW5nKDEpLnJlcGxhY2UoLywvZywgXCJcIikpKSA7XHJcbiAgLy92YWxpZGF0ZSB0aGUgZm9ybSBcclxuICBsZXQgZm9ybSA9IEpTT04ucGFyc2UoJCgnI3JlZ2Zvcm0nKS5qZm9ybSgpKTtcclxuICBjb25zb2xlLmxvZygnIGZvcm0gJywgZm9ybSwgZm9ybS5maXJzdG5hbWUpO1xyXG4gIGlmIChmb3JtLmZpcnN0bmFtZSA9PT0gXCJcIiB8fCBmb3JtLmZpcnN0bmFtZSA9PT0gbnVsbCkge1xyXG4gICAgdG9hc3RyLmVycm9yKCdmaXJzdG5hbWUgY2Fubm90IGJlIGVtcHR5Jyk7XHJcbiAgICByZXR1cm47XHJcbiAgfVxyXG4gIGlmIChmb3JtLmVtYWlsID09PSBcIlwiIHx8IGZvcm0uZW1haWwgPT09IG51bGwpIHtcclxuICAgIHRvYXN0ci5lcnJvcignRW1haWwgY2Fubm90IGJlIGVtcHR5Jyk7XHJcbiAgICByZXR1cm47XHJcbiAgfVxyXG4gIGlmIChmb3JtLmxhc3RuYW1lID09PSBcIlwiIHx8IGZvcm0ubGFzdG5hbWUgPT09IG51bGwpIHtcclxuICAgIHRvYXN0ci5lcnJvcignbGFzdG5hbWUgY2Fubm90IGJlIGVtcHR5Jyk7XHJcbiAgICByZXR1cm47XHJcbiAgfVxyXG4gIGlmIChmb3JtLnN0YXRlID09PSBcIlwiIHx8IGZvcm0uc3RhdGUgPT09IG51bGwpIHtcclxuICAgIHRvYXN0ci5lcnJvcignc3RhdGUgY2Fubm90IGJlIGVtcHR5Jyk7XHJcbiAgICByZXR1cm47XHJcbiAgfVxyXG4gIGlmIChmb3JtLmNpdHkgPT09IFwiXCIgfHwgZm9ybS5jaXR5ID09PSBudWxsKSB7XHJcbiAgICB0b2FzdHIuZXJyb3IoJ2NpdHkgY2Fubm90IGJlIGVtcHR5Jyk7XHJcbiAgICByZXR1cm47XHJcbiAgfVxyXG4gIGlmIChmb3JtLmFkZHJlc3MgPT09IFwiXCIgfHwgZm9ybS5hZGRyZXNzID09PSBudWxsKSB7XHJcbiAgICB0b2FzdHIuZXJyb3IoJ0FkZHJlc3MgY2Fubm90IGJlIGVtcHR5Jyk7XHJcbiAgICByZXR1cm47XHJcbiAgfVxyXG4gIGlmIChmb3JtLnBvc3RhbGNvZGUgPT09IFwiXCIgfHwgZm9ybS5wb3N0YWxjb2RlID09PSBudWxsKSB7XHJcbiAgICB0b2FzdHIuZXJyb3IoJ1Bvc3RhbCBjb2RlIGNhbm5vdCBiZSBlbXB0eScpO1xyXG4gICAgcmV0dXJuO1xyXG4gIH1cclxuICBpZiAoZm9ybS5waG9uZSA9PT0gXCJcIiB8fCBmb3JtLnBob25lID09PSBudWxsKSB7XHJcbiAgICB0b2FzdHIuZXJyb3IoJ1Bob25lIGNhbm5vdCBiZSBlbXB0eScpO1xyXG4gICAgcmV0dXJuO1xyXG4gIH1cclxuICBpZiAoZm9ybS5wYXNzd29yZCA9PT0gXCJcIiB8fCBmb3JtLnBhc3N3b3JkID09PSBudWxsKSB7XHJcbiAgICB0b2FzdHIuZXJyb3IoJ1Bhc3N3b3JkIGNhbm5vdCBiZSBlbXB0eScpO1xyXG4gICAgcmV0dXJuO1xyXG4gIH1cclxuICAvL2NvbnNvbGUubG9nKCdpdGVtc2JvdWdodCcsaXRlbXNib3VnaHQpO1xyXG4gIGNvbnN0IG1vZGFsICA9IEZsdXR0ZXJ3YXZlQ2hlY2tvdXQoe1xyXG4gICAgcHVibGljX2tleTogXCJGTFdQVUJLX1RFU1QtNzM5ZGJmYTVkZjk3Y2I5N2IxY2ZlNzRlNTFjNGViN2UtWFwiLFxyXG4gICAgdHhfcmVmOiB0eHJlZixcclxuICAgIGFtb3VudDogcGFyc2VJbnQoaXRlbXMub3JkZXJbMF0ub3ZlcmFsbHRvdGFsLnN1YnN0cmluZygxKS5yZXBsYWNlKC8sL2csIFwiXCIpKSxcclxuICAgIGN1cnJlbmN5OiBcIk5HTlwiLFxyXG4gICAgcGF5bWVudF9vcHRpb25zOiBcImNhcmQsdXNzZFwiLFxyXG4gICAgY2FsbGJhY2s6IGZ1bmN0aW9uIChwYXltZW50OiBhbnkpIHtcclxuICAgICAgLy8gU2VuZCBBSkFYIHZlcmlmaWNhdGlvbiByZXF1ZXN0IHRvIGJhY2tlbmRcclxuICAgICAgY29uc29sZS5sb2coJ3BheW1lbnQgJywgcGF5bWVudCk7XHJcbiAgICAgIHZlcmlmeVRyYW5zYWN0aW9uT25CYWNrZW5kKHBheW1lbnQsIGl0ZW1zYm91Z2h0KTtcclxuICAgIH0sXHJcbiAgICBvbmNsb3NlOiBmdW5jdGlvbiAoaW5jb21wbGV0ZTogYW55KSB7XHJcbiAgICAgIGNvbnNvbGUubG9nKCdtb2RhbCBvYmplY3QgdW5kZXIgY2xvc2UgJyxtb2RhbCwnIGNvbXBsZXRlICcsaW5jb21wbGV0ZSk7XHJcbiAgICAgLy8gbW9kYWwuY2xvc2UoKSA7XHJcbiAgICAgIC8vIGlmIChpbmNvbXBsZXRlIHx8IHdpbmRvdy52ZXJpZmllZCA9PT0gZmFsc2UpIHtcclxuICAgICAgLy8gICAoZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiNwYXltZW50LWZhaWxlZFwiKSBhcyBIVE1MSW5wdXRFbGVtZW50KS5zdHlsZS5kaXNwbGF5ID0gJ2Jsb2NrJztcclxuICAgICAgLy8gfSBlbHNlIHtcclxuICAgICAgLy8gICAoZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcImZvcm1cIikgYXMgSFRNTEZvcm1FbGVtZW50KS5zdHlsZS5kaXNwbGF5ID0gJ25vbmUnO1xyXG4gICAgICAvLyAgIGlmICh3aW5kb3cudmVyaWZpZWQgPT09IHRydWUpIHtcclxuICAgICAgLy8gICAgIChkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI3BheW1lbnQtc3VjY2Vzc1wiKSBhcyBIVE1MSW5wdXRFbGVtZW50KS5zdHlsZS5kaXNwbGF5ID0gJ2Jsb2NrJztcclxuICAgICAgLy8gICB9IGVsc2Uge1xyXG4gICAgICAvLyAgICAgKGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjcGF5bWVudC1wZW5kaW5nXCIpIGFzIEhUTUxJbnB1dEVsZW1lbnQpLnN0eWxlLmRpc3BsYXkgPSAnYmxvY2snO1xyXG4gICAgICAvLyAgIH1cclxuICAgICAgLy8gfVxyXG4gICAgfSxcclxuICAgIGN1c3RvbWVyOiB7XHJcbiAgICAgIGVtYWlsOiBmb3JtLmVtYWlsLFxyXG4gICAgICBwaG9uZV9udW1iZXI6IGZvcm0ucGhvbmUsXHJcbiAgICAgIG5hbWU6IGZvcm0uZmlyc3RuYW1lICsgJycgKyBmb3JtLmxhc3RuYW1lLFxyXG4gICAgfSxcclxuICAgIGN1c3RvbWl6YXRpb25zOiB7XHJcbiAgICAgIHRpdGxlOiB0aXRsZSxcclxuICAgICAgZGVzY3JpcHRpb246IGRlc2NyaXB0aW9uICsgXCI8YnIvPlwiICsgYW1vdW50LFxyXG4gICAgICBsb2dvOiBpbWFnZWxpbmtcclxuICAgIH1cclxuICB9KTtcclxuICBjb25zb2xlLmxvZygnbW9kYWwgb2JqZWN0ICcsbW9kYWwpO1xyXG59XHJcbi8vZ2VucmF0ZSByYW5kb24gcmFuZG9tICBpZHMgXHJcbmZ1bmN0aW9uIHVpZCgpIHtcclxuICBsZXQgYSA9IG5ldyBVaW50MzJBcnJheSgzKTtcclxuICB3aW5kb3cuY3J5cHRvLmdldFJhbmRvbVZhbHVlcyhhKTtcclxuICByZXR1cm4gKHBlcmZvcm1hbmNlLm5vdygpLnRvU3RyaW5nKDM2KSArIEFycmF5LmZyb20oYSkubWFwKEEgPT4gQS50b1N0cmluZygzNikpLmpvaW4oXCJcIikpLnJlcGxhY2UoL1xcLi9nLCBcIlwiKTtcclxufVxyXG5mdW5jdGlvbiBnZW5lcmF0ZUlkKCkge1xyXG4gIHJldHVybiBNYXRoLnJhbmRvbSgpLnRvU3RyaW5nKDM2KS5zdWJzdHJpbmcoMikgK1xyXG4gICAgKG5ldyBEYXRlKCkpLmdldFRpbWUoKS50b1N0cmluZygzNik7XHJcbn1cclxuZnVuY3Rpb24gdmVyaWZ5VHJhbnNhY3Rpb25PbkJhY2tlbmQodHJhbnNhY3Rpb25JZDogc3RyaW5nLCBpdGVtc2JvdWdodDogc3RyaW5nKSB7XHJcbiAgLy8gTGV0J3MganVzdCBwcmV0ZW5kIHRoZSByZXF1ZXN0IHdhcyBzdWNjZXNzZnVsXHJcbiAgY29uc29sZS5sb2coJ2FmdGVyIHRyYW5zYWN0aW9uIGZvciBiYWNrZW5kcyBjYWxscyAnLCB0cmFuc2FjdGlvbklkKTtcclxuICBzZXRUaW1lb3V0KGZ1bmN0aW9uICgpIHtcclxuICAgIHdpbmRvdy52ZXJpZmllZCA9IHRydWU7XHJcbiAgICBjb25zdCBjb250ZW50ID0gY29udGVudHR5cGV3aXRodG9rZW4obG9jYWxTdG9yYWdlLmdldEl0ZW0oJ2N1c3RvbWVydG9rZW4nKSk7XHJcbiAgICBzZXRhamF4KCdqc29uJywgYCR7YmFja2VuZHVybH0vb3JkZXIvY3JlYXRlYCwgJ3Bvc3QnLCBpdGVtc2JvdWdodCwgKHI6IGFueSkgPT4ge1xyXG4gICAgICBjb25zb2xlLmxvZygnciAnLHIpIDtcclxuICAgICAgLy8gcHJvY2VzcyB0aGUgcmVzcG9uc2VcclxuICAgICAgLy8gIG1ha2VQYXltZW50KGl0ZW1zYm91Z2h0OkpTT04sdHhyZWY6c3RyaW5nLGFtb3VudDpzdHJpbmcsZGVzY3JpcHRpb246c3RyaW5nLGltYWdlbGluazpzdHJpbmcsdGl0bGU6c3RyaW5nLGN1c3RkYXRhOnN0cmluZykgXHJcbiAgICB9LCAoKSA9PiB7XHJcbiAgICB9LCBjb250ZW50KTtcclxuICB9LCAyMDApO1xyXG59XHJcbi8vIHNlbmQgY29udGFjdCBmb3JtXHJcbiQoJyNzdWJtaXRjb250YWN0MicpLm9uKCdjbGljaycsIChlOiBhbnkpID0+IHtcclxuICBTd2FsLmZpcmUoe1xyXG4gICAgaWNvbjogJ2luZm8nLFxyXG4gICAgdGV4dDogJ0RvIHlvdSByZWFsbHkgd2FudCB0byBjb250YWN0IHVzID8nLFxyXG4gICAgc2hvd0NhbmNlbEJ1dHRvbjogZmFsc2UsXHJcbiAgICBhbGxvd091dHNpZGVDbGljazogZmFsc2UsXHJcbiAgfSkudGhlbigocmVzdWx0OiBhbnkpID0+IHtcclxuICAgIGlmIChyZXN1bHQuaXNDb25maXJtZWQpIHtcclxuICAgICAgbGV0IHN1Ym1pdGNvbnRhY3QyID0gbmV3IEZvcm1EYXRhKGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdjb250YWN0JykgYXMgSFRNTEZvcm1FbGVtZW50KVxyXG4gICAgICAvL0pTT04ucGFyc2UoJCgnI2NvbnRhY3QnKS5qZm9ybSgpKTtcclxuICAgICAgY29uc29sZS5sb2coJyBzdWJtaXRjb250YWN0MiAnLCBzdWJtaXRjb250YWN0Mi5nZXQoJ2VtYWlsJyksIE9iamVjdC5mcm9tRW50cmllcyhzdWJtaXRjb250YWN0MikpO1xyXG4gICAgICBzZXRhamF4KCdqc29uJywgYCR7YmFja2VuZHVybH0vY3VzdG9tZXIvY29udGFjdGAsICdwb3N0JywgSlNPTi5zdHJpbmdpZnkoT2JqZWN0LmZyb21FbnRyaWVzKHN1Ym1pdGNvbnRhY3QyKSksIChyZXNwb25zZTogYW55KSA9PiB7XHJcbiAgICAgICAgY29uc29sZS5sb2coJ3Jlc3BvbnNlICcsIHJlc3BvbnNlKTtcclxuICAgICAgfSwgKCkgPT4geyB9LCBjb250ZW50dHlwZSk7XHJcbiAgICB9XHJcbiAgfSlcclxufSk7XHJcblxyXG5jb25zdCBzdWJzY3JpYmV0b2V2ZW50ID0gKGV2ZW50U291cmNlOiBFdmVudFNvdXJjZSwgZXZ0eXBlOiBzdHJpbmcpID0+IHtcclxuICAvLyB2YXIgZXZlbnRTb3VyY2UgPSBuZXcgRXZlbnRTb3VyY2UodXJsKTtcclxuICAvLyB2YXIgZXZlbnRTb3VyY2UgPSBuZXcgRXZlbnRTb3VyY2UodXJsKTtcclxuICBldmVudFNvdXJjZS5hZGRFdmVudExpc3RlbmVyKGV2dHlwZSwgKGV2ZW50OiBhbnkpID0+IHtcclxuICAgIC8vIGlmIChldmVudC5kYXRhKSB7XHJcbiAgICAgIGNvbnNvbGUubG9nKCdmcm9tIGRpc3BhdGNoIGV2ZW50ICcsIGV2ZW50LmRhdGEpO1xyXG4gICAgICB0b2FzdHIuc3VjY2VzcygnbWVzc2FnZSBzZW50IHN1Y2Nlc3NmdWxseScpO1xyXG4gICAgICBhbGVydGlmeS5zdWNjZXNzKCdPaycpO1xyXG4gICAgICAgZXZlbnRTb3VyY2UuY2xvc2UoKTtcclxuICAgIC8vIH1cclxuICB9KTtcclxuICAvLyBmb3IgZXJyb3IgXHJcbiAgZXZlbnRTb3VyY2UuYWRkRXZlbnRMaXN0ZW5lcihcImVycm9yXCIsIChldmVudDogYW55KSA9PiB7XHJcbiAgICBpZiAoZXZlbnQuY3VycmVudFRhcmdldC5yZWFkeVN0YXRlID09PSBFdmVudFNvdXJjZS5DTE9TRUQpIHtcclxuICAgIH0gZWxzZSB7XHJcbiAgICAgIGV2ZW50U291cmNlLmNsb3NlKCk7XHJcbiAgICB9XHJcbiAgfSk7XHJcbiAgLy8gd2luZG93Lm9uYmVmb3JldW5sb2FkID0gZnVuY3Rpb24gKCkge1xyXG4gIC8vICAgZXZlbnRTb3VyY2UuY2xvc2UoKTtcclxuICAvLyB9XHJcbiAgLy8gY29uc29sZS5sb2coJ2Nsb3NpbmcgIGNvbm5lY3Rpb24gLi4uLi4nKSA7XHJcbiAgLy8gZXZlbnRTb3VyY2UuY2xvc2UoKSA7XHJcbiAgLy8gcmV0dXJuIGV2ZW50U291cmNlIDtcclxufVxyXG5jb25zdCBwYWdlc29ubG9hZCA9ICh1cmw6IHN0cmluZykgPT4ge1xyXG4gIC8vc2VydmVyIGV2ZW50cyBoYW5kbGluZyBjb25uZWN0aW9uXHJcbiAgY29uc29sZS5sb2coJ2NhbGxpbmcgZXZlbnRzIGNvbm5lY3Rpb24gc3Vic2NyaWJlciAuLi4uJykgO1xyXG4gLy8gc3Vic2NyaWJldG9ldmVudChuZXcgRXZlbnRTb3VyY2UoYCR7YmFja2VuZHVybH0vc3Vic2NyaWJlYCksICdsYXRlc3ROZXdzJyk7XHJcbiAvLyBzdWJzY3JpYmV0b2V2ZW50KG5ldyBFdmVudFNvdXJjZShgJHtiYWNrZW5kdXJsfS9ldmVudGJ5dXNlcj91c2VyaWQ9JHtsb2NhbFN0b3JhZ2UuZ2V0SXRlbSgnYWNrJyl9YCksICd1c2VybmV3cycpO1xyXG4gIC8vc3Vic2NyaWJldG9ldmVudChuZXcgRXZlbnRTb3VyY2UoYCR7YmFja2VuZHVybH0vc3Vic2NyaWJlP3ZlbmRvcm5hbWU9JHtsb2NhbFN0b3JhZ2UuZ2V0SXRlbSgndmVuZG9ybmFtZScpfWApLCd2ZW5kb3JuZXdzJyk7XHJcbiAgY29uc3QgY2FydHN0b3JlID0gSlNPTi5wYXJzZShzZXNzaW9uU3RvcmFnZS5nZXRJdGVtKCdzdG9yZScpIGFzIHN0cmluZyk7XHJcbiAgY29uc29sZS5sb2coJ2JlZm9yZSBjYXJ0c3RvcmUgJywgY2FydHN0b3JlKSAvLyB0cnVlKSA7XHJcbiAgaWYgKGNhcnRzdG9yZSAhPT0gbnVsbCAmJiAhY2FydHN0b3JlLmluY2x1ZGVzKG51bGwpKSB7XHJcbiAgICAvLyBjb25zb2xlLmxvZygnIGNhcnRzb3RyZSAnLGNhcnRzdG9yZS5sZW5ndGgsY2FydHN0b3JlKSA7XHJcbiAgICBjb25zdCBiID0gbmV3IFN0cmluZ0J1aWxkZXIoKTtcclxuICAgIGNhcnRzdG9yZS5mb3JFYWNoKChyZXM6IGFueSkgPT4ge1xyXG4gICAgICAvL2NvbnNvbGUubG9nKCdyZXMgJyxyZXMpIDtcclxuICAgICAgYi5hcHBlbmQoYFxyXG4gICAgICAgICAgICAgICAgICAgICAgPGxpPlxyXG5cdFx0XHRcdFx0XHRcdFx0XHRcdFx0XHQ8ZGl2IGNsYXNzPVwibWVkaWFcIj5cclxuXHRcdFx0XHRcdFx0XHRcdFx0XHRcdFx0XHQ8YSBocmVmPVwiI1wiPjxpbWcgY2xhc3M9XCJtci0zXCJcclxuXHRcdFx0XHRcdFx0XHRcdFx0XHRcdFx0XHRcdHNyYz1cIiR7YmFja2VuZHVybH0vamV0c3RvcmUvJHtyZXMuaW1hZ2V1cmx9XCJcclxuXHRcdFx0XHRcdFx0XHRcdFx0XHRcdFx0XHRcdGFsdD1cIkdlbmVyaWMgcGxhY2Vob2xkZXIgaW1hZ2VcIj48L2E+XHJcblx0XHRcdFx0XHRcdFx0XHRcdFx0XHRcdFx0PGRpdiBjbGFzcz1cIm1lZGlhLWJvZHlcIj5cclxuXHRcdFx0XHRcdFx0XHRcdFx0XHRcdFx0XHRcdDxhIGhyZWY9XCIjXCI+XHJcblx0XHRcdFx0XHRcdFx0XHRcdFx0XHRcdFx0XHRcdDxoND4ke3Jlcy5wcm9kdWN0bmFtZX08L2g0PlxyXG5cdFx0XHRcdFx0XHRcdFx0XHRcdFx0XHRcdFx0PC9hPlxyXG5cdFx0XHRcdFx0XHRcdFx0XHRcdFx0XHRcdFx0PGg0PlxyXG5cdFx0XHRcdFx0XHRcdFx0XHRcdFx0XHRcdFx0XHQ8c3Bhbj4ke3Jlcy5wcm9kdWN0cXVhbnRpdHl9IHggJHtwYXJzZUZsb2F0KHJlcy5wcm9kdWN0cHJpY2UpLnRvRml4ZWQoMikucmVwbGFjZSgvXFxkKD89KFxcZHszfSkrXFwuKS9nLCAnJCYsJyl9PC9zcGFuPlxyXG5cdFx0XHRcdFx0XHRcdFx0XHRcdFx0XHRcdFx0PC9oND5cclxuXHRcdFx0XHRcdFx0XHRcdFx0XHRcdFx0XHQ8L2Rpdj5cclxuXHRcdFx0XHRcdFx0XHRcdFx0XHRcdFx0PC9kaXY+XHJcblx0XHRcdFx0XHRcdFx0XHRcdFx0XHRcdDxkaXYgY2xhc3M9XCJjbG9zZS1jaXJjbGVcIj5cclxuXHRcdFx0XHRcdFx0XHRcdFx0XHRcdFx0XHQ8YSBocmVmPVwiI1wiPjxpIGNsYXNzPVwiZmEgZmEtdGltZXNcIiBhcmlhLWhpZGRlbj1cInRydWVcIj48L2k+PC9hPlxyXG5cdFx0XHRcdFx0XHRcdFx0XHRcdFx0XHQ8L2Rpdj5cclxuXHRcdFx0XHRcdFx0XHRcdFx0XHRcdDwvbGk+XHJcbiAgICAgICAgICAgYCk7XHJcbiAgICB9KTtcclxuICAgICQoJyNjYXJ0c3VtbWFyeScpLmVtcHR5KCkuaHRtbChiLnRvU3RyaW5nKCkpO1xyXG4gIH0gZWxzZSB7XHJcbiAgICAkKCcjY2FydHN1bW1hcnknKS5lbXB0eSgpLmh0bWwoYDxsaT5lbXB0eSBjYXJ0PC9saT5gKTtcclxuICB9XHJcbiAgc3dpdGNoICh1cmwpIHtcclxuICAgIGNhc2UgYCR7bG9naW51cmx9L3RheGVzYDogLy8gZm9yIHRheGVzXHJcbiAgICAgIGNvbnN0IHRheGVzZGF0YSA9IFtcclxuICAgICAgICB7XHJcbiAgICAgICAgICBuYW1lOiAnaWQnLFxyXG4gICAgICAgICAgdHlwZTogJ2hpZGRlbicsXHJcbiAgICAgICAgICBjc3M6ICdoaWRlJ1xyXG4gICAgICAgIH0sXHJcbiAgICAgICAge1xyXG4gICAgICAgICAgbmFtZTogXCJ0YXhkZXRhaWxcIiwgdHlwZTogXCJ0ZXh0XCIsIGFsaWduOiBcImxlZnRcIiwgd2lkdGg6IDgwLCB2YWxpZGF0ZTogZnVuY3Rpb24gKHZhbHVlOiBhbnkpIHtcclxuICAgICAgICAgICAgLy8gaWYgKHZhbHVlID4gMCkge1xyXG4gICAgICAgICAgICByZXR1cm4gdHJ1ZTtcclxuICAgICAgICAgICAgLy99XHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgfSxcclxuICAgICAgICB7XHJcbiAgICAgICAgICBuYW1lOiBcInRheHNjaGVkdWxlXCIsIGFsaWduOiBcImxlZnRcIiwgdHlwZTogXCJ0ZXh0XCIsIHdpZHRoOiA1MCxcclxuICAgICAgICAgIC8vIGl0ZW1UZW1wbGF0ZTogZnVuY3Rpb24gKHZhbHVlOiBhbnksIGl0ZW06IGFueSkge1xyXG4gICAgICAgICAgLy8gICBjb25zb2xlLmxvZygnIHZhbHVlICcsIHZhbHVlLCAnIGl0ZW0gJywgaXRlbSk7XHJcbiAgICAgICAgICAvLyB9LFxyXG4gICAgICAgIH0sXHJcbiAgICAgICAge1xyXG4gICAgICAgICAgbmFtZTogXCJ0b3RhbHRheGFtb3VudFwiLCBhbGlnbjogXCJsZWZ0XCIsIHR5cGU6IFwidGV4dFwiLCB3aWR0aDogNTAsXHJcbiAgICAgICAgICAvLyBpdGVtVGVtcGxhdGU6IGZ1bmN0aW9uICh2YWx1ZTogYW55LCBpdGVtOiBhbnkpIHtcclxuICAgICAgICAgIC8vICAgY29uc29sZS5sb2coJyB2YWx1ZSAnLCB2YWx1ZSwgJyBpdGVtICcsIGl0ZW0pO1xyXG4gICAgICAgICAgLy8gfSxcclxuICAgICAgICB9LFxyXG4gICAgICAgIHtcclxuICAgICAgICAgIG5hbWU6IFwidGF4cmF0ZVwiLCBhbGlnbjogXCJsZWZ0XCIsIHR5cGU6IFwidGV4dFwiLCB3aWR0aDogNTAsXHJcbiAgICAgICAgICAvLyBpdGVtVGVtcGxhdGU6IGZ1bmN0aW9uICh2YWx1ZTogYW55LCBpdGVtOiBhbnkpIHtcclxuICAgICAgICAgIC8vICAgY29uc29sZS5sb2coJyB2YWx1ZSAnLCB2YWx1ZSwgJyBpdGVtICcsIGl0ZW0pO1xyXG4gICAgICAgICAgLy8gfSxcclxuICAgICAgICB9LFxyXG4gICAgICAgIHsgdHlwZTogXCJjb250cm9sXCIgfVxyXG4gICAgICBdO1xyXG4gICAgICBjcmVhdGV0YWJsZXMyKGAke2JhY2tlbmR1cmx9L3RheGVzL3VwZGF0ZXRheGAsIGxvY2FsU3RvcmFnZS5nZXRJdGVtKCd0b2tlbicpLCB0YXhlc2RhdGEsIHRydWUpO1xyXG4gICAgICBicmVhaztcclxuICAgIGNhc2UgYCR7bG9naW51cmx9L2pldGNhcnQvaW5kZXhgOlxyXG4gICAgICAvL2xvYWQgIGltYWdlcyBcclxuICAgICAgc2VhcmNoRml0ZXIyKCk7XHJcbiAgICAgIHNlYXJjaE5ld0Fycml2YWxGaWx0ZXIoKTtcclxuICAgICAgc2VhcmNoRmVhdHVyZWRGaWx0ZXIoKTtcclxuICAgICAgLy8gbG9hZCBtYXJrZXQgcHJvZHVjdHNcclxuICAgICAgc2VhcmNoYW5kbG9hZG1hcmtldHByb2R1Y3RzKCk7XHJcbiAgICAgIGJyZWFrO1xyXG4gICAgY2FzZSBgJHtsb2dpbnVybH0vamV0Y2FydC9jaGF0YDpcclxuICAgICAgaWYobG9jYWxTdG9yYWdlLmdldEl0ZW0oJ2N1c3RvbWVydG9rZW4nKSl7XHJcbiAgICAgIChmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgLy8gaW52YWxpZGF0ZVNlc3Npb25BbmRUb2tlbihqd3RfZGVjb2RlLCdjdXN0b21lcnRva2VuJykgO1xyXG4gICAgICAgIC8vIGFsZXJ0KCkgO1xyXG4gICAgICAvLyAgbGV0IG15V2ViU29ja2V0ID0gbmV3IE15V2Vic2Nva2V0KGB3czovL2xvY2FsaG9zdDoxMDIzL3dzYCk7XHJcbiAgICAgICAgLy8gbGV0IHdlYlNvY2tldDpXZWJTb2NrZXQgPSBuZXcgV2ViU29ja2V0KGB3czovL2xvY2FsaG9zdDoxMDIzL3dzYCk7XHJcbiAgICAgICAgLy8gd2ViU29ja2V0Lm9ub3BlbiA9IGZ1bmN0aW9uIChldnQ6YW55KSB7XHJcbiAgICAgICAgLy8gICBjb25zb2xlLmxvZyhcIm9ub3BlbiBjb25uZWN0ZWQgXCIsIGV2dC5kYXRhKTtcclxuICAgICAgICAvLyB9XHJcbiAgICAgICAgLy8gd2ViU29ja2V0Lm9ubWVzc2FnZSA9IGZ1bmN0aW9uIChldnQpIHtcclxuICAgICAgICAvLyAgIGNvbnNvbGUubG9nKCdvbiBtZXNzYWdlJywgZXZ0LmRhdGEpO1xyXG4gICAgICAgIC8vIH07XHJcbiAgICAgICAgLy8gd2ViU29ja2V0Lm9uZXJyb3IgPSBmdW5jdGlvbiAoZXZ0OmFueSkge1xyXG4gICAgICAgIC8vICAgY29uc29sZS5sb2coJ29uZXJyb3IgJywgZXZ0LmRhdGEpO1xyXG4gICAgICAgIC8vIH07XHJcbiAgICAgICAgc29ja2V0ID0gbmV3IFNvY2tKUyhgJHtzb2NranN1cmx9L3dzYCk7XHJcbiAgICAgICAgc3RvbXBDbGllbnQgPSBTdG9tcC5vdmVyKHNvY2tldCk7XHJcbiAgICAgICBzdG9tcENsaWVudC5jb25uZWN0KHt9LCgpPT57XHJcbiAgICAgICAgc3RvbXBDbGllbnQuc3Vic2NyaWJlKCcvY2hhdHJvb20vcHVibGljJyxvbk1lc3NhZ2VSZWNlaXZlZCk7XHJcbiAgICAgICAgLy9kaXNwYXRjaCBldmVudCBiZWZvcmUgc3Vic2NyaWJpbmcgXHJcbiAgICAgICAgbGV0IGNvbnRlbnQgPSBjb250ZW50dHlwZXdpdGh0b2tlbihsb2NhbFN0b3JhZ2UuZ2V0SXRlbSgnY3VzdG9tZXJ0b2tlbicpKSA7XHJcbiAgICAgICAgbGV0IHVyaWVuY29kZSAgPSBlbmNvZGVVUklDb21wb25lbnQoYFske2xvY2FsU3RvcmFnZS5nZXRJdGVtKCd2ZW5kb3JuYW1lJyl9XWApIDtcclxuICAgICAgICBzZXRhamF4KCcnLGAke2JhY2tlbmR1cmx9L2Rpc3BhdGNoRXZlbnQ/dmVuZG9ybmFtZT0ke3VyaWVuY29kZX0mZnJlc2hOZXdzPSR7bG9jYWxTdG9yYWdlLmdldEl0ZW0oJ3VzZXJuYW1lJyl9YCwnZ2V0JyxcIlwiLCAocmVzcG9uc2U6IGFueSkgPT4ge1xyXG4gICAgICAgICAgLy8gcHJvY2VzcyB0aGUgcmVzcG9uc2VcclxuICAgICAgICAgIGNvbnNvbGUubG9nKCdyZXNwb25zZSAnLCByZXNwb25zZSk7IFxyXG4gICAgICAgIH0sICgpID0+IHt9LCBjb250ZW50KTtcclxuICAgICAgICB2YXIgY2hhdE1lc3NhZ2UgPSB7XHJcbiAgICAgICAgICBzZW5kZXJOYW1lOmxvY2FsU3RvcmFnZS5nZXRJdGVtKCd1c2VybmFtZScpLFxyXG4gICAgICAgICAvLyByZWNlaXZlck5hbWU6dXNlcm1hcC5nZXQoJ3JlY2VpdmVyTmFtZScpIT09dW5kZWZpbmVkP3VzZXJtYXAuZ2V0KCdyZWNlaXZlck5hbWUnKTpcIlwiLFxyXG4gICAgICAgICAgbWVzc2FnZTogXCJcIixcclxuICAgICAgICAgIHN0YXR1czpcIkpPSU5cIlxyXG4gICAgICAgICAgIH07XHJcbiAgICAgICAgc3RvbXBDbGllbnQuc2VuZChcIi9hcHAvbWVzc2FnZVwiLCB7fSwgSlNPTi5zdHJpbmdpZnkoY2hhdE1lc3NhZ2UpKTtcclxuICAgICAgICBzdG9tcENsaWVudC5zdWJzY3JpYmUoJy91c2VyLycrbG9jYWxTdG9yYWdlLmdldEl0ZW0oJ3VzZXJuYW1lJykrJy9wcml2YXRlJywgb25Qcml2YXRlTWVzc2FnZSk7XHJcbiAgICAgICB9LCgpPT57XHJcbiAgICAgICBjb25zb2xlLmxvZyhcInVuYWJsZSB0byBjb25uZWN0XCIpIDsgICBcclxuICAgICAgIH0pO1xyXG4gICAgICB9KSgpO1xyXG4gICAgICAkKCcjc2VuZGJ0bicpLm9uKCdjbGljaycsKGU6YW55KT0+e1xyXG4gICAgICAgIGUucHJldmVudERlZmF1bHQoKSA7XHJcbiAgICAgICBjb25zb2xlLmxvZygkKCcjY2hhdG1zZycpLnZhbCgpKSA7XHJcbiAgICAgICAgdmFyIGNoYXRNZXNzYWdlID0ge1xyXG4gICAgICAgICAgc2VuZGVyTmFtZTpsb2NhbFN0b3JhZ2UuZ2V0SXRlbSgndXNlcm5hbWUnKSxcclxuICAgICAgICAgIHJlY2VpdmVyTmFtZTpsb2NhbFN0b3JhZ2UuZ2V0SXRlbSgndmVuZG9ybmFtZScpLFxyXG4gICAgICAgICAgbWVzc2FnZTogJCgnI2NoYXRtc2cnKS52YWwoKSxcclxuICAgICAgICAgIHN0YXR1czpcIk1FU1NBR0VcIlxyXG4gICAgICAgIH07XHJcbiAgICAgICQoJyNtc2dhcmVhJykuYXBwZW5kKGA8cCBzdHlsZT1cImNvbG9yOmJsdWVcIj48aT4keyQoJyNjaGF0bXNnJykudmFsKCl9PC9pPjwvcD5gKSA7XHJcbiAgICAgICQoJyNjaGF0bXNnJykudmFsKCcnKTtcclxuICAgIC8vKGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdtc2dhcmVhJykgYXMgSFRNTFVMaXN0RWxlbWVudCkuc2Nyb2xsVG9wID0gIChkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnbXNnYXJlYScpIGFzIEhUTUxVTGlzdEVsZW1lbnQpLnNjcm9sbEhlaWdodDtcclxuICAgICAgc3RvbXBDbGllbnQuc2VuZChcIi9hcHAvcHJpdmF0ZS1tZXNzYWdlXCIse30sSlNPTi5zdHJpbmdpZnkoY2hhdE1lc3NhZ2UpKVxyXG4gICAgICB9KSA7XHJcbiAgICB9ZWxzZXtcclxuICAgICAgYWxlcnQoJ1BscyBsb2dpbiB0byBhY2Nlc3MnKSA7XHJcbiAgICAgIGxvY2FsU3RvcmFnZS5jbGVhciA7XHJcbiAgICAgIHdpbmRvdy5sb2NhdGlvbi5ocmVmPScuL2luZGV4JyA7XHJcbiAgICB9XHJcbiAgICAgIGJyZWFrO1xyXG4gICAgY2FzZSBgJHtsb2dpbnVybH0vamV0Y2FydC9jaGVja291dGA6XHJcbiAgICAgIC8vIGNoZWNrIHVzZXIncyAgbG9naW4gXHJcbiAgICAgIGxldCBpZCA9IGxvY2FsU3RvcmFnZS5nZXRJdGVtKCdhY2snKTtcclxuICAgICAgY29uc29sZS5sb2coXCJpZCBcIiwgaWQpO1xyXG4gICAgICBpZiAoaWQpIHsgICAvL2NoZWNrIGlmIGhlIGlzIGxvZ2dlZCBpblxyXG4gICAgICAgIGludmFsaWRhdGVTZXNzaW9uKGp3dF9kZWNvZGUsICdjdXN0b21lcnRva2VuJyk7XHJcbiAgICAgICAgY29uc29sZS5sb2coJ2NhcnQgc3RvcmUgJywgY2FydHN0b3JlKTtcclxuICAgICAgICAvL2xvYWRzIGNvdW50cmllc1xyXG4gICAgICAgIHNldGFqYXgoJ2pzb24nLCBgaHR0cHM6Ly9jb3VudHJpZXNub3cuc3BhY2UvYXBpL3YwLjEvY291bnRyaWVzL3N0YXRlc2AsICdnZXQnLCBcIlwiLCAocmVzcG9uc2U6IGFueSkgPT4ge1xyXG4gICAgICAgICAgLy8gcHJvY2VzcyB0aGUgcmVzcG9uc2VcclxuICAgICAgICAgIGxldCBjb3VudHJpZXMgPSByZXNwb25zZS5kYXRhLm1hcCgoZTogYW55KSA9PiB7XHJcbiAgICAgICAgICAgIHJldHVybiBgPG9wdGlvbiB2YWx1ZT0ke2UubmFtZX0+JHtlLm5hbWV9PC9vcHRpb24+YDtcclxuICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgJCgnI2NvdW50cnknKS5lbXB0eSgpLmh0bWwoY291bnRyaWVzLmpvaW4oXCJcIikpO1xyXG4gICAgICAgIH0sICgpID0+IHsgfSwgY29udGVudHR5cGUpO1xyXG4gICAgICAgIGNvbnN0IGZvcm0gPSBzZXNzaW9uU3RvcmFnZS5nZXRJdGVtKCdmb3JtJyk7XHJcbiAgICAgICAgY29uc29sZS5sb2coJ2Zvcm0gJywgZm9ybSk7XHJcbiAgICAgICAgaWYgKGZvcm0pIHtcclxuICAgICAgICAgICQoXCIjcmVnZm9ybVwiKS5hdXRvZmlsbChKU09OLnBhcnNlKGZvcm0pKTsgIC8vYXV0b2ZpbGwgdGhlICBmb3JtIGlmIHNlc3Npb24gZXhpc3RzIFxyXG4gICAgICAgIH0gZWxzZSB7ICAvLyBsb2FkIHRoZSBmb3JtIGZyb20gYmFja2VuZFxyXG4gICAgICAgICAgbGV0IGNvbnRlbnQgPSBjb250ZW50dHlwZXdpdGh0b2tlbihsb2NhbFN0b3JhZ2UuZ2V0SXRlbSgnY3VzdG9tZXJ0b2tlbicpKTtcclxuICAgICAgICAgIHNldGFqYXgoJ2pzb24nLCBgJHtiYWNrZW5kdXJsfS91c2VyZGV0YWlsLyR7aWR9YCwgJ2dldCcsIFwiXCIsIChyZXNwb25zZTogYW55KSA9PiB7XHJcbiAgICAgICAgICAgIC8vIHByb2Nlc3MgdGhlIHJlc3BvbnNlXHJcbiAgICAgICAgICAgIGxldCBwaG9uZW51bWJlciA9IHJlc3BvbnNlWzBdLnBob25lbnVtYmVyO1xyXG4gICAgICAgICAgICBsZXQganNvbiA9IHsgLi4ucmVzcG9uc2VbMF0gfTtcclxuICAgICAgICAgICAganNvbi5waG9uZSA9IHBob25lbnVtYmVyO1xyXG4gICAgICAgICAgICBkZWxldGUganNvbi5waG9uZW51bWJlcjtcclxuICAgICAgICAgICAgLy8ganNvbiA9IE9iamVjdC5hc3NpZ24oe30sIGFycmF5KTtcclxuICAgICAgICAgICAgLy8ganNvbiA9IGFycmF5LnJlZHVjZSgoanNvbiwgdmFsdWUsIGtleSkgPT4geyBqc29uW2tleV0gPSB2YWx1ZTsgcmV0dXJuIGpzb247IH0sIHt9KTtcclxuICAgICAgICAgICAgY29uc29sZS5sb2coJ3Jlc3BvbnNlIGZyb20gICcsIHJlc3BvbnNlLCAnanNvbicsIGpzb24pO1xyXG4gICAgICAgICAgICAkKFwiI3JlZ2Zvcm1cIikuYXV0b2ZpbGwoanNvbik7XHJcbiAgICAgICAgICB9LCAoKSA9PiB7IH0sIGNvbnRlbnQpO1xyXG4gICAgICAgIH1cclxuICAgICAgICBpZiAoY2FydHN0b3JlID09PSBudWxsIHx8IGNhcnRzdG9yZS5pbmNsdWRlcyhudWxsKSkge1xyXG4gICAgICAgICAgbGV0IGNvbnRlbnQgPSBjb250ZW50dHlwZXdpdGh0b2tlbihsb2NhbFN0b3JhZ2UuZ2V0SXRlbSgnY3VzdG9tZXJ0b2tlbicpKTtcclxuICAgICAgICAgIGNvbnNvbGUubG9nKCdjb250ZW50ICcsIGNvbnRlbnQsIGAke2JhY2tlbmR1cmx9L3Byb2R1Y3QvbG9hZGNhcnRsaXN0LyR7bG9jYWxTdG9yYWdlLmdldEl0ZW0oJ2FjaycpfWApO1xyXG4gICAgICAgICAgLy9hbGVydChsb2NhbFN0b3JhZ2UuZ2V0SXRlbSgnYWNrJykpIDtcclxuICAgICAgICAgIHNldGFqYXgoJ3RleHQnLCBgJHtiYWNrZW5kdXJsfS9wcm9kdWN0L2xvYWRjYXJ0bGlzdC8ke2xvY2FsU3RvcmFnZS5nZXRJdGVtKCdhY2snKX1gLCAnZ2V0JywgJycsIChzdG9yZTogYW55KSA9PiB7XHJcbiAgICAgICAgICAgIC8vIHByb2Nlc3MgdGhlIHJlc3BvbnNlXHJcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKCdsb2FkZWQgcmVzcG9uc2UgJywgc3RvcmUpO1xyXG4gICAgICAgICAgICBpZiAoc3RvcmUubGVuZ3RoID09PSAwKSB7XHJcbiAgICAgICAgICAgICAgJCgnI2NhcnRjaGVja291dCcpLmVtcHR5KCkuaHRtbChgPHRyPjx0ZD5Zb3VyIGNhcnQgaXMgZW1wdHk8L3RkPjx0ZD48L3RkPjx0ZD48L3RkPjx0ZD48L3RkPjx0ZD48L3RkPjwvdHI+YCk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgY29uc3QgYnVpbGRlcjIgPSBuZXcgU3RyaW5nQnVpbGRlcigpO1xyXG4gICAgICAgICAgICBzdG9yZS5mb3JFYWNoKChlOiBhbnkpID0+IHtcclxuICAgICAgICAgICAgICBidWlsZGVyMi5hcHBlbmQoYDx0cj48dGQ+JHtlLnByb2R1Y3RuYW1lfTwvdGQ+PHRkPiR7cGFyc2VGbG9hdChlLnByb2R1Y3RxdWFudGl0eSkudG9GaXhlZCgyKS5yZXBsYWNlKC9cXGQoPz0oXFxkezN9KStcXC4pL2csICckJiwnKX08L3RkPlxyXG4gICAgICAgICAgICAgIDx0ZD48c3Bhbj5OJHtwYXJzZUZsb2F0KGUucHJvZHVjdHByaWNlKS50b0ZpeGVkKDIpLnJlcGxhY2UoL1xcZCg/PShcXGR7M30pK1xcLikvZywgJyQmLCcpfTwvc3Bhbj48L3RkPjx0ZD48c3Bhbj5OJHsocGFyc2VGbG9hdChlLnByb2R1Y3RwcmljZSkgKiBwYXJzZUZsb2F0KGUucHJvZHVjdHF1YW50aXR5KSkudG9GaXhlZCgyKS5yZXBsYWNlKC9cXGQoPz0oXFxkezN9KStcXC4pL2csICckJiwnKX08L3NwYW4+PHRkPjx0ZD4ke2UudGF4fSU8L3RkPjwvdHI+YClcclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgICQoJyNjYXJ0Y2hlY2tvdXQnKS5lbXB0eSgpLmh0bWwoYnVpbGRlcjIudG9TdHJpbmcoKSk7XHJcbiAgICAgICAgICAgIGNvbnN0IHByaWNlID0gc3RvcmUubWFwKChyZXM6IGFueSkgPT4ge1xyXG4gICAgICAgICAgICAgIHJldHVybiByZXMucHJvZHVjdHByaWNlICogcmVzLnByb2R1Y3RxdWFudGl0eTtcclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKCd0b3RhbHByaWNlJywgcHJpY2UpO1xyXG4gICAgICAgICAgICAkKCcjdG90YWwnKS50ZXh0KGBOJHsocGFyc2VGbG9hdChwcmljZS5yZWR1Y2UoKGE6IGFueSwgYjogYW55KSA9PiBhICsgYiwgMC4wKSkudG9GaXhlZCgyKS5yZXBsYWNlKC9cXGQoPz0oXFxkezN9KStcXC4pL2csICckJiwnKSl9YCk7XHJcbiAgICAgICAgICB9LCAoKSA9PiB7IH0sIGNvbnRlbnQpO1xyXG4gICAgICAgICAgcmV0dXJuO1xyXG4gICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICBjb25zdCBidWlsZGVyMiA9IG5ldyBTdHJpbmdCdWlsZGVyKCk7XHJcbiAgICAgICAgICBjYXJ0c3RvcmUuZm9yRWFjaCgoZTogYW55KSA9PiB7XHJcbiAgICAgICAgICAgIGJ1aWxkZXIyLmFwcGVuZChgPHRyPjx0ZD4ke2UucHJvZHVjdG5hbWV9PC90ZD48dGQ+JHtwYXJzZUZsb2F0KGUucHJvZHVjdHF1YW50aXR5KS50b0ZpeGVkKDIpLnJlcGxhY2UoL1xcZCg/PShcXGR7M30pK1xcLikvZywgJyQmLCcpfTwvdGQ+XHJcbiAgICAgICAgICAgIDx0ZD48c3Bhbj5OJHtwYXJzZUZsb2F0KGUucHJvZHVjdHByaWNlKS50b0ZpeGVkKDIpLnJlcGxhY2UoL1xcZCg/PShcXGR7M30pK1xcLikvZywgJyQmLCcpfTwvc3Bhbj48L3RkPjx0ZD48c3Bhbj5OJHsocGFyc2VGbG9hdChlLnByb2R1Y3RwcmljZSkgKiBwYXJzZUZsb2F0KGUucHJvZHVjdHF1YW50aXR5KSkudG9GaXhlZCgyKS5yZXBsYWNlKC9cXGQoPz0oXFxkezN9KStcXC4pL2csICckJiwnKX08L3NwYW4+PHRkPjx0ZD4ke2UudGF4fSU8L3RkPjwvdHI+YClcclxuICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgJCgnI2NhcnRjaGVja291dCcpLmVtcHR5KCkuaHRtbChidWlsZGVyMi50b1N0cmluZygpKTtcclxuICAgICAgICAgIGNvbnN0IHByaWNlID0gY2FydHN0b3JlLm1hcCgocmVzOiBhbnkpID0+IHtcclxuICAgICAgICAgICAgcmV0dXJuIHJlcy5wcm9kdWN0cHJpY2UgKiByZXMucHJvZHVjdHF1YW50aXR5O1xyXG4gICAgICAgICAgfSk7XHJcbiAgICAgICAgICBjb25zb2xlLmxvZygndG90YWxwcmljZScsIHByaWNlKTtcclxuICAgICAgICAgICQoJyN0b3RhbCcpLnRleHQoYE4keyhwYXJzZUZsb2F0KHByaWNlLnJlZHVjZSgoYTogYW55LCBiOiBhbnkpID0+IGEgKyBiLCAwLjApKS50b0ZpeGVkKDIpLnJlcGxhY2UoL1xcZCg/PShcXGR7M30pK1xcLikvZywgJyQmLCcpKX1gKTtcclxuICAgICAgICB9XHJcbiAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgU3dhbC5maXJlKHtcclxuICAgICAgICAgIGljb246ICdpbmZvJyxcclxuICAgICAgICAgIHRleHQ6ICdQbGVhc2UgbG9naW4nLFxyXG4gICAgICAgICAgc2hvd0NhbmNlbEJ1dHRvbjogZmFsc2UsXHJcbiAgICAgICAgICBhbGxvd091dHNpZGVDbGljazogZmFsc2UsXHJcbiAgICAgICAgfSkudGhlbigocmVzdWx0OiBhbnkpID0+IHtcclxuICAgICAgICAgIGlmIChyZXN1bHQuaXNDb25maXJtZWQpIHtcclxuXHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgfSk7XHJcbiAgICAgIH1cclxuICAgICAgYnJlYWs7XHJcbiAgICBjYXNlIGAke2xvZ2ludXJsfS9qZXRjYXJ0L3Byb2R1Y3RwYWdlYDpcclxuICAgICAgbGV0IHVybDogVVJMID0gbmV3IFVSTChkZWNvZGVVUklDb21wb25lbnQod2luZG93LmxvY2F0aW9uLmhyZWYpKTtcclxuICAgICAgbGV0IHNlYXJjaFBhcmFtcyA9IG5ldyBVUkxTZWFyY2hQYXJhbXModXJsLnNlYXJjaCkuZ2V0KCdwcmRpbmZvJyk7XHJcbiAgICAgIGxldCBwcm9kdWN0OiBhbnk7XHJcbiAgICAgIGlmIChzZWFyY2hQYXJhbXMpIHtcclxuICAgICAgICBwcm9jZXNzcmVxdWVzdDIoYCR7YmFja2VuZHVybH0vcHJvZHVjdC9kaXNwbGF5LyR7c2VhcmNoUGFyYW1zfWAsICdnZXQnLCB7XHJcbiAgICAgICAgfSwgKHI6IGFueSkgPT4ge1xyXG4gICAgICAgICAgcHJvZHVjdCA9IEpTT04ucGFyc2Uocik7XHJcbiAgICAgICAgICBjb25zb2xlLmxvZygnIHIgJywgcHJvZHVjdCwgJyBzZWFyY2hQYXJhbXMgJywgc2VhcmNoUGFyYW1zKTtcclxuICAgICAgICAgIGZpbGxwcm9kdWN0aW5mbyhwcm9kdWN0LCBgJHtsb2dpbnVybH0vamV0Y2FydC9wcm9kdWN0cGFnZWApO1xyXG4gICAgICAgICAgc2Vzc2lvblN0b3JhZ2Uuc2V0SXRlbSgncHJvZHVjdCcsIEpTT04uc3RyaW5naWZ5KHByb2R1Y3QpKTtcclxuICAgICAgICB9KTtcclxuICAgICAgfSBlbHNlIHtcclxuICAgICAgICBwcm9kdWN0ID0gSlNPTi5wYXJzZShzZXNzaW9uU3RvcmFnZS5nZXRJdGVtKCdwcm9kdWN0JykgYXMgc3RyaW5nKTtcclxuICAgICAgICBjb25zb2xlLmxvZygnIHByb2R1Y3QgY2hlY2sgJywgcHJvZHVjdCwgJyBzZWFyY2hQYXJhbXMgJywgc2VhcmNoUGFyYW1zLCB3aW5kb3cubG9jYXRpb24uaHJlZik7XHJcbiAgICAgICAgZmlsbHByb2R1Y3RpbmZvKHByb2R1Y3QsIGAke2xvZ2ludXJsfS9qZXRjYXJ0L3Byb2R1Y3RwYWdlYCk7XHJcbiAgICAgIH1cclxuICAgICAgY29uc29sZS5sb2coJyBnb2luZyB0byBsb2FkIG90aGVycyAnLCBwcm9kdWN0KTtcclxuICAgICAgLy9nZXQgcHJvZHVjdCBpZCAgZm9yIGxvYWQgcmVsYXRlZCBjYXRlZ29yeSBwcm9kdWN0ICAgXHJcbiAgICAgIHNldFRpbWVvdXQoKCkgPT4ge1xyXG4gICAgICAgIGNvbnN0IGlkID0gcHJvZHVjdC5pZDtcclxuICAgICAgICBjb25zb2xlLmxvZygnIGlkICcsIGlkKTtcclxuICAgICAgICBwcm9jZXNzcmVxdWVzdDIoYCR7YmFja2VuZHVybH0vcHJvZHVjdC9kaXNwbGF5YW5kbG9hZHNpbWlsYXJpdGVtcy8ke2lkfWAsICdnZXQnLCB7XHJcbiAgICAgICAgfSwgKHI6IGFueSkgPT4ge1xyXG4gICAgICAgICAgciA9IEpTT04ucGFyc2Uocik7XHJcbiAgICAgICAgICBjb25zb2xlLmxvZygncHJvZHVjdHBhZ2UgLi4uJywgcik7XHJcbiAgICAgICAgICAvL3Byb2Nlc3MgdGhlIGFycmF5IHIgb2YgIHByb2R1Y3QgIGdlbmVyYXRlZFxyXG4gICAgICAgICAgbGV0IHJlbGF0ZWRwcmQgPSBuZXcgU3RyaW5nQnVpbGRlcigpO1xyXG4gICAgICAgICAgci5mb3JFYWNoKChlbDogYW55KSA9PiB7XHJcbiAgICAgICAgICAgIHJlbGF0ZWRwcmQuYXBwZW5kKGA8ZGl2IGNsYXNzPVwiY29sLXhsLTIgY29sLW1kLTQgY29sLXNtLTZcIj5cclxuICAgICAgPGRpdiBjbGFzcz1cInByb2R1Y3QtYm94XCI+XHJcbiAgICAgICAgICA8ZGl2IGNsYXNzPVwiaW1nLXdyYXBwZXJcIj5cclxuICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiZnJvbnRcIj5cclxuICAgICAgICAgICAgICAgICAgPGEgaHJlZj1cIiNcIj48aW1nIHNyYz1cIiR7YmFja2VuZHVybH0vamV0c3RvcmUvJHtlbC5pbWFnZXVybH1cIlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgIGNsYXNzPVwiaW1nLWZsdWlkIGJsdXItdXAgbGF6eWxvYWQgYmctaW1nXCIgYWx0PVwiXCI+PC9hPlxyXG4gICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJiYWNrXCI+XHJcbiAgICAgICAgICAgICAgICAgIDxhIGhyZWY9XCIjXCI+PGltZyBzcmM9XCIke2JhY2tlbmR1cmx9L2pldHN0b3JlLyR7ZWwuaW1hZ2V1cmx9XCJcclxuICAgICAgICAgICAgICAgICBjbGFzcz1cImltZy1mbHVpZCBibHVyLXVwIGxhenlsb2FkIGJnLWltZ1wiIGFsdD1cIlwiPjwvYT5cclxuICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiY2FydC1pbmZvIGNhcnQtd3JhcFwiPlxyXG4gICAgICAgICAgICAgICAgICA8YnV0dG9uIGRhdGEtdG9nZ2xlPVwibW9kYWxcIiBvbmNsaWNrPVwiYWRkdG9jYXJ0KCcke2VsLmlkfScpXCIgdGl0bGU9XCJBZGQgdG8gY2FydFwiPjxpXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgY2xhc3M9XCJ0aS1zaG9wcGluZy1jYXJ0XCI+PC9pPjwvYnV0dG9uPiBcclxuICAgICAgICAgICAgPGEgaHJlZj1cImphdmFzY3JpcHQ6dm9pZCgwKVwiIG9uY2xpY2s9XCJhZGR0b2NhcnRmb3J3aXNobGlzdCgnJHtlbC5pZH0nKVwiXHJcbiAgICAgICAgICAgICAgICAgICAgICB0aXRsZT1cIkFkZCB0byBXaXNobGlzdFwiPjxpIGNsYXNzPVwidGktaGVhcnRcIiBhcmlhLWhpZGRlbj1cInRydWVcIj48L2k+PC9hPiBcclxuICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9XCIjXCJcclxuICAgICAgICAgICAgICAgICAgICAgIGRhdGEtdG9nZ2xlPVwibW9kYWxcIiBkYXRhLXRhcmdldD1cIiNxdWljay12aWV3XCIgdGl0bGU9XCJRdWljayBWaWV3XCI+PGlcclxuICAgICAgICAgICAgICAgICAgICAgICAgICBjbGFzcz1cInRpLXNlYXJjaFwiIGFyaWEtaGlkZGVuPVwidHJ1ZVwiPjwvaT48L2E+IFxyXG4gICAgICAgICAgPGEgaHJlZj1cIi9qZXRjYXJ0L2NvbXBhcmU/bmFtZT0ke2VuY29kZVVSSUNvbXBvbmVudChlbC5wcm9kdWN0bmFtZSl9JHByaWNlPSR7ZWwucHJvZHVjdHByaWNlfVwiXHJcbiAgICAgICAgICAgICAgICAgICAgICB0aXRsZT1cIkNvbXBhcmVcIj48aSBjbGFzcz1cInRpLXJlbG9hZFwiIGFyaWEtaGlkZGVuPVwidHJ1ZVwiPjwvaT48L2E+PC9kaXY+XHJcbiAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgIDxkaXYgY2xhc3M9XCJwcm9kdWN0LWRldGFpbFwiPlxyXG4gICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJyYXRpbmdcIj48aSBjbGFzcz1cImZhIGZhLXN0YXJcIj48L2k+IDxpIGNsYXNzPVwiZmEgZmEtc3RhclwiPjwvaT4gPGlcclxuICAgICAgICAgICAgICAgICAgICAgIGNsYXNzPVwiZmEgZmEtc3RhclwiPjwvaT4gPGkgY2xhc3M9XCJmYSBmYS1zdGFyXCI+PC9pPiA8aSBjbGFzcz1cImZhIGZhLXN0YXJcIj48L2k+XHJcbiAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICA8YSBocmVmPVwicHJvZHVjdC1wYWdlKG5vLXNpZGViYXIpLmh0bWxcIj5cclxuICAgICAgICAgICAgICAgICAgPGg2PiR7ZWwuY2F0ZWdvcnlpZH08L2g2PlxyXG4gICAgICAgICAgICAgIDwvYT5cclxuICAgICAgICAgICAgICA8aDQ+TiR7KHBhcnNlRmxvYXQoZWwucHJvZHVjdHByaWNlKS50b0ZpeGVkKDIpLnJlcGxhY2UoL1xcZCg/PShcXGR7M30pK1xcLikvZywgJyQmLCcpKX08L2g0PlxyXG4gICAgICAgICAgICAgIDxoND48ZGVsPk4keyhwYXJzZUZsb2F0KGVsLnByb2R1Y3RwcmljZSkudG9GaXhlZCgyKS5yZXBsYWNlKC9cXGQoPz0oXFxkezN9KStcXC4pL2csICckJiwnKSl9PC9kZWw+PC9oND5cclxuICAgICAgICAgIDwvZGl2PlxyXG4gICAgICA8L2Rpdj5cclxuICA8L2Rpdj5gKVxyXG4gICAgICAgICAgfSk7XHJcbiAgICAgICAgICAvL2FwcGVuZCB0byBkb21cclxuICAgICAgICAgICQoJyNzZWFyY2gtcHJvZHVjdCcpLmVtcHR5KCkuaHRtbChyZWxhdGVkcHJkLnRvU3RyaW5nKCkpO1xyXG4gICAgICAgICAgLy8gYW5pbWF0ZSB0aGlzIGNhdGVnb3J5IFxyXG4gICAgICAgICAgc2V0VGltZW91dCgoKSA9PiB7XHJcbiAgICAgICAgICAgIC8vZGVsYXkgZm9yIDIwMDBcclxuICAgICAgICAgICAgY29uc3QgY2F0YWxvZ3VlID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3NlYXJjaC1wcm9kdWN0JykgYXMgSFRNTERpdkVsZW1lbnQ7XHJcbiAgICAgICAgICAgIGFuaW1hdGVDU1MoJy5zZWFyY2gtcHJvZHVjdCcsICdmYWRlT3V0UmlnaHRCaWcnLCAoKSA9PiB7XHJcbiAgICAgICAgICAgICAgYW5pbWF0ZXJlbGF0ZWRwcmQoYmFja2VuZHVybCwgJy5zZWFyY2gtcHJvZHVjdCcsICdmYWRlT3V0UmlnaHRCaWcnLCBjYXRhbG9ndWUsICdnZXQnLCBgJHtiYWNrZW5kdXJsfS9wcm9kdWN0L2Rpc3BsYXlhbmRsb2Fkc2ltaWxhcml0ZW1zLyR7aWR9YClcclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICB9LCAxMDAwKTtcclxuICAgICAgICB9KVxyXG4gICAgICB9LCA1MDApO1xyXG4gICAgICBicmVhaztcclxuICAgIGNhc2UgYCR7bG9naW51cmx9L2pldGNhcnQvcmVnaXN0ZXJgOlxyXG4gICAgICBzZXRhamF4KCdqc29uJywgYGh0dHBzOi8vY291bnRyaWVzbm93LnNwYWNlL2FwaS92MC4xL2NvdW50cmllcy9zdGF0ZXNgLCAnZ2V0JywgXCJcIiwgKHJlc3BvbnNlOiBhbnkpID0+IHtcclxuICAgICAgICAvLyBwcm9jZXNzIHRoZSByZXNwb25zZVxyXG4gICAgICAgIC8vIGNvbnNvbGUubG9nKCdyZXNwb25zZSAnLHJlc3BvbnNlLmRhdGEpO1xyXG4gICAgICAgIGxldCBjb3VudHJpZXMgPSByZXNwb25zZS5kYXRhLm1hcCgoZTogYW55KSA9PiB7XHJcbiAgICAgICAgICAvL2NvbnNvbGUubG9nKCdjb3VudHJpZXMnLGUubmFtZSkgO1xyXG4gICAgICAgICAgcmV0dXJuIGA8b3B0aW9uIHZhbHVlPSR7ZS5uYW1lfT4ke2UubmFtZX08L29wdGlvbj5gO1xyXG4gICAgICAgIH0pO1xyXG4gICAgICAgIC8vY29uc29sZS5sb2coY291bnRyaWVzKSA7XHJcbiAgICAgICAgJCgnI2NvdW50cnknKS5lbXB0eSgpLmh0bWwoY291bnRyaWVzLmpvaW4oXCJcIikpO1xyXG4gICAgICB9LCAoKSA9PiB7IH0sIGNvbnRlbnR0eXBlKTtcclxuICAgICAgYnJlYWs7XHJcbiAgICBjYXNlIGAke2xvZ2ludXJsfS9qZXRjYXJ0L2NhcnRgOlxyXG4gICAgICBpbnZhbGlkYXRlU2Vzc2lvbkFuZFRva2VuKGp3dF9kZWNvZGUsICdjdXN0b21lcnRva2VuJyk7XHJcbiAgICAgLy8gc2Vzc2lvblN0b3JhZ2UuY2xlYXIoKSA7XHJcbiAgICAgIGlmIChsb2NhbFN0b3JhZ2UuZ2V0SXRlbSgnY3VzdG9tZXJ0b2tlbicpICE9PSBudWxsKSB7XHJcbiAgICAgICAgY29uc3Qgc3RvcmUgPSBKU09OLnBhcnNlKHNlc3Npb25TdG9yYWdlLmdldEl0ZW0oJ3N0b3JlJykgYXMgc3RyaW5nKTtcclxuICAgICAgICAgY29uc29sZS5sb2coJ2NhcnQgc3RvcmUgJywgc3RvcmUpO1xyXG4gICAgICAgIGlmIChzdG9yZSA9PT0gbnVsbCB8fCBzdG9yZS5pbmNsdWRlcyhudWxsKSkge1xyXG4gICAgICAgICAgYWxlcnQoJ3Nlc3Npb24gbnVsbCcpO1xyXG4gICAgICAgICAgbGV0IGNvbnRlbnQgPSBjb250ZW50dHlwZXdpdGh0b2tlbihsb2NhbFN0b3JhZ2UuZ2V0SXRlbSgnY3VzdG9tZXJ0b2tlbicpKTtcclxuICAgICAgICAgIC8vY29uc29sZS5sb2coJ2NvbnRlbnQgJywgY29udGVudCwgYCR7YmFja2VuZHVybH0vcHJvZHVjdC9sb2FkY2FydGxpc3QvJHtsb2NhbFN0b3JhZ2UuZ2V0SXRlbSgnYWNrJyl9YCk7XHJcbiAgICAgICAgICAvL2FsZXJ0KGxvY2FsU3RvcmFnZS5nZXRJdGVtKCdhY2snKSkgO1xyXG4gICAgICAgICAgc2V0YWpheCgndGV4dCcsIGAke2JhY2tlbmR1cmx9L3Byb2R1Y3QvbG9hZGNhcnRsaXN0LyR7bG9jYWxTdG9yYWdlLmdldEl0ZW0oJ2FjaycpfWAsICdnZXQnLCAnJywgKHN0b3JlOiBhbnkpID0+IHtcclxuICAgICAgICAgICAgLy8gcHJvY2VzcyB0aGUgcmVzcG9uc2VcclxuICAgICAgICAgICAgY29uc29sZS5sb2coJ2xvYWRlZCByZXNwb25zZSAnLCBzdG9yZSk7XHJcbiAgICAgICAgICAgIC8vYWxlcnQoJ3Jlc3BvbnNlIC4uJyk7XHJcbiAgICAgICAgICAgIGlmKHN0b3JlIT09IHVuZGVmaW5lZCl7XHJcbiAgICAgICAgICAgIGlmIChzdG9yZS5sZW5ndGggPT09IDApIHtcclxuICAgICAgICAgICAgICB0b2FzdHIuZXJyb3IoJ1lvdXIgY2FydCBpcyBlbXB0eScpO1xyXG4gICAgICAgICAgICAgICQoJyNjdXN0b21lcmNhcnQnKS5lbXB0eSgpLmh0bWwoYDxjZW50ZXI+PHA+WW91ciBjYXJ0IGlzIGVtcHR5PC9wPjxjZW50ZXI+YCk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgY29uc29sZS5sb2coJ3R5cGVvZiAnLCB0eXBlb2Ygc3RvcmUpO1xyXG4gICAgICAgICAgICBzdG9yZSA9IEpTT04ucGFyc2Uoc3RvcmUpO1xyXG4gICAgICAgICAgICAvL2FsZXJ0KCkgO1xyXG4gICAgICAgICAgICBjb25zdCB0b3RhbGJvZHkgPSBzdG9yZS5tYXAoKGVsZW06IGFueSkgPT4ge1xyXG4gICAgICAgICAgICAgIC8vYWxlcnQoJ2VsZW0nKSA7XHJcbiAgICAgICAgICAgICAgY29uc29sZS5sb2coJ2VsZW1lbnQyICcsZWxlbSk7XHJcbiAgICAgICAgICAgICAgLy9wcm9jZXNzaW5nIGVhY2ggb2JqZWN0IGluIGNhcnQgXHJcbiAgICAgICAgICAgICAgcmV0dXJuIGBcclxuICAgICAgICAgICAgICAgICAgICAgPHRib2R5PlxyXG4gICAgICAgICAgICAgICAgICAgICAgIDx0cj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSAgaHJlZj1cIiNcIj48aW1nIHNyYz1cIiR7YmFja2VuZHVybH0vamV0c3RvcmUvJHtlbGVtLmltYWdldXJsfVwiIGFsdD1cIlwiLz48L2E+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICA8L3RkPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgPHRkPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj1cIiNcIj4ke2VsZW0ucHJvZHVjdG5hbWV9PC9hPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJtb2JpbGUtY2FydC1jb250ZW50IHJvd1wiPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiY29sLXhzLTNcIj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJxdHktYm94XCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImlucHV0LWdyb3VwXCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpbnB1dCB0eXBlPVwidGV4dFwiIG5hbWU9XCJxdWFudGl0eVwiIFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjbGFzcz1cImZvcm0tY29udHJvbCBpbnB1dC1udW1iZXJcIlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFsdWU9XCIke3BhcnNlRmxvYXQoZWxlbS5wcm9kdWN0cXVhbnRpdHkpfVwiIC8+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJjb2wteHMtM1wiPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGgyIGNsYXNzPVwidGQtY29sb3JcIj4ke2VsZW0ucHJvZHVjdHByaWNlfTwvaDI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiY29sLXhzLTNcIj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxoMiBjbGFzcz1cInRkLWNvbG9yXCI+PGEgaHJlZj1cIiNcIiBjbGFzcz1cImljb25cIj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGkgY2xhc3M9XCJ0aS1jbG9zZVwiPjwvaT48L2E+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2gyPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgIDwvdGQ+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICA8dGQ+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGgyPk4keyhwYXJzZUZsb2F0KGVsZW0ucHJvZHVjdHByaWNlKSkudG9GaXhlZCgyKS5yZXBsYWNlKC9cXGQoPz0oXFxkezN9KStcXC4pL2csICckJiwnKX08L2gyPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgPC90ZD5cclxuICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwicXR5LWJveFwiPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiaW5wdXQtZ3JvdXBcIj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpbnB1dCB0eXBlPVwibnVtYmVyXCIgbmFtZT1cInF1YW50aXR5XCIgXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjbGFzcz1cImZvcm0tY29udHJvbCBpbnB1dC1udW1iZXJcIiByZWFkb25seVxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhbHVlPVwiJHtwYXJzZUZsb2F0KGVsZW0ucHJvZHVjdHF1YW50aXR5KX1cIiAvPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgIDwvdGQ+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICA8dGQ+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICA8aDIgY2xhc3M9XCJ0ZC1jb2xvclwiPk4keyhwYXJzZUZsb2F0KGVsZW0ucHJvZHVjdHByaWNlKSAqIHBhcnNlRmxvYXQoZWxlbS5wcm9kdWN0cXVhbnRpdHkpKS50b0ZpeGVkKDIpLnJlcGxhY2UoL1xcZCg/PShcXGR7M30pK1xcLikvZywgJyQmLCcpfTwvaDI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICA8L3RkPiAgXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICA8dGQ+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPVwiamF2YXNjcmlwdDp2b2lkKDApXCIgY2xhc3M9XCJpY29uIG1yLTNcIiBpZD0nJHtlbGVtLmlkfScgb25jbGljaz1cInJlbW92ZVJvdygnJHtlbGVtLmlkfScpXCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICA8aSBjbGFzcz1cInRpLWNsb3NlXCIgdGl0bGU9XCJyZW1vdmVcIiA+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICA8L2k+PC9hPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgPC90ZD4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFxyXG4gICAgICAgICAgICAgICAgICAgICA8L3RyPlxyXG4gICAgICAgICAgICAgICAgIDwvdGJvZHk+YFxyXG4gICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgLy8gIDx0ZD4ke3BhcnNlRmxvYXQoZWxlbS5wcm9kdWN0cHJpY2UpfTwvdGQ+XHJcbiAgICAgICAgICAgIC8vICA8dGQ+JHtwYXJzZUZsb2F0KGVsZW0ucHJvZHVjdHF1YW50aXR5KX08L3RkPlxyXG4gICAgICAgICAgICB2YXIgYnVpbGRlciA9IG5ldyBTdHJpbmdCdWlsZGVyKCk7XHJcbiAgICAgICAgICAgIGJ1aWxkZXIuYXBwZW5kKGBcclxuICAgICAgICAgICAgICAgICA8dGFibGUgY2xhc3M9XCJ0YWJsZSBjYXJ0LXRhYmxlIHRhYmxlLXJlc3BvbnNpdmUteHNcIiBpZD1cInByb2R1Y3R0YWJsZVwiPlxyXG4gICAgICAgICAgICAgICAgICAgPHRoZWFkPlxyXG4gICAgICAgICAgICAgICAgIDx0ciBjbGFzc05hbWU9XCJ0YWJsZS1oZWFkXCI+XHJcbiAgICAgICAgICAgICAgICAgICAgIDx0aCBzY29wZT1cImNvbFwiPmltYWdlPC90aD5cclxuICAgICAgICAgICAgICAgICAgICAgPHRoIHNjb3BlPVwiY29sXCI+cHJvZHVjdCBuYW1lPC90aD5cclxuICAgICAgICAgICAgICAgICAgICAgPHRoIHNjb3BlPVwiY29sXCI+cHJpY2U8L3RoPlxyXG4gICAgICAgICAgICAgICAgICAgICA8dGggc2NvcGU9XCJjb2xcIj5xdWFudGl0eTwvdGg+XHJcbiAgICAgICAgICAgICAgICAgICAgIDx0aCBzY29wZT1cImNvbFwiPmFjdGlvbjwvdGg+XHJcbiAgICAgICAgICAgICAgICAgICAgIDx0aCBzY29wZT1cImNvbFwiPnRvdGFsPC90aD5cclxuICAgICAgICAgICAgICAgICA8L3RyPlxyXG4gICAgICAgICAgICAgICAgICAgPC90aGVhZD5gKTtcclxuICAgICAgICAgICAgdG90YWxib2R5LmZvckVhY2goKGVsOiBhbnkpID0+IHtcclxuICAgICAgICAgICAgICBidWlsZGVyLmFwcGVuZChlbCk7XHJcbiAgICAgICAgICAgIH0pXHJcbiAgICAgICAgICAgIGJ1aWxkZXIuYXBwZW5kKGA8L3RhYmxlPmApO1xyXG4gICAgICAgICAgICBjb25zdCB0b3RhbHByaWNlID0gc3RvcmUubWFwKChyZXM6IGFueSkgPT4ge1xyXG4gICAgICAgICAgICAgIHJldHVybiByZXMucHJvZHVjdHByaWNlICogcmVzLnByb2R1Y3RxdWFudGl0eTtcclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKCd0b3RhbHByaWNlJywgdG90YWxwcmljZSk7XHJcbiAgICAgICAgICAgIC8vIHZhciBmb3JtYXR0ZXIgPSBuZXcgSW50bC5OdW1iZXJGb3JtYXQoJ2VuLVVTJywge1xyXG4gICAgICAgICAgICAvLyAgIHN0eWxlOiAnY3VycmVuY3knLFxyXG4gICAgICAgICAgICAvLyAgIGN1cnJlbmN5OiAnTklHJyxcclxuICAgICAgICAgICAgLy8gICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgIGJ1aWxkZXIuYXBwZW5kKGA8dGFibGUgY2xhc3NOYW1lPVwidGFibGUgY2FydC10YWJsZSB0YWJsZS1yZXNwb25zaXZlLW1kXCIgaWQ9J3RvdGFscHInPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgIDx0Ym9keT5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0cj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkPlRvdGFsIFByaWNlOjwvdGQ+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aDI+TiR7KHBhcnNlRmxvYXQodG90YWxwcmljZS5yZWR1Y2UoKGE6IGFueSwgYjogYW55KSA9PiBhICsgYiwgMC4wKSkudG9GaXhlZCgyKS5yZXBsYWNlKC9cXGQoPz0oXFxkezN9KStcXC4pL2csICckJiwnKSl9PC9oMj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90ZD5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdHI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgPC90Ym9keT5cclxuICAgICAgICAgICAgICAgICAgICAgICAgPC90YWJsZT5cclxuICAgICAgICAgICAgICAgICAgICAgICAgYCk7XHJcbiAgICAgICAgICAgIC8vYnVpbGRlci5hcHBlbmQoYDxici8+PGgyIGlkPVwidG90YWxwcjJcIj5OJHsocGFyc2VGbG9hdCh0b3RhbHByaWNlLnJlZHVjZSgoYTogYW55LCBiOiBhbnkpID0+IGEgKyBiLCAwLjApKS50b0ZpeGVkKDIpLnJlcGxhY2UoL1xcZCg/PShcXGR7M30pK1xcLikvZywgJyQmLCcpKX08L2gyPmApIDtcclxuICAgICAgICAgICAgc2Vzc2lvblN0b3JhZ2Uuc2V0SXRlbSgnc3RvcmUnLCBKU09OLnN0cmluZ2lmeShzdG9yZSkpO1xyXG4gICAgICAgICAgICAkKCcjY3VzdG9tZXJjYXJ0JykuZW1wdHkoKS5odG1sKGJ1aWxkZXIudG9TdHJpbmcoKSk7XHJcbiAgICAgICAgICB9ZWxzZXtcclxuICAgICAgICAgICAgdG9hc3RyLmVycm9yKCd5b3VyIGNhcnQgaXMgZW1wdHknKSA7XHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgICB9LCAoKSA9PiB7IH0sIGNvbnRlbnQpO1xyXG4gICAgICAgIH0gZWxzZSBpZiAoc3RvcmUgIT09IG51bGwpIHtcclxuICAgICAgICAgIGNvbnNvbGUubG9nKCdzdG9yZSAnLCBzdG9yZSk7XHJcbiAgICAgICAgICAvLyBhbGVydCgnc3RvcmUnKSA7XHJcbiAgICAgICAgICBjb25zdCB0b3RhbGJvZHkgPSBzdG9yZS5tYXAoKGVsZW06IGFueSkgPT4ge1xyXG4gICAgICAgICAgICBjb25zb2xlLmxvZygnZWxlbWVudCAnLCBlbGVtKTtcclxuICAgICAgICAgICAgLy9wcm9jZXNzaW5nIGVhY2ggb2JqZWN0IGluIGNhcnQgXHJcbiAgICAgICAgICAgIHJldHVybiBgXHJcbiAgICAgICAgICAgICAgICAgPHRib2R5PlxyXG4gICAgICAgICAgICAgICAgICAgPHRyPlxyXG4gICAgICAgICAgICAgICAgICAgICA8dGQ+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPVwiI1wiPjxpbWcgc3JjPVwiJHtiYWNrZW5kdXJsfS9qZXRzdG9yZS8ke2VsZW0uaW1hZ2V1cmx9XCIgYWx0PVwiXCIgLz48L2E+XHJcbiAgICAgICAgICAgICAgICAgICAgIDwvdGQ+XHJcbiAgICAgICAgICAgICAgICAgICAgIDx0ZD5cclxuICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj1cIiNcIj4ke2VsZW0ucHJvZHVjdG5hbWV9PC9hPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cIm1vYmlsZS1jYXJ0LWNvbnRlbnQgcm93XCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImNvbC14cy0zXCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJxdHktYm94XCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiaW5wdXQtZ3JvdXBcIj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aW5wdXQgdHlwZT1cInRleHRcIiBuYW1lPVwicXVhbnRpdHlcIiBcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjbGFzcz1cImZvcm0tY29udHJvbCBpbnB1dC1udW1iZXJcIlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YWx1ZT1cIiR7cGFyc2VGbG9hdChlbGVtLnByb2R1Y3RxdWFudGl0eSl9XCIgLz5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJjb2wteHMtM1wiPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aDIgY2xhc3M9XCJ0ZC1jb2xvclwiPiR7ZWxlbS5wcm9kdWN0cHJpY2V9PC9oMj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiY29sLXhzLTNcIj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGgyIGNsYXNzPVwidGQtY29sb3JcIj48YSBocmVmPVwiI1wiIGNsYXNzPVwiaWNvblwiPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpIGNsYXNzPVwidGktY2xvc2VcIj48L2k+PC9hPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2gyPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgIDwvdGQ+XHJcbiAgICAgICAgICAgICAgICAgICAgIDx0ZD5cclxuICAgICAgICAgICAgICAgICAgICAgICAgIDxoMj5OJHsocGFyc2VGbG9hdChlbGVtLnByb2R1Y3RwcmljZSkpLnRvRml4ZWQoMikucmVwbGFjZSgvXFxkKD89KFxcZHszfSkrXFwuKS9nLCAnJCYsJyl9PC9oMj5cclxuICAgICAgICAgICAgICAgICAgICAgPC90ZD5cclxuICAgICAgICAgICAgICAgICAgICAgPHRkPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cInF0eS1ib3hcIj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiaW5wdXQtZ3JvdXBcIj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGlucHV0IHR5cGU9XCJudW1iZXJcIiBuYW1lPVwicXVhbnRpdHlcIiBcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2xhc3M9XCJmb3JtLWNvbnRyb2wgaW5wdXQtbnVtYmVyXCIgcmVhZG9ubHlcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhbHVlPVwiJHtwYXJzZUZsb2F0KGVsZW0ucHJvZHVjdHF1YW50aXR5KX1cIiAvPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgIDwvdGQ+ICAgXHJcbiAgICAgICAgICAgICAgICAgICAgPHRkIGlkPScke2VsZW0uaWR9Jz5cclxuICAgICAgICAgICAgICAgICAgICA8YSBocmVmPVwiamF2YXNjcmlwdDp2b2lkKDApXCIgY2xhc3M9XCJpY29uIG1yLTNcIj5cclxuICAgICAgICAgICAgICAgICAgICA8aSBjbGFzcz1cInRpLWNsb3NlXCIgdGl0bGU9XCJyZW1vdmVcIiBvbmNsaWNrPVwicmVtb3ZlUm93KCcke2VsZW0uaWR9JylcIj48L2k+PC9hPlxyXG4gICAgICAgICAgICAgICAgICAgIDwvdGQ+XHJcbiAgICAgICAgICAgICAgICAgICAgIDx0ZD5cclxuICAgICAgICAgICAgPGgyIGNsYXNzPVwidGQtY29sb3JcIj5OJHsocGFyc2VGbG9hdChlbGVtLnByb2R1Y3RwcmljZSkgKiBwYXJzZUZsb2F0KGVsZW0ucHJvZHVjdHF1YW50aXR5KSkudG9GaXhlZCgyKS5yZXBsYWNlKC9cXGQoPz0oXFxkezN9KStcXC4pL2csICckJiwnKX08L2gyPlxyXG4gICAgICAgICAgICAgICAgICAgICA8L3RkPiAgICAgICAgICAgXHJcbiAgICAgICAgICAgICAgICAgPC90cj5cclxuICAgICAgICAgICAgIDwvdGJvZHk+YFxyXG4gICAgICAgICAgfSk7XHJcbiAgICAgICAgICAvLyAgPHRkPiR7cGFyc2VGbG9hdChlbGVtLnByb2R1Y3RwcmljZSl9PC90ZD5cclxuICAgICAgICAgIC8vICA8dGQ+JHtwYXJzZUZsb2F0KGVsZW0ucHJvZHVjdHF1YW50aXR5KX08L3RkPlxyXG4gICAgICAgICAgdmFyIGJ1aWxkZXIgPSBuZXcgU3RyaW5nQnVpbGRlcigpO1xyXG4gICAgICAgICAgYnVpbGRlci5hcHBlbmQoYFxyXG4gICAgICAgICAgICAgPHRhYmxlIGNsYXNzPVwidGFibGUgY2FydC10YWJsZSB0YWJsZS1yZXNwb25zaXZlLXhzXCI+XHJcbiAgICAgICAgICAgICAgIDx0aGVhZD5cclxuICAgICAgICAgICAgIDx0ciBjbGFzc05hbWU9XCJ0YWJsZS1oZWFkXCI+XHJcbiAgICAgICAgICAgICAgICAgPHRoIHNjb3BlPVwiY29sXCI+aW1hZ2U8L3RoPlxyXG4gICAgICAgICAgICAgICAgIDx0aCBzY29wZT1cImNvbFwiPnByb2R1Y3QgbmFtZTwvdGg+XHJcbiAgICAgICAgICAgICAgICAgPHRoIHNjb3BlPVwiY29sXCI+cHJpY2U8L3RoPlxyXG4gICAgICAgICAgICAgICAgIDx0aCBzY29wZT1cImNvbFwiPnF1YW50aXR5PC90aD5cclxuICAgICAgICAgICAgICAgICA8dGggc2NvcGU9XCJjb2xcIj5hY3Rpb248L3RoPlxyXG4gICAgICAgICAgICAgICAgIDx0aCBzY29wZT1cImNvbFwiPnRvdGFsPC90aD5cclxuICAgICAgICAgICAgIDwvdHI+XHJcbiAgICAgICAgICAgICAgIDwvdGhlYWQ+YCk7XHJcbiAgICAgICAgICB0b3RhbGJvZHkuZm9yRWFjaCgoZWw6IGFueSkgPT4ge1xyXG4gICAgICAgICAgICBidWlsZGVyLmFwcGVuZChlbCk7XHJcbiAgICAgICAgICB9KVxyXG4gICAgICAgICAgYnVpbGRlci5hcHBlbmQoYDwvdGFibGU+YCk7XHJcbiAgICAgICAgICBjb25zdCB0b3RhbHByaWNlID0gc3RvcmUubWFwKChyZXM6IGFueSkgPT4ge1xyXG4gICAgICAgICAgICByZXR1cm4gcmVzLnByb2R1Y3RwcmljZSAqIHJlcy5wcm9kdWN0cXVhbnRpdHk7XHJcbiAgICAgICAgICB9KTtcclxuICAgICAgICAgIGNvbnNvbGUubG9nKCd0b3RhbHByaWNlJywgdG90YWxwcmljZSk7XHJcbiAgICAgICAgICAvLyB2YXIgZm9ybWF0dGVyID0gbmV3IEludGwuTnVtYmVyRm9ybWF0KCdlbi1VUycsIHtcclxuICAgICAgICAgIC8vICAgc3R5bGU6ICdjdXJyZW5jeScsXHJcbiAgICAgICAgICAvLyAgIGN1cnJlbmN5OiAnTklHJyxcclxuICAgICAgICAgIC8vICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgYnVpbGRlci5hcHBlbmQoYDx0YWJsZSBjbGFzc05hbWU9XCJ0YWJsZSBjYXJ0LXRhYmxlIHRhYmxlLXJlc3BvbnNpdmUtbWRcIiBpZD1cInByaWNldG90YWxcIj5cclxuICAgICAgICAgICAgICAgICAgICAgIDx0Zm9vdD5cclxuICAgICAgICAgICAgICAgICAgICAgICAgPHRyPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD5Ub3RhbCBQcmljZSA6PC90ZD5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQ+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aDI+TiR7KHBhcnNlRmxvYXQodG90YWxwcmljZS5yZWR1Y2UoKGE6IGFueSwgYjogYW55KSA9PiBhICsgYiwgMC4wKSkudG9GaXhlZCgyKS5yZXBsYWNlKC9cXGQoPz0oXFxkezN9KStcXC4pL2csICckJiwnKSl9PC9oMj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RkPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICA8L3RyPlxyXG4gICAgICAgICAgICAgICAgICAgICAgPC90Zm9vdD5cclxuICAgICAgICAgICAgICAgICAgICA8L3RhYmxlPlxyXG4gICAgICAgICAgICAgICAgICAgIGApO1xyXG4gICAgICAgICAgLy9zZXNzaW9uU3RvcmFnZS5zZXRJdGVtKCdzdG9yZScsSlNPTi5zdHJpbmdpZnkoc3RvcmUpKTtcclxuICAgICAgICAgIGNvbnNvbGUubG9nKCdzdG9yZWQgc2Vzc2lvbicsIHN0b3JlKTtcclxuICAgICAgICAgICQoJyNjdXN0b21lcmNhcnQnKS5lbXB0eSgpLmh0bWwoYnVpbGRlci50b1N0cmluZygpKTtcclxuICAgICAgICB9XHJcbiAgICAgIH0gZWxzZSBpZiAobG9jYWxTdG9yYWdlLmdldEl0ZW0oJ2N1c3RvbWVydG9rZW4nKSA9PT0gbnVsbCkge1xyXG4gICAgICAgIC8vIFN3YWwuZmlyZSh7XHJcbiAgICAgICAgLy8gICBpY29uOiAnaW5mbycsXHJcbiAgICAgICAgLy8gICB0ZXh0OiAnUGxlYXNlIGxvZ2luIHRvIHNlZSB5b3VyIENhcnQ/JyxcclxuICAgICAgICAvLyAgIHNob3dDYW5jZWxCdXR0b246IGZhbHNlLFxyXG4gICAgICAgIC8vICAgYWxsb3dPdXRzaWRlQ2xpY2s6IGZhbHNlLFxyXG4gICAgICAgIC8vIH0pLnRoZW4oKHJlc3VsdDogYW55KSA9PiB7XHJcbiAgICAgICAgLy8gICBpZiAocmVzdWx0LmlzQ29uZmlybWVkKSB7XHJcbiAgICAgICAgLy8gICAgICQoJyNjdXN0b21lcmNhcnQnKS5lbXB0eSgpLmh0bWwoYDxjZW50ZXI+PHA+WW91ciBjYXJ0IGlzIGVtcHR5PC9wPjwvY2VudGVyPmApO1xyXG4gICAgICAgIC8vICAgfVxyXG4gICAgICAgIC8vIH0pO1xyXG4gICAgICB9XHJcbiAgICAgIGJyZWFrO1xyXG4gICAgY2FzZSBgJHtsb2dpbnVybH0vb3JkZXJgOlxyXG4gICAgICAvL2NvbnNvbGUubG9nKGxvY2FsU3RvcmFnZS5nZXRJdGVtKCd0b2tlbicpKSA7XHJcbiAgICAgIHByb2Nlc3NyZXF1ZXN0MihgJHtiYWNrZW5kdXJsfS9vcmRlci9vcmRlcmAsICdnZXQnLCB7XHJcbiAgICAgICAgJ0NvbnRlbnQtVHlwZSc6ICdhcHBsaWNhdGlvbi9qc29uJyxcclxuICAgICAgICAnQXV0aG9yaXphdGlvbic6ICdCZWFyZXIgJyArIGxvY2FsU3RvcmFnZS5nZXRJdGVtKCd0b2tlbicpXHJcbiAgICAgIH0sIChyOiBhbnkpID0+IHtcclxuICAgICAgICAvLyBjb25zb2xlLmxvZygncmVzcG9uc2UgIGZyb20gc2VydmVyJyxyKSA7XHJcbiAgICAgICAgJCgnI2N1c3RvbWVyb3JkZXInKS5lbXB0eSgpLmh0bWwocik7XHJcbiAgICAgIH0pO1xyXG4gICAgICBicmVhaztcclxuICAgIGNhc2UgYCR7bG9naW51cmx9L2pldGNhcnQvbWFya2V0cGxhY2VgOlxyXG4gICAgICAvLyBhbGVydCgpIDtcclxuICAgICAgcHJvY2Vzc3JlcXVlc3QyKGAke2JhY2tlbmR1cmx9L3Byb2R1Y3QvbG9hZHByb2R1Y3RgLCAnZ2V0Jywge1xyXG4gICAgICB9LCAocjogYW55KSA9PiB7XHJcbiAgICAgICAgLy9jb25zb2xlLmxvZygncmVzcG9uc2UgIGZyb20gc2VydmVyJyxyKSA7XHJcbiAgICAgICAgbGV0IGpzb24gPSBKU09OLnBhcnNlKHIpO1xyXG4gICAgICAgIGxldCBrZXlzID0gT2JqZWN0LmtleXMoSlNPTi5wYXJzZShyKSk7XHJcbiAgICAgICAgY29uc29sZS5sb2coanNvbilcclxuICAgICAgICB2YXIgcHJkY2F0YWxvZ3VlID0gbmV3IFN0cmluZ0J1aWxkZXIoKTtcclxuICAgICAgICBmb3IgKGxldCBrIG9mIGtleXMpIHtcclxuICAgICAgICAgIC8vIGNvbnNvbGUubG9nKCcgayAnLGsgLGpzb25ba10pIDtcclxuICAgICAgICAgIHZhciBzdHJidWlsZHIgPSBuZXcgU3RyaW5nQnVpbGRlcigpO1xyXG4gICAgICAgICAgc3RyYnVpbGRyLmFwcGVuZChgPGRpdiBjbGFzcz1cInJvdyBvZmZzZXQtNVwiPlxyXG4gICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJ0aXRsZTJcIj5cclxuICAgICAgICAgICAgPGgyIGNsYXNzPVwidGl0bGUtaW5uZXIyXCI+JHtrfTwvaDI+XHJcbiAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJyb3cgb2Zmc2V0LTFcIj5gKTtcclxuICAgICAgICAgIC8vIGFsZXJ0KCkgO1xyXG4gICAgICAgICAgLy8gPGEgaHJlZj1cImNvbXBhcmUuaHRtbFwiIHRpdGxlPVwiQ29tcGFyZVwiPjxpIGNsYXNzPVwidGktcmVsb2FkXCIgYXJpYS1oaWRkZW49XCJ0cnVlXCI+PC9pPjwvYT5cclxuICAgICAgICAgIGZvciAobGV0IHAgb2YganNvbltrXSkge1xyXG4gICAgICAgICAgICAvLyBjb25zb2xlLmxvZygnIHAgb2YgJyxrLGAke2JhY2tlbmR1cmx9L2pldHN0b3JlLyR7cC5pbWFnZXVybH1gKSA7XHJcbiAgICAgICAgICAgIGlmIChwLnByb2R1Y3RzdGF0dXMgPT09ICdyZWZ1cmJpc2hlZCcpIHtcclxuICAgICAgICAgICAgICBwLnByb2R1Y3RzdGF0dXMgPSAncmVmJztcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBsZXQgaW1hZ2UgPSBgJHtiYWNrZW5kdXJsfS9qZXRzdG9yZS8ke3AuaW1hZ2V1cmx9YDtcclxuICAgICAgICAgICAgbWFya2V0cGxhY2Uoc3RyYnVpbGRyLCBwKTtcclxuICAgICAgICAgIH1cclxuICAgICAgICAgIC8vIGNvbnNvbGUubG9nKCdnb3QgaGVyZSAnKSA7XHJcbiAgICAgICAgICBzdHJidWlsZHIuYXBwZW5kKGA8L2Rpdj5gKTtcclxuICAgICAgICAgIHByZGNhdGFsb2d1ZS5hcHBlbmQoJC50cmltKHN0cmJ1aWxkci50b1N0cmluZygpKSk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIC8vIGNvbnNvbGUubG9nKHByZGNhdGFsb2d1ZS50b1N0cmluZygpKSA7XHJcbiAgICAgICAgLy9hbGVydCgnYXBwZW5kaW5nIC4uLicpO1xyXG4gICAgICAgICAvL2FsZXJ0KCdtYXJrZXQnKSA7XHJcbiAgICAgICAgJCgnI2NhdGFsb2d1ZScpLmVtcHR5KCkuaHRtbChwcmRjYXRhbG9ndWUudG9TdHJpbmcoKSk7XHJcbiAgICAgICAgLy8gJChwcmRjYXRhbG9ndWUudG9TdHJpbmcoKSkuaW5zZXJ0QWZ0ZXIoJyNjYXRhbG9ndWUnKSA7IFxyXG4gICAgICB9KTtcclxuICAgICAgc2V0VGltZW91dCgoKSA9PiB7XHJcbiAgICAgICAgLy9kZWxheSBmb3IgMjAwMFxyXG4gICAgICAgIGNvbnN0IGNhdGFsb2d1ZSA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdjYXRhbG9ndWUnKSBhcyBIVE1MRGl2RWxlbWVudDtcclxuICAgICAgICBhbmltYXRlQ1NTKCcuY2F0YWxvZ3VlJywgJ2ZhZGVPdXRSaWdodEJpZycsICgpID0+IHtcclxuICAgICAgICAgIGFuaW1hdGVpdGVtcyhiYWNrZW5kdXJsLCAnLmNhdGFsb2d1ZScsICdmYWRlT3V0UmlnaHRCaWcnLCBjYXRhbG9ndWUsICdnZXQnLCBgJHtiYWNrZW5kdXJsfS9wcm9kdWN0L2xvYWRwcm9kdWN0YClcclxuICAgICAgICB9KTtcclxuICAgICAgfSwzMDAwKTtcclxuICAgICAgYnJlYWs7XHJcbiAgICBjYXNlIGAke2xvZ2ludXJsfS9qZXRjYXJ0L3Byb2R1Y3RieWNhdGVnb3J5YDpcclxuICAgICAgLy9hbGVydCh1cmwpIDtcclxuICAgICAgY29uc3QgcGFyc2VkVXJsID0gbmV3IFVSTCh3aW5kb3cubG9jYXRpb24uaHJlZik7XHJcbiAgICAgIC8vIGNvbnNvbGUubG9nKCcgcHJvZHVjdCAnLCBwYXJzZWRVcmwuc2VhcmNoUGFyYW1zLmdldChcInByb2R1Y3RcIikpO1xyXG4gICAgICBjb25zdCBpdGVtID0gcGFyc2VkVXJsLnNlYXJjaFBhcmFtcy5nZXQoXCJwcm9kdWN0XCIpIGFzIHN0cmluZztcclxuICAgICAgY29uc3QgcHJvZHVjdHR5cGUgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgncHJvZHVjdHR5cGUnKSBhcyBIVE1MRWxlbWVudDtcclxuICAgICAgaWYgKGl0ZW0pIHtcclxuICAgICAgICBwcm9kdWN0dHlwZS5pbm5lckhUTUwgPSBkZWNvZGVVUklDb21wb25lbnQoaXRlbSk7XHJcbiAgICAgICAgLy8gYWxlcnQoaXRlbSk7XHJcbiAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgcHJvZHVjdHR5cGUuaW5uZXJIVE1MID0gJ3NsaWRlJztcclxuICAgICAgICAvLyBhbGVydChpdGVtKTtcclxuICAgICAgICAkKCcjY2F0YWxvZ3VlJykuZW1wdHkoKS5odG1sKGA8ZGl2IGNsYXNzPVwicm93IG9mZnNldC01XCI+VGhpcyBwcm9kdWN0IGlzIG5vdCBpbiBzdG9yZTwvZGl2PmApO1xyXG4gICAgICAgIHRocm93IG5ldyBFcnJvcignUHJvZHVjdCBub3QgaW4gc3RvcmUgLi4uLi4uLicpO1xyXG4gICAgICB9XHJcbiAgICAgIC8vbG9hZCAgcHJvZHVjdCBiYXNlZCAgb24gaXRlbSB2YXJpYWJsZVxyXG4gICAgICBwcm9jZXNzcmVxdWVzdDIoYCR7YmFja2VuZHVybH0vcHJvZHVjdC9sb2FkcHJvZHVjdGNhdGVnb3J5LyR7aXRlbX1gLCAnZ2V0Jywge1xyXG4gICAgICB9LCAocjogYW55KSA9PiB7XHJcbiAgICAgICAgLy8gY29uc29sZS5sb2coJ3Jlc3BvbnNlICBmcm9tIHNlcnZlcicscikgO1xyXG4gICAgICAgIC8vIGNvbnNvbGUubG9nKCdpdGVtIC4uLi4nLGl0ZW0pIDtcclxuICAgICAgICBsZXQganNvbiA9IEpTT04ucGFyc2Uocik7XHJcbiAgICAgICAgbGV0IGtleXMgPSBPYmplY3Qua2V5cyhKU09OLnBhcnNlKHIpKTtcclxuICAgICAgICB2YXIgcHJkY2F0YWxvZ3VlID0gbmV3IFN0cmluZ0J1aWxkZXIoKTtcclxuICAgICAgICBjb25zb2xlLmxvZyhqc29uKTtcclxuICAgICAgICB2YXIgc3RyYnVpbGRyID0gbmV3IFN0cmluZ0J1aWxkZXIoKTtcclxuICAgICAgICB2YXIgcm93YnVpbGRlciA9IG5ldyBTdHJpbmdCdWlsZGVyKCk7XHJcbiAgICAgICAgLy9jYWxsIHRoZSBwcm9jZXNzb3IgXHJcbiAgICAgICAgcHJvY2Vzc2FuaW1hdGVkKGpzb24sIHN0cmJ1aWxkciwgcm93YnVpbGRlcik7XHJcbiAgICAgICAgLy8gY29uc29sZS5sb2cocHJkY2F0YWxvZ3VlLnRvU3RyaW5nKCkpIDtcclxuICAgICAgICAkKCcjY2F0YWxvZ3VlJykuZW1wdHkoKS5odG1sKHN0cmJ1aWxkci50b1N0cmluZygpKTtcclxuICAgICAgICAvLyAkKHByZGNhdGFsb2d1ZS50b1N0cmluZygpKS5pbnNlcnRBZnRlcignI2NhdGFsb2d1ZScpIDsgXHJcbiAgICAgICAganNvbiA9IG51bGw7XHJcbiAgICAgICAgLy9jYWxsaW5nIHRoZSBhbmltYXRpb25cclxuICAgICAgICBzZXRUaW1lb3V0KCgpID0+IHtcclxuICAgICAgICAgIGNvbnNvbGUubG9nKCdzZWxmIGludm9raW5nIGRlbGF5IC4uLicpO1xyXG4gICAgICAgICAgYW5pbWF0ZVByb2R1Y3RDYXRlZ29yeVBhZ2UoJy5jYXRhbG9ndWUnLCAnZmFkZU91dFJpZ2h0QmlnJywgKCkgPT4ge1xyXG4gICAgICAgICAgICBhbmltYXRlUHJkQ2F0KGl0ZW0pO1xyXG4gICAgICAgICAgfSlcclxuICAgICAgICB9LCAyMDAwKVxyXG4gICAgICB9KTtcclxuICAgICAgYnJlYWs7XHJcbiAgICBjYXNlIGAke2xvZ2ludXJsfS9qZXRjYXJ0L3NlYXJjaGA6XHJcbiAgICAgICQoXCIuaXRlbXNlYXJjaFwiKS5zZWxlY3QyKFxyXG4gICAgICAgIHtcclxuICAgICAgICAgIHBsYWNlaG9sZGVyOiBcInNlYXJjaCB5b3VyIHByb2R1Y3RzXCIsXHJcbiAgICAgICAgICBtaW5pbXVtSW5wdXRMZW5ndGg6IDEsXHJcbiAgICAgICAgICBhamF4OiB7XHJcbiAgICAgICAgICAgIHVybDogYCR7YmFja2VuZHVybH0vcHJvZHVjdC9sb2Fkc2VhcmNoaXRlbWAsXHJcbiAgICAgICAgICAgIC8vIGhlYWRlcnM6IHtcclxuICAgICAgICAgICAgLy8gICBBdXRob3JpemF0aW9uOiBgQmVhcmVyICR7bG9jYWxTdG9yYWdlLmdldEl0ZW0oJ3Rva2VuJyl9YFxyXG4gICAgICAgICAgICAvLyB9LFxyXG4gICAgICAgICAgICBkYXRhVHlwZTogJ2pzb24nLFxyXG4gICAgICAgICAgICBkYXRhOiBmdW5jdGlvbiAocGFyYW1zOiBhbnkpIHtcclxuICAgICAgICAgICAgICBjb25zb2xlLmxvZygnIHBhcmFtcyAnLCBwYXJhbXMpO1xyXG4gICAgICAgICAgICAgIC8vIGNvbnN0IHZlbmRvcm5hbWUyID0gbG9jYWxTdG9yYWdlLmdldEl0ZW0oJ3ZlbmRvcm5hbWUnKTtcclxuICAgICAgICAgICAgICByZXR1cm4ge1xyXG4gICAgICAgICAgICAgICAgdGhlbmFtZTogcGFyYW1zLnRlcm0sIC8vIHNlYXJjaCB0ZXJtXHJcbiAgICAgICAgICAgICAgICBzaXplOiBwYXJhbXMudGVybS5sZW5ndGgsXHJcbiAgICAgICAgICAgICAgICBwYWdlOiBwYXJhbXMucGFnZVxyXG4gICAgICAgICAgICAgIH07XHJcbiAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgIHByb2Nlc3NSZXN1bHRzOiBmdW5jdGlvbiAoZGF0YTogYW55KSB7XHJcbiAgICAgICAgICAgICAgLy8gY29uc3QgZGF0YTIgID0gIFtkYXRhXSA7XHJcbiAgICAgICAgICAgICAgY29uc29sZS5sb2coJ3Byb2Nlc3NlZCBkYXRhICcsIGRhdGEpO1xyXG4gICAgICAgICAgICAgIHJldHVybiB7XHJcbiAgICAgICAgICAgICAgICByZXN1bHRzOiAkLm1hcChkYXRhLCBmdW5jdGlvbiAob2JqOiBhbnkpIHtcclxuICAgICAgICAgICAgICAgICAgLy8gY29uc29sZS5sb2coJ29iaiBpbiAgbWFwICcsb2JqKTtcclxuICAgICAgICAgICAgICAgICAgcmV0dXJuIHtcclxuICAgICAgICAgICAgICAgICAgICBpZDogb2JqLmlkLFxyXG4gICAgICAgICAgICAgICAgICAgIHRleHQ6IG9iai5wcm9kdWN0bmFtZVxyXG4gICAgICAgICAgICAgICAgICB9O1xyXG4gICAgICAgICAgICAgICAgfSlcclxuICAgICAgICAgICAgICB9O1xyXG5cclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgfVxyXG4gICAgICAgIH0pO1xyXG4gICAgICBicmVhaztcclxuICAgIGNhc2UgYCR7bG9naW51cmx9L2pldGNhcnQvY29tcGFyZWA6XHJcbiAgICAgIGNvbnN0IGNvbXBhcmVVcmwgPSBuZXcgVVJMKHdpbmRvdy5sb2NhdGlvbi5ocmVmKTtcclxuICAgICAgLy8gY29uc29sZS5sb2coJyBwcm9kdWN0ICcsIHBhcnNlZFVybC5zZWFyY2hQYXJhbXMuZ2V0KFwicHJvZHVjdFwiKSk7XHJcbiAgICAgIGNvbnN0IGNvbXBhcmVJdGVtID0gY29tcGFyZVVybC5zZWFyY2hQYXJhbXMuZ2V0KFwibmFtZVwiKSBhcyBzdHJpbmc7XHJcbiAgICAgIGNvbnN0IGNvbXBhcmVQcmljZSA9IGNvbXBhcmVVcmwuc2VhcmNoUGFyYW1zLmdldChcInByaWNlXCIpIGFzIHN0cmluZztcclxuICAgICAgLy8gY29uc3QgY29tcGFyZXByb2R1Y3R0eXBlID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3Byb2R1Y3R0eXBlJykgYXMgSFRNTEVsZW1lbnQ7XHJcbiAgICAgIGlmIChjb21wYXJlSXRlbSkge1xyXG4gICAgICAgIC8vICBjb21wYXJlcHJvZHVjdHR5cGUuaW5uZXJIVE1MID0gZGVjb2RlVVJJQ29tcG9uZW50KGNvbXBhcmVJdGVtKTtcclxuICAgICAgICAvLyBhbGVydChpdGVtKTtcclxuICAgICAgfSBlbHNlIHtcclxuICAgICAgICAvLyBjb21wYXJlcHJvZHVjdHR5cGUuaW5uZXJIVE1MID0gJ3NsaWRlJztcclxuICAgICAgICAvLyBhbGVydChpdGVtKTtcclxuICAgICAgICAkKCcjdGFibGUtY29tcGFyZScpLmVtcHR5KCkuaHRtbChgPGRpdiBjbGFzcz1cInJvdyBvZmZzZXQtNVwiPlRoaXMgcHJvZHVjdCBpcyBub3QgaW4gc3RvcmU8L2Rpdj5gKTtcclxuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ1Byb2R1Y3Qgbm90IGluIHN0b3JlIC4uLi4uLi4nKTtcclxuICAgICAgfVxyXG4gICAgICAvL2xvYWQgaXRlbXMgXHJcbiAgICAgIHByb2Nlc3NyZXF1ZXN0MihgJHtiYWNrZW5kdXJsfS9wcm9kdWN0L2xvYWRzaW1pbGFyaXRlbXMyP3RoZW5hbWU9JHtjb21wYXJlSXRlbX0mcHJpY2U9JHtjb21wYXJlUHJpY2V9JnNpemU9NGAsICdnZXQnLCB7XHJcbiAgICAgIH0sIChyOiBhbnkpID0+IHtcclxuICAgICAgICBsZXQganNvbiA9IEpTT04ucGFyc2Uocik7XHJcbiAgICAgICAgbGV0IGtleXMgPSBPYmplY3Qua2V5cyhKU09OLnBhcnNlKHIpKTtcclxuICAgICAgICB2YXIgcHJkY2F0YWxvZ3VlID0gbmV3IFN0cmluZ0J1aWxkZXIoKTtcclxuICAgICAgICBjb25zb2xlLmxvZygnanNvbiAuLi4uLicsIGpzb24pO1xyXG4gICAgICAgIHZhciBzdHJidWlsZHIgPSBuZXcgU3RyaW5nQnVpbGRlcigpO1xyXG4gICAgICAgIHZhciByb3didWlsZGVyID0gbmV3IFN0cmluZ0J1aWxkZXIoKTtcclxuICAgICAgICByb3didWlsZGVyLmFwcGVuZChgPHRyPjx0aCBjbGFzcz1cInByb2R1Y3QtbmFtZVwiPlByb2R1Y3QgTmFtZTwvdGg+YCk7XHJcbiAgICAgICAganNvbi5mb3JFYWNoKChlbGVtZW50OiBhbnkpID0+IHtcclxuICAgICAgICAgIHJvd2J1aWxkZXIuYXBwZW5kKGBcclxuICAgICAgICAgICAgPHRkIGNsYXNzPVwiZ3JpZC1saW5rX190aXRsZVwiPiR7ZWxlbWVudC5wcm9kdWN0bmFtZX08L3RkPlxyXG4gICAgICAgICAgICAgICAgICAgICBgKVxyXG4gICAgICAgIH0pO1xyXG4gICAgICAgIHJvd2J1aWxkZXIuYXBwZW5kKGA8L3RyPmApO1xyXG4gICAgICAgIHJvd2J1aWxkZXIuYXBwZW5kKGA8dHI+PHRoIGNsYXNzPVwicHJvZHVjdC1uYW1lXCI+UHJvZHVjdCBJbWFnZTwvdGg+YCk7XHJcbiAgICAgICAganNvbi5mb3JFYWNoKChlbGVtZW50OiBhbnkpID0+IHtcclxuICAgICAgICAgIC8vIDxpbWcgc3JjPVwiJHtiYWNrZW5kdXJsfS9qZXRzdG9yZS8ke2VsZW1lbnQuaW1hZ2V1cmx9XCIgYWx0PVwiXCJcclxuICAgICAgICAgIC8vIGNsYXNzPVwiZmVhdHVyZWQtaW1hZ2VcIj5cclxuICAgICAgICAgIHJvd2J1aWxkZXIuYXBwZW5kKGBcclxuICAgICAgICAgICAgICAgICAgPHRkIGNsYXNzPVwiaXRlbS1yb3dcIj5cclxuICAgICAgICAgICAgICAgICAgPGEgaHJlZj1cIi9qZXRjYXJ0L3Byb2R1Y3RwYWdlXCIgb25jbGljaz1cImxvYWRwcmQoJyR7ZWxlbWVudC5pZH0nLCcvamV0Y2FydC9wcm9kdWN0cGFnZScpXCI+XHJcbiAgICAgICAgICAgICAgICAgIDxpbWcgc3JjPVwiJHtiYWNrZW5kdXJsfS9qZXRzdG9yZS8ke2VsZW1lbnQuaW1hZ2V1cmx9XCIgY2xhc3M9XCJmZWF0dXJlZC1pbWFnZVwiIGFsdD1cIlwiPlxyXG4gICAgICAgICAgICAgICAgICA8L2E+XHJcbiAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cInByb2R1Y3QtcHJpY2UgcHJvZHVjdF9wcmljZVwiPjxzdHJvbmc+T24gU2FsZTpcclxuICAgICAgICAgICAgICAgICAgPC9zdHJvbmc+PHNwYW4+TiR7KHBhcnNlRmxvYXQoZWxlbWVudC5wcm9kdWN0cHJpY2UpLnRvRml4ZWQoMikucmVwbGFjZSgvXFxkKD89KFxcZHszfSkrXFwuKS9nLCAnJCYsJykpfTwvc3Bhbj48L2Rpdj5cclxuICAgICAgICAgICAgICA8Zm9ybSBjbGFzcz1cInZhcmlhbnRzIGNsZWFyZml4XCI+XHJcbiAgICAgICAgICAgICAgICAgIDxpbnB1dCB0eXBlPVwiaGlkZGVuXCI+XHJcbiAgICAgICAgICAgICAgICAgIDxhIGhyZWY9XCJqYXZhc2NyaXB0OnZvaWQoMCk7XCIgdGl0bGU9XCJBZGQgdG8gQ2FydFwiIG9uY2xpY2s9XCJhZGR0b2NhcnQoJyR7ZWxlbWVudC5pZH0nKVwiIGNsYXNzPVwiYWRkLXRvLWNhcnQgYnRuIGJ0bi1zb2xpZFwiPkFkZCB0b1xyXG4gICAgICAgICAgICAgICAgICAgICAgQ2FydDwvYT5cclxuICAgICAgICAgICAgICA8L2Zvcm0+XHJcbiAgICAgICAgICAgICAgPHAgY2xhc3M9XCJncmlkLWxpbmtfX3RpdGxlIGhpZGRlblwiPiR7ZWxlbWVudC5wcm9kdWN0bmFtZX08L3A+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIDwvdGQ+ICAgXHJcbiAgICAgICAgICAgICAgICAgICAgIGApO1xyXG4gICAgICAgIH0pO1xyXG4gICAgICAgIHJvd2J1aWxkZXIuYXBwZW5kKGA8L3RyPmApO1xyXG4gICAgICAgIHJvd2J1aWxkZXIuYXBwZW5kKGA8dHI+PHRoIGNsYXNzPVwicHJvZHVjdC1uYW1lXCI+UHJvZHVjdCBEZXNjcmlwdGlvbjwvdGg+YCk7XHJcbiAgICAgICAganNvbi5mb3JFYWNoKChlbGVtZW50OiBhbnkpID0+IHtcclxuICAgICAgICAgIHJvd2J1aWxkZXIuYXBwZW5kKGBcclxuICAgICAgICAgICA8dGQgY2xhc3M9XCJpdGVtLXJvd1wiPlxyXG4gICAgICAgICAgICA8cCBjbGFzcz1cImRlc2NyaXB0aW9uLWNvbXBhcmVcIj4ke2VsZW1lbnQucHJvZHVjdGRlc2NyaXB0aW9ufTwvcD5cclxuICAgICAgICAgICAgICAgIDwvdGQ+XHJcbiAgICAgICAgICAgICAgIGApO1xyXG4gICAgICAgIH0pO1xyXG4gICAgICAgIHJvd2J1aWxkZXIuYXBwZW5kKGA8L3RyPmApO1xyXG4gICAgICAgICQoJyN0YWJsZS1jb21wYXJlJykuZW1wdHkoKS5odG1sKHJvd2J1aWxkZXIudG9TdHJpbmcoKSk7XHJcbiAgICAgIH0pO1xyXG4gICAgICBicmVhaztcclxuICAgIGNhc2UgYCR7bG9naW51cmx9L2pldGNhcnQvd2lzaGxpc3RgOlxyXG4gICAgICAvLyBzZXNzaW9uU3RvcmFnZS5jbGVhcigpO1xyXG4gICAgICAvLyBpZiBjdXN0b21lciBpcyBsb2dnZWQgaW5cclxuICAgICAgY29uc29sZS5sb2coJ2NoZWNraW5nJywgbG9jYWxTdG9yYWdlLmdldEl0ZW0oJ2N1c3RvbWVydG9rZW4nKSk7XHJcbiAgICAgIGludmFsaWRhdGVTZXNzaW9uKGp3dF9kZWNvZGUsICdjdXN0b21lcnRva2VuJyk7XHJcbiAgICAgIGlmIChsb2NhbFN0b3JhZ2UuZ2V0SXRlbSgnY3VzdG9tZXJ0b2tlbicpIT09bnVsbCkge1xyXG4gICAgICAgIGNvbnNvbGUubG9nKCdpbnNpZGUgbG9nZ2luZyAuJyk7XHJcbiAgICAgICAgY29uc3Qgd2lzaGxpc3RzdG9yZSA9IEpTT04ucGFyc2Uoc2Vzc2lvblN0b3JhZ2UuZ2V0SXRlbSgnd2lzaGxpc3QnKSBhcyBzdHJpbmcpO1xyXG4gICAgICAgIGlmICgkLmlzRW1wdHlPYmplY3Qod2lzaGxpc3RzdG9yZSkpIHtcclxuICAgICAgICAgIC8vYWxlcnQoJ2VtcHR5JykgO1xyXG4gICAgICAgICAgbGV0IGNvbnRlbnQgPSBjb250ZW50dHlwZXdpdGh0b2tlbihsb2NhbFN0b3JhZ2UuZ2V0SXRlbSgnY3VzdG9tZXJ0b2tlbicpKTtcclxuICAgICAgICAgIGxldCBjdXN0aWQgPSAobG9jYWxTdG9yYWdlLmdldEl0ZW0oJ2FjaycpIGFzIHN0cmluZyk7XHJcbiAgICAgICAgICBjb25zb2xlLmxvZyhjb250ZW50LCAnIGFuZCAnLCBjdXN0aWQpO1xyXG4gICAgICAgICAgLy8gbG9hZCBmcm9tIGRiIGFmcmVzaCBpZiBzZXNzaW9uIHN0b3JlIGlzIGVtcHR5IFxyXG4gICAgICAgICAgLy9wZW9wbGUgaGFzIHRvIGxvZ2luIHRvIHNlZSB3aXNobGlzdFxyXG4gICAgICAgICAgc2V0YWpheCgnanNvbicsIGAke2JhY2tlbmR1cmx9L3Byb2R1Y3QvbG9hZHdpc2hsaXN0LyR7Y3VzdGlkfWAsICdnZXQnLCBcIlwiLCAocmVzcG9uc2U6IGFueSkgPT4ge1xyXG4gICAgICAgICAgICBjb25zb2xlLmxvZygncmVzcG9uc2UgJywgcmVzcG9uc2UpO1xyXG4gICAgICAgICAgICAvLyByZXNwb25zZT1bXSA7IFxyXG4gICAgICAgICAgICBpZihyZXNwb25zZSE9PSB1bmRlZmluZWQpe1xyXG4gICAgICAgICAgICBpZiAocmVzcG9uc2UubGVuZ3RoID09PSAwKSB7XHJcbiAgICAgICAgICAgICAgU3dhbC5maXJlKHtcclxuICAgICAgICAgICAgICAgIGljb246ICdxdWVzdGlvbicsXHJcbiAgICAgICAgICAgICAgICB0ZXh0OiAnWW91ciBXaXNoTGlzdCBpcyBFbXB0eT8nLFxyXG4gICAgICAgICAgICAgICAgc2hvd0NhbmNlbEJ1dHRvbjogZmFsc2UsXHJcbiAgICAgICAgICAgICAgICBhbGxvd091dHNpZGVDbGljazogZmFsc2UsXHJcbiAgICAgICAgICAgICAgfSkudGhlbigocmVzdWx0OiBhbnkpID0+IHtcclxuICAgICAgICAgICAgICAgIGlmIChyZXN1bHQuaXNDb25maXJtZWQpIHtcclxuICAgICAgICAgICAgICAgICAgc2V0VGltZW91dCgoKSA9PiB7XHJcbiAgICAgICAgICAgICAgICAgICAgd2luZG93LmxvY2F0aW9uLmhyZWYgPSAnLi9tYXJrZXRwbGFjZSc7XHJcbiAgICAgICAgICAgICAgICAgIH0sIDE1MDApOyAvLyByZWRpcmVjdHMgYWZ0ZXIgdGhpcyB0aW1lXHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgbGV0IHdpc2hsaXN0YnVpbGRlciA9IG5ldyBTdHJpbmdCdWlsZGVyKCk7XHJcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKCd3aXNobGlzdHN0b3JlIGVtcHR5IHN0b3JlICcsIHdpc2hsaXN0c3RvcmUpO1xyXG4gICAgICAgICAgICByZXNwb25zZS5mb3JFYWNoKChmOiBhbnkpID0+IHtcclxuICAgICAgICAgICAgICB3aXNobGlzdGJ1aWxkZXIuYXBwZW5kKGA8dGJvZHkgaWQ9XCIke2YuaWR9XCI+XHJcbiAgICAgICAgICAgICAgIDx0cj5cclxuICAgICAgICAgICAgICAgICAgIDx0ZD5cclxuICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPVwiL2pldGNhcnQvcHJvZHVjdHBhZ2VcIiBvbmNsaWNrPVwibG9hZHByZCgnJHtmLmlkfScsJy9qZXRjYXJ0L3Byb2R1Y3RwYWdlJylcIj5cclxuICAgICAgICAgICAgICAgICAgICAgICA8aW1nIHNyYz1cIiR7YmFja2VuZHVybH0vamV0c3RvcmUvJHtmLmltYWdldXJsfVwiIGFsdD1cIlwiPjwvYT5cclxuICAgICAgICAgICAgICAgICAgIDwvdGQ+XHJcbiAgICAgICAgICAgICAgICAgICA8dGQ+PGEgaHJlZj1cIiNcIj4ke2YucHJvZHVjdG5hbWV9PC9hPlxyXG4gICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJtb2JpbGUtY2FydC1jb250ZW50IHJvd1wiPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiY29sLXhzLTNcIj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxwPmluIHN0b2NrPC9wPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImNvbC14cy0zXCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aDIgY2xhc3M9XCJ0ZC1jb2xvclwiPk4keyhwYXJzZUZsb2F0KGYucHJvZHVjdHByaWNlKS50b0ZpeGVkKDIpLnJlcGxhY2UoL1xcZCg/PShcXGR7M30pK1xcLikvZywgJyQmLCcpKX08L2gyPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImNvbC14cy0zXCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aDIgY2xhc3M9XCJ0ZC1jb2xvclwiPjxhIGhyZWY9XCIjXCIgY2xhc3M9XCJpY29uIG1yLTFcIj48aSBjbGFzcz1cInRpLWNsb3NlXCI+PC9pPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvYT5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj1cIiNcIiBjbGFzcz1cImNhcnRcIj48aSBjbGFzcz1cInRpLXNob3BwaW5nLWNhcnRcIj48L2k+PC9hPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9oMj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICA8L3RkPlxyXG4gICAgICAgICAgICAgICAgICAgPHRkPlxyXG4gICAgICAgICAgICAgICAgICAgICAgIDxoMj5OJHsocGFyc2VGbG9hdChmLnByb2R1Y3RwcmljZSkudG9GaXhlZCgyKS5yZXBsYWNlKC9cXGQoPz0oXFxkezN9KStcXC4pL2csICckJiwnKSl9PC9oMj5cclxuICAgICAgICAgICAgICAgICAgIDwvdGQ+XHJcbiAgICAgICAgICAgICAgICAgICA8dGQ+XHJcbiAgICAgICAgICAgICAgICAgICA8YSBocmVmPVwiamF2YXNjcmlwdDp2b2lkKDApXCIgY2xhc3M9XCJpY29uIG1yLTNcIj5cclxuICAgICAgICAgICAgICAgICAgIDxpIGNsYXNzPVwidGktY2xvc2VcIiB0aXRsZT1cInJlbW92ZVwiIG9uY2xpY2s9XCJyZW1vdmVSb3coJyR7Zi5pZH0nKVwiPjwvaT48L2E+XHJcbiAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9XCJqYXZhc2NyaXB0OnZvaWQoMClcIiBvbmNsaWNrPVwiYWRkdG9jYXJ0Zm9yd2lzaGxpc3QoJyR7Zi5pZH0nKVwiIGNsYXNzPVwiY2FydFwiPjxpIGNsYXNzPVwidGktc2hvcHBpbmctY2FydFwiIHRpdGxlPVwiYWRkIHRvIGNhcnRcIj48L2k+PC9hPlxyXG4gICAgICAgICAgICAgICAgICAgPC90ZD5cclxuICAgICAgICAgICAgICAgICAgICA8L3RyPjwvdGJvZHk+YCk7XHJcbiAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICAvLyBzZXQgc2Vzc2lvbnN0b3JhZ2UgYWZyZXNoIFxyXG4gICAgICAgICAgICBzZXNzaW9uU3RvcmFnZS5zZXRJdGVtKCd3aXNobGlzdCcsIEpTT04uc3RyaW5naWZ5KHJlc3BvbnNlKSk7XHJcbiAgICAgICAgICAgICQoJyN3aXNobGlzdHRhYmxlJykuYXBwZW5kKHdpc2hsaXN0YnVpbGRlci50b1N0cmluZygpKTtcclxuICAgICAgICAgIH1lbHNle1xyXG4gICAgICAgICAgICB0b2FzdHIuZXJyb3IoJ3lvdXIgd2lzaGxpc3QgaXMgZW1wdHknKSA7XHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgICB9LCAoKSA9PiB7IH0sIGNvbnRlbnQpO1xyXG4gICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICBsZXQgd2lzaGxpc3RidWlsZGVyID0gbmV3IFN0cmluZ0J1aWxkZXIoKTtcclxuICAgICAgICAgIGNvbnNvbGUubG9nKCd3aXNobGlzdHN0b3JlIHN0b3JlIG5vdCBlbXB0eSAnLCB3aXNobGlzdHN0b3JlKTtcclxuICAgICAgICAgIHdpc2hsaXN0c3RvcmUuZm9yRWFjaCgoZjogYW55KSA9PiB7XHJcbiAgICAgICAgICAgIHdpc2hsaXN0YnVpbGRlci5hcHBlbmQoYDx0Ym9keSBpZD1cIiR7Zi5pZH1cIj5cclxuICAgICAgICAgICAgICAgPHRyPlxyXG4gICAgICAgICAgICAgICAgICAgPHRkPlxyXG4gICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9XCIvamV0Y2FydC9wcm9kdWN0cGFnZVwiIG9uY2xpY2s9XCJsb2FkcHJkKCcke2YuaWR9JywnL2pldGNhcnQvcHJvZHVjdHBhZ2UnKVwiPlxyXG4gICAgICAgICAgICAgICAgICAgICAgIDxpbWcgc3JjPVwiJHtiYWNrZW5kdXJsfS9qZXRzdG9yZS8ke2YuaW1hZ2V1cmx9XCIgYWx0PVwiXCI+PC9hPlxyXG4gICAgICAgICAgICAgICAgICAgPC90ZD5cclxuICAgICAgICAgICAgICAgICAgIDx0ZD48YSBocmVmPVwiI1wiPiR7Zi5wcm9kdWN0bmFtZX08L2E+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cIm1vYmlsZS1jYXJ0LWNvbnRlbnQgcm93XCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJjb2wteHMtM1wiPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHA+aW4gc3RvY2s8L3A+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiY29sLXhzLTNcIj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxoMiBjbGFzcz1cInRkLWNvbG9yXCI+TiR7KHBhcnNlRmxvYXQoZi5wcm9kdWN0cHJpY2UpLnRvRml4ZWQoMikucmVwbGFjZSgvXFxkKD89KFxcZHszfSkrXFwuKS9nLCAnJCYsJykpfTwvaDI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiY29sLXhzLTNcIj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxoMiBjbGFzcz1cInRkLWNvbG9yXCI+PGEgaHJlZj1cIiNcIiBjbGFzcz1cImljb24gbXItMVwiPjxpIGNsYXNzPVwidGktY2xvc2VcIj48L2k+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9hPjxhIGhyZWY9XCIjXCIgY2xhc3M9XCJjYXJ0XCI+PGkgY2xhc3M9XCJ0aS1zaG9wcGluZy1jYXJ0XCI+PC9pPjwvYT48L2gyPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgIDwvdGQ+XHJcbiAgICAgICAgICAgICAgICAgICA8dGQ+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgPGgyPk4keyhwYXJzZUZsb2F0KGYucHJvZHVjdHByaWNlKS50b0ZpeGVkKDIpLnJlcGxhY2UoL1xcZCg/PShcXGR7M30pK1xcLikvZywgJyQmLCcpKX08L2gyPlxyXG4gICAgICAgICAgICAgICAgICAgPC90ZD5cclxuICAgICAgICAgICAgICAgICAgIDx0ZD5cclxuICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9XCJqYXZhc2NyaXB0OnZvaWQoMClcIiBjbGFzcz1cImljb24gbXItM1wiPlxyXG4gICAgICAgICAgICAgICAgICAgPGkgY2xhc3M9XCJ0aS1jbG9zZVwiIHRpdGxlPVwicmVtb3ZlXCIgb25jbGljaz1cInJlbW92ZVJvdygnJHtmLmlkfScpXCI+PC9pPjwvYT5cclxuICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj1cImphdmFzY3JpcHQ6dm9pZCgwKVwiIG9uY2xpY2s9XCJhZGR0b2NhcnRmb3J3aXNobGlzdCgnJHtmLmlkfScpXCIgY2xhc3M9XCJjYXJ0XCI+PGkgc2l6ZT1cIjUwMHB4XCIgY2xhc3M9XCJ0aS1zaG9wcGluZy1jYXJ0XCIgdGl0bGU9XCJhZGQgdG8gY2FydFwiPjwvaT48L2E+XHJcbiAgICAgICAgICAgICAgICAgICA8L3RkPlxyXG4gICAgICAgICAgICAgICAgICAgIDwvdHI+PC90Ym9keT5gKTtcclxuICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgLy91bmRlciBhZGQgdG8gY2FydCxjaGFuZ2UgdGhlIGZ1bmN0aW9uXHJcbiAgICAgICAgICAvLyAkKCcjd2lzaGxpc3R0YWJsZScpLmFwcGVuZCh3aXNobGlzdGJ1aWxkZXIudG9TdHJpbmcoKSk7XHJcbiAgICAgICAgICAkKCcjd2lzaGxpc3R0YWJsZScpLmVtcHR5KCkuaHRtbCh3aXNobGlzdGJ1aWxkZXIudG9TdHJpbmcoKSk7XHJcbiAgICAgICAgfVxyXG4gICAgICB9IGVsc2Uge1xyXG4gICAgICAgIC8vYWxlcnQoKSA7XHJcbiAgICAgICAgLy9pZiB0aGUgdXNlciBkb2VzIG5vdCBsb2dnZWQgaW4gXHJcbiAgICAgICAgY29uc29sZS5sb2coXCJub3QgbG9nZ2VkIGluXCIpO1xyXG4gICAgICAgIFN3YWwuZmlyZSh7XHJcbiAgICAgICAgICBpY29uOiAncXVlc3Rpb24nLFxyXG4gICAgICAgICAgdGV4dDogJ2xvZ2luIHBsZWFzZScsXHJcbiAgICAgICAgICBzaG93Q2FuY2VsQnV0dG9uOiBmYWxzZSxcclxuICAgICAgICAgIGFsbG93T3V0c2lkZUNsaWNrOiBmYWxzZSxcclxuICAgICAgICB9KS50aGVuKChyZXN1bHQ6IGFueSkgPT4ge1xyXG4gICAgICAgICAgaWYgKHJlc3VsdC5pc0NvbmZpcm1lZCkge1xyXG4gICAgICAgICAgICB3aW5kb3cubG9jYXRpb24uaHJlZiA9ICcuL21hcmtldHBsYWNlJztcclxuICAgICAgICAgIH1cclxuICAgICAgICB9KTtcclxuICAgICAgfVxyXG4gICAgICBicmVhaztcclxuICAgIGNhc2UgYCR7bG9naW51cmx9L2pldGNhcnQvY29sbGVjdGlvbmA6XHJcbiAgICAgIHNlYXJjaGNvbGxlY3Rpb24oKTtcclxuICAgICAgYnJlYWs7XHJcbiAgICBjYXNlIGAke2xvZ2ludXJsfS9qZXRjYXJ0L2NhdGVnb3J5LXBhZ2VgOlxyXG4gICAgICAvL2FsZXJ0KCkgO1xyXG4gICAgICBsZXQgY2F0dXJsOiBVUkwgPSBuZXcgVVJMKGRlY29kZVVSSUNvbXBvbmVudCh3aW5kb3cubG9jYXRpb24uaHJlZikpO1xyXG4gICAgICBsZXQgY2F0c2VhcmNoUGFyYW1zID0gbmV3IFVSTFNlYXJjaFBhcmFtcyhjYXR1cmwuc2VhcmNoKS5nZXQoJ3Byb2R1Y3RpZCcpO1xyXG4gICAgICBsZXQgY2F0cHJvZHVjdDogYW55O1xyXG4gICAgICAvLyAgY29uc29sZS5sb2coJyBjYXRzZWFyY2hQYXJhbXMgJyxjYXRzZWFyY2hQYXJhbXMpIDtcclxuICAgICAgZmV0Y2goYCR7YmFja2VuZHVybH0vcHJvZHVjdC9kaXNwbGF5LyR7Y2F0c2VhcmNoUGFyYW1zfWApXHJcbiAgICAgICAgLnRoZW4oKHJlc3BvbnNlOiBhbnkpID0+IHtcclxuICAgICAgICAgIHJldHVybiByZXNwb25zZS5qc29uKCk7XHJcbiAgICAgICAgfSkudGhlbigocmVzcG9uc2U6IGFueSkgPT4ge1xyXG4gICAgICAgICAgY2F0cHJvZHVjdCA9IHJlc3BvbnNlO1xyXG4gICAgICAgICAgY29uc29sZS5sb2coJ2NhdHByb2R1Y3QgJywgY2F0cHJvZHVjdCk7XHJcbiAgICAgICAgICAkKCcjc21hbGwtc2VjdGlvbicpLmVtcHR5KCkuaHRtbChgXHJcbiAgICAgICAgICAgICAgICAgIDxoND4ke2NhdHByb2R1Y3QuY2F0ZWdvcnlpZH08L2g0PlxyXG4gICAgICAgICAgICAgICAgICA8aDU+JHtjYXRwcm9kdWN0LnByb2R1Y3RuYW1lfTwvaDU+XHJcbiAgICAgICAgICAgICAgICAgIDxwPiR7Y2F0cHJvZHVjdC5wcm9kZGVzY3JpcHRpb259PC9wPlxyXG4gICAgICAgICAgICAgICAgICAgIGApO1xyXG4gICAgICAgICAgLy8gY29uc29sZS5sb2coJyBjYXRwcm9kdWN0ICcsY2F0cHJvZHVjdCwnIGltZyAnLGA8aW1nIHNyYz0ke2JhY2tlbmR1cmx9L2pldHN0b3JlLyR7Y2F0cHJvZHVjdC5pbWFnZXVybH0+YCkgO1xyXG4gICAgICAgICAgJCgnI2NhdGltZycpLmVtcHR5KCkuaHRtbChgPGltZyBzcmM9JHtiYWNrZW5kdXJsfS9qZXRzdG9yZS8ke2NhdHByb2R1Y3QuaW1hZ2V1cmx9PmApO1xyXG4gICAgICAgICAgJCgnI2NhdGltZycpLnByb3AoJ2hyZWYnLCBgL2pldGNhcnQvcHJvZHVjdHBhZ2VgKTtcclxuICAgICAgICAgICQoJyNjYXRpbWcnKS5wcm9wKCd3aWR0aCcsICc1cHgnKTtcclxuICAgICAgICAgICQoJyNjYXRpbWcnKS5wcm9wKCdoZWlnaHQnLCAnNXB4Jyk7XHJcbiAgICAgICAgICAkKCcjY2F0aW1nJykucHJvcCgnb25jbGljaycsIGBsb2FkcHJkKCcke2NhdHByb2R1Y3QuaWR9JywnL2pldGNhcnQvcHJvZHVjdHBhZ2UnKWApO1xyXG4gICAgICAgICAgc2Vzc2lvblN0b3JhZ2Uuc2V0SXRlbSgncHJvZHVjdCcsIEpTT04uc3RyaW5naWZ5KGNhdHByb2R1Y3QpKTtcclxuICAgICAgICAgIC8vIGNvbnNvbGUubG9nKCdjYXQgcmVzcG9uc2UgJyxjYXRwcm9kdWN0KSA7XHJcbiAgICAgICAgICAvL3Byb2Nlc3Mgb3RoZXIgYWpheCByZXF1ZXN0IFxyXG4gICAgICAgICAgaWYgKGNhdHByb2R1Y3QubW9kZWwgIT09IG51bGwpIHtcclxuICAgICAgICAgICAgbGV0IHByb2R1Y3RicmFuZHM6IHN0cmluZ1tdID0gY2F0cHJvZHVjdC5tb2RlbC5zcGxpdChcIixcIik7XHJcbiAgICAgICAgICAgIC8vIGNvbnNvbGUubG9nKFwicHJvZHVjdGJyYW5kcyBcIixwcm9kdWN0YnJhbmRzKSA7XHJcbiAgICAgICAgICAgIC8vYWRkaW5nIGJyYW5kcyB0byBoZWxwIGNvbGxlY3Rpb24gc2VhcmNoXHJcbiAgICAgICAgICAgIHByb2R1Y3RicmFuZHMgPSBwcm9kdWN0YnJhbmRzLm1hcChiciA9PiB7XHJcbiAgICAgICAgICAgICAgLy8gY29uc29sZS5sb2coXCJicmFuZHNcIixicikgO1xyXG4gICAgICAgICAgICAgIC8vYnJhbmRzLnNldChcImJyYW5kc1wiLGJyKSA7ICBcclxuICAgICAgICAgICAgICByZXR1cm4gYDxkaXYgY2xhc3M9XCJjdXN0b20tY29udHJvbCBjdXN0b20tcmFkaW8gY29sbGVjdGlvbi1maWx0ZXItcmFkaW9cIj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgPGlucHV0IG5hbWU9XCJteXJhZGlvXCIgdHlwZT1cInJhZGlvXCIgb25jbGljaz1cInNlYXJjaGJyYW5kcyh0aGlzLmlkKVwiIGNsYXNzPVwiY3VzdG9tLWNvbnRyb2wtaW5wdXRcIiB2YWx1ZT1cIiR7YnJ9XCIgaWQ9XCIke2JyfVwiPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICA8bGFiZWwgY2xhc3M9XCJjdXN0b20tY29udHJvbC1sYWJlbFwiIGZvcj1cIiR7YnJ9XCI+JHticn08L2xhYmVsPiAgICAgICAgICAgICAgICAgICAgIFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PmAgO1xyXG4gICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgLy8gY29uc29sZS5sb2coXCIgcHJvZHVjdGJyYW5kcy5qb2luKCkgXCIscHJvZHVjdGJyYW5kcy5qb2luKCkpIDtcclxuICAgICAgICAgICAgJChcIiNjb2xsZWN0aW9uLWJyYW5kLWZpbHRlclwiKS5lbXB0eSgpLmh0bWwocHJvZHVjdGJyYW5kcy5qb2luKFwiIFwiKSk7XHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgICAvL2ZvciBjb2xvciBcclxuICAgICAgICAgIC8vICBsZXQgcHJvZHVjdGNvbG9yOnN0cmluZ1tdICA9IGNhdHByb2R1Y3QubWFueWNvbG9yLnNwbGl0KFwiLFwiKSA7IFxyXG4gICAgICAgICAgLy8gIHByb2R1Y3Rjb2xvciAgPSBwcm9kdWN0Y29sb3IubWFwKGNvbG9yPT57XHJcbiAgICAgICAgICAvLyAgICAgICAgICAgIGlmKGNvbG9yLnRvTG93ZXJDYXNlKCkgPT09J3doaXRlJyl7XHJcbiAgICAgICAgICAvLyAgICAgICAgICAgICByZXR1cm4gYDxsaSBjbGFzcz1cImNvbG9yLTEgJHtjb2xvcn1cIiBkYXRhLXdoaXRlPVwiJHtjb2xvcn1cIj48L2xpPmAgO1xyXG4gICAgICAgICAgLy8gICAgICAgICAgICB9ZWxzZSBpZihjb2xvci50b0xvd2VyQ2FzZSgpID09PSdyZWQnKXtcclxuICAgICAgICAgIC8vICAgICAgICAgICAgIHJldHVybiBgPGxpIGNsYXNzPVwiY29sb3ItMiAke2NvbG9yfVwiIGRhdGEtcmVkPVwiJHtjb2xvcn1cIj48L2xpPmAgO1xyXG4gICAgICAgICAgLy8gICAgICAgICAgICB9ZWxzZSBpZihjb2xvci50b0xvd2VyQ2FzZSgpID09PSdibHVlJyl7XHJcbiAgICAgICAgICAvLyAgICAgICAgICAgICByZXR1cm4gYDxsaSBjbGFzcz1cImNvbG9yLTMgJHtjb2xvcn1cIiBkYXRhLWJsdWU9XCIke2NvbG9yfVwiPjwvbGk+YCA7XHJcbiAgICAgICAgICAvLyAgICAgICAgICAgIH1lbHNlIGlmKGNvbG9yLnRvTG93ZXJDYXNlKCkgPT09J3B1cnBsZScpe1xyXG4gICAgICAgICAgLy8gICAgICAgICAgICAgcmV0dXJuIGA8bGkgY2xhc3M9XCJjb2xvci00ICR7Y29sb3J9XCIgZGF0YS1wdXJwbGU9XCIke2NvbG9yfVwiPjwvbGk+YCA7XHJcbiAgICAgICAgICAvLyAgICAgICAgICAgIH1lbHNlIGlmKGNvbG9yLnRvTG93ZXJDYXNlKCkgPT09J2JsYWNrJyl7XHJcbiAgICAgICAgICAvLyAgICAgICAgICAgICByZXR1cm4gYDxsaSBjbGFzcz1cImNvbG9yLTUgJHtjb2xvcn1cIiBkYXRhLWJsYWNrPVwiJHtjb2xvcn1cIj48L2xpPmAgO1xyXG4gICAgICAgICAgLy8gICAgICAgICAgICB9ZWxzZSBpZihjb2xvci50b0xvd2VyQ2FzZSgpID09PSdncmVlbicpe1xyXG4gICAgICAgICAgLy8gICAgICAgICAgICAgcmV0dXJuIGA8bGkgY2xhc3M9XCJjb2xvci02ICR7Y29sb3J9XCIgZGF0YS1ncmVlbj1cIiR7Y29sb3J9XCI+PC9saT5gIDtcclxuICAgICAgICAgIC8vICAgICAgICAgICAgfWVsc2UgaWYoY29sb3IudG9Mb3dlckNhc2UoKSA9PT0gJ2dyZXknKXtcclxuICAgICAgICAgIC8vICAgICAgICAgICAgICByZXR1cm4gYDxsaSBjbGFzcz1cImNvbG9yLTcgJHtjb2xvcn1cIiBkYXRhLWdyZXk9XCJncmV5XCI+PC9saT5gIDtcclxuICAgICAgICAgIC8vICAgICAgICAgICAgfWVsc2UgaWYoY29sb3IudG9Mb3dlckNhc2UoKSA9PT0gJ3llbGxvdycpe1xyXG4gICAgICAgICAgLy8gICAgICAgICAgICAgcmV0dXJuIGA8bGkgY2xhc3M9XCJjb2xvci04ICR7Y29sb3J9XCIgZGF0YS15ZWxvdz1cInllbGxvd1wiPjwvbGk+YCA7XHJcbiAgICAgICAgICAvLyAgICAgICAgICAgfVxyXG4gICAgICAgICAgLy8gICAgICAgICAgcmV0dXJuICcnIDtcclxuICAgICAgICAgIC8vICAgICAgICB9KSA7XHJcbiAgICAgICAgICAvLyBwcm9kdWN0Y29sb3IucHVzaChgPGxpIGNsYXNzPVwiY29sb3ItOSAke2NvbG9yfVwiIGRhdGEtd2hpdGU9XCIke2NvbG9yfVwiIHRpdGxlPVwiTm9uZSBvciBPdGhlcnNcIj48L2xpPmApO1xyXG4gICAgICAgICAgLy8gJCgnI2NvbG9yLXNlbGVjdG9yJykuZW1wdHkoKS5odG1sKHByb2R1Y3Rjb2xvci5qb2luKFwiXCIpKSA7XHJcbiAgICAgICAgICAvLyBmb3Igc2l6ZXMgXHJcbiAgICAgICAgICBpZiAoY2F0cHJvZHVjdC5tYW55c2l6ZXMgIT09IG51bGwpIHtcclxuICAgICAgICAgICAgbGV0IHByb2R1Y3RzaXplOiBzdHJpbmdbXSA9IGNhdHByb2R1Y3QubWFueXNpemVzO1xyXG4gICAgICAgICAgICBwcm9kdWN0c2l6ZSA9IHByb2R1Y3RzaXplLm1hcChzaXplID0+IHtcclxuICAgICAgICAgICAgICBpZiAoc2l6ZS5jaGFyQXQoMCkudG9Mb3dlckNhc2UoKSA9PT0gJ3MnKSB7XHJcbiAgICAgICAgICAgICAgICByZXR1cm4gYCA8ZGl2IGNsYXNzPVwiY3VzdG9tLWNvbnRyb2wgY3VzdG9tLXJhZGlvIGNvbGxlY3Rpb24tZmlsdGVyLXJhZGlvXCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgPGlucHV0IG9uY2xpY2s9J3NlYXJjaHR5cGUodGhpcy5pZCknIHZhbHVlPSdzJyBuYW1lPVwibXlzaXplXCIgdHlwZT1cInJhZGlvXCIgY2xhc3M9XCJjdXN0b20tY29udHJvbC1pbnB1dFwiIGlkPVwiaHVuZHJlZFwiPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgIDxsYWJlbCBjbGFzcz1cImN1c3RvbS1jb250cm9sLWxhYmVsXCIgZm9yPVwiaHVuZHJlZFwiPnM8L2xhYmVsPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+YCA7XHJcbiAgICAgICAgICAgICAgfSBlbHNlIGlmIChzaXplLmNoYXJBdCgwKS50b0xvd2VyQ2FzZSgpID09PSAnbScpIHtcclxuICAgICAgICAgICAgICAgIHJldHVybiBgPGRpdiBjbGFzcz1cImN1c3RvbS1jb250cm9sIGN1c3RvbS1yYWRpbyBjb2xsZWN0aW9uLWZpbHRlci1yYWRpb1wiPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgIDxpbnB1dCAgb25jbGljaz0nc2VhcmNodHlwZSh0aGlzLmlkKScgdmFsdWU9J20nIG5hbWU9XCJteXNpemVcIiB0eXBlPVwicmFkaW9cIiBjbGFzcz1cImN1c3RvbS1jb250cm9sLWlucHV0XCIgaWQ9XCJ0d29odW5kcmVkXCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgPGxhYmVsIGNsYXNzPVwiY3VzdG9tLWNvbnRyb2wtbGFiZWxcIiBmb3I9XCJ0d29odW5kcmVkXCI+bTwvbGFiZWw+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5gIDtcclxuICAgICAgICAgICAgICB9IGVsc2UgaWYgKHNpemUuY2hhckF0KDApLnRvTG93ZXJDYXNlKCkgPT09ICdsJykge1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuIGA8ZGl2IGNsYXNzPVwiY3VzdG9tLWNvbnRyb2wgY3VzdG9tLXJhZGlvIGNvbGxlY3Rpb24tZmlsdGVyLXJhZGlvXCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpbnB1dCAgb25jbGljaz0nc2VhcmNodHlwZSh0aGlzLmlkKScgbmFtZT1cIm15c2l6ZVwiIHZhbHVlPSdsJyB0eXBlPVwicmFkaW9cIiBjbGFzcz1cImN1c3RvbS1jb250cm9sLWlucHV0XCIgaWQ9XCJ0aHJlZWh1bmRyZWRcIj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxhYmVsIGNsYXNzPVwiY3VzdG9tLWNvbnRyb2wtbGFiZWxcIiBmb3I9XCJ0aHJlZWh1bmRyZWRcIj5sPC9sYWJlbD5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5gIDtcclxuICAgICAgICAgICAgICB9IGVsc2UgaWYgKHNpemUuY2hhckF0KDApLnRvTG93ZXJDYXNlKCkgPT09ICd4bCcpIHtcclxuICAgICAgICAgICAgICAgIHJldHVybiBgICA8ZGl2IGNsYXNzPVwiY3VzdG9tLWNvbnRyb2wgY3VzdG9tLXJhZGlvIGNvbGxlY3Rpb24tZmlsdGVyLXJhZGlvXCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGlucHV0ICBvbmNsaWNrPSdzZWFyY2h0eXBlKHRoaXMuaWQpJyBuYW1lPVwibXlzaXplXCIgdmFsdWU9J3hsJyB0eXBlPVwicmFkaW9cIiBjbGFzcz1cImN1c3RvbS1jb250cm9sLWlucHV0XCIgaWQ9XCJmb3VyaHVuZHJlZFwiPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsYWJlbCBjbGFzcz1cImN1c3RvbS1jb250cm9sLWxhYmVsXCIgZm9yPVwiZm91cmh1bmRyZWRcIj54bDwvbGFiZWw+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5gIDtcclxuICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgcmV0dXJuICcnXHJcbiAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICAkKCcjY29sbGVjdGlvbi1zaXplLWZpbHRlcicpLmVtcHR5KCkuaHRtbChwcm9kdWN0c2l6ZS5qb2luKFwiIFwiKSk7XHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgfSkuY2F0Y2goKGVycjogYW55KSA9PiB7XHJcbiAgICAgICAgICBjb25zb2xlLmxvZyhlcnIpO1xyXG4gICAgICAgIH0pO1xyXG4gICAgICAvLyBsb2FkIHByb2R1Y3RzIGludG8gIGNhdGVnb3J5IHBhZ2VcclxuICAgICAgc2V0YWpheCgnanNvbicsIGAke2JhY2tlbmR1cmx9L3Byb2R1Y3QvbG9hZGNhdHByb2R1Y3Q/c2l6ZT0yNGAsICdnZXQnLCAnJywgKHJlc3BvbnNlOiBhbnkpID0+IHtcclxuICAgICAgICAvL2NvbnNvbGUubG9nKCcgcmVzcG9uc2UgJyxyZXNwb25zZSkgO1xyXG4gICAgICAgIGlmIChyZXNwb25zZS5sZW5ndGggIT09IDApIHtcclxuICAgICAgICAgIHZhciBidWlsZGVyID0gbmV3IFN0cmluZ0J1aWxkZXIoKTtcclxuICAgICAgICAgIGNvbnN0IG15aHRtbCA9IHJlc3BvbnNlLm1hcCgoZWw6IGFueSkgPT4ge1xyXG4gICAgICAgICAgICAvLyBjb25zb2xlLmxvZygnIGpldHN0b3JlICcsYCR7YmFja2VuZHVybH0vamV0c3RvcmUvJHtlbC5pbWFnZXVybH1gKTtcclxuICAgICAgICAgICAgcmV0dXJuIGNhdGVnb3J5cGFnZXRlbXBsYXRlKGAke2JhY2tlbmR1cmx9L2pldHN0b3JlLyR7ZWwuaW1hZ2V1cmx9YCwgZWwuaWQsIGVsLnByb2R1Y3RuYW1lLCBlbC5wcm9kdWN0cHJpY2UsIGVsLnByb2RkZXNjcmlwdGlvbik7XHJcbiAgICAgICAgICB9KS5qb2luKFwiXCIpO1xyXG4gICAgICAgICAgLy8gY29uc29sZS5sb2cobXlodG1sKSA7XHJcbiAgICAgICAgICAkKCcjbWFyZ2luLXJlcycpLmVtcHR5KCkuaHRtbChteWh0bWwpO1xyXG4gICAgICAgIH1cclxuICAgICAgICBjb25zb2xlLmxvZygnYWRkZWQgc3VjY2Vzc2Z1bGx5Jyk7XHJcbiAgICAgIH0sICgpID0+IHsgfSwgY29udGVudHR5cGUpO1xyXG4gICAgICAvL25ld2VyIHByb2R1Y3QgIFxyXG4gICAgICBzZXRhamF4KCdqc29uJywgYCR7YmFja2VuZHVybH0vcHJvZHVjdC9sb2FkbmV3Y2F0cHJvZHVjdD9zaXplPTlgLCAnZ2V0JywgJycsIChyZXNwb25zZTogYW55KSA9PiB7XHJcbiAgICAgICAgaWYgKHJlc3BvbnNlLmxlbmd0aCAhPSAwKSB7XHJcbiAgICAgICAgICBsZXQgY291bnQgPSAxO1xyXG4gICAgICAgICAgbGV0IGNvdW50MiA9IDA7XHJcbiAgICAgICAgICB2YXIgYnVpbGRlciA9IG5ldyBTdHJpbmdCdWlsZGVyKCk7XHJcbiAgICAgICAgICB2YXIgYnVpbGRlcjIgPSBuZXcgU3RyaW5nQnVpbGRlcigpO1xyXG4gICAgICAgICAgZm9yIChsZXQgZWwgb2YgcmVzcG9uc2UpIHtcclxuICAgICAgICAgICAgYnVpbGRlci5hcHBlbmQobmV3cHJkdGVtcGxhdGUoYCR7YmFja2VuZHVybH0vamV0c3RvcmUvJHtlbC5pbWFnZXVybH1gLCBlbC5wcm9kdWN0bmFtZSwgZWwucHJvZHVjdHByaWNlLCBlbC5pZCkpO1xyXG4gICAgICAgICAgICBjb3VudDIgPSBjb3VudDIgKyAxO1xyXG4gICAgICAgICAgICBpZiAoY291bnQyID09PSAzKSB7XHJcbiAgICAgICAgICAgICAgY29uc29sZS5sb2coJyBidWlsZGVyIGNvdW50ICcsIGJ1aWxkZXIudG9TdHJpbmcoKSk7XHJcbiAgICAgICAgICAgICAgYnVpbGRlcjIuYXBwZW5kKGA8ZGl2PiR7YnVpbGRlci50b1N0cmluZygpfTwvZGl2PmApO1xyXG4gICAgICAgICAgICAgIGJ1aWxkZXIgPSBudWxsO1xyXG4gICAgICAgICAgICAgIGJ1aWxkZXIgPSBuZXcgU3RyaW5nQnVpbGRlcigpO1xyXG4gICAgICAgICAgICAgIGNvbnNvbGUubG9nKCcgYWRkZWQgJywgY291bnQyKTtcclxuICAgICAgICAgICAgICBjb3VudDIgPSAwO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgICBjb25zb2xlLmxvZyhcIiBidWlsZGVyMi50b1N0cmluZygpIFwiICsgYnVpbGRlcjIudG9TdHJpbmcoKSk7XHJcbiAgICAgICAgICAkKCcjc2xpZGUtMScpLmVtcHR5KCkuaHRtbChgPGg1IGNsYXNzPVwidGl0bGUtYm9yZGVyXCI+bmV3IHByb2R1Y3Q8L2g1PlxyXG4gICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cIm9mZmVyLXNsaWRlciBzbGlkZS0xXCI+YCsgYnVpbGRlcjIudG9TdHJpbmcoKSArIGA8L2Rpdj5gKTtcclxuICAgICAgICB9XHJcbiAgICAgIH0sICgpID0+IHsgfSwgY29udGVudHR5cGUpO1xyXG4gICAgICBicmVhaztcclxuICAgIGRlZmF1bHQ6XHJcbiAgfVxyXG59XHJcblxyXG4vL25ldyBwcm9kdWN0IG9uIGNhdGVnb3J5IHBhZ2VcclxuXHJcbmNvbnN0IG5ld3ByZHRlbXBsYXRlID0gKGltYWdlOiBzdHJpbmcsIHByb2R1Y3RuYW1lOiBzdHJpbmcsIHByaWNlOiBhbnksIGlkOiBzdHJpbmcpID0+IHtcclxuICByZXR1cm4gKGBcclxuICA8ZGl2IGNsYXNzPVwibWVkaWFcIj5cclxuICA8YSBocmVmPVwiL2pldGNhcnQvcHJvZHVjdHBhZ2VcIiBvbmNsaWNrPVwibG9hZHByZCgnJHtpZH0nLCcvamV0Y2FydC9wcm9kdWN0cGFnZScpXCIgc3R5bGU9XCJjdXJzb3I6cG9pbnRlcjtcIj48aW1nIGNsYXNzPVwiaW1nLWZsdWlkIGJsdXItdXAgbGF6eWxvYWRcIiBzcmM9XCIke2ltYWdlfVwiIGFsdD1cIlwiPjwvYT5cclxuICA8ZGl2IGNsYXNzPVwibWVkaWEtYm9keSBhbGlnbi1zZWxmLWNlbnRlclwiPlxyXG4gICAgICA8ZGl2IGNsYXNzPVwicmF0aW5nXCI+PGkgY2xhc3M9XCJmYSBmYS1zdGFyXCI+PC9pPiA8aSBjbGFzcz1cImZhIGZhLXN0YXJcIj48L2k+IDxpIGNsYXNzPVwiZmEgZmEtc3RhclwiPjwvaT4gPGkgY2xhc3M9XCJmYSBmYS1zdGFyXCI+PC9pPiA8aSBjbGFzcz1cImZhIGZhLXN0YXJcIj48L2k+PC9kaXY+XHJcbiAgICAgIDxhIGhyZWY9XCIvamV0Y2FydC9wcm9kdWN0cGFnZVwiIG9uY2xpY2s9XCJsb2FkcHJkKCcke2lkfScsJy9qZXRjYXJ0L3Byb2R1Y3RwYWdlJylcIiBzdHlsZT1cImN1cnNvcjpwb2ludGVyO1wiPlxyXG4gICAgICAgICAgPGg2PiR7cHJvZHVjdG5hbWV9PC9oNj5cclxuICAgICAgPC9hPlxyXG4gICAgICA8aDQ+JHthY2NvdW50aW5nLmZvcm1hdE1vbmV5KHByaWNlLCB7IHN5bWJvbDogXCJOXCIsIGZvcm1hdDogXCIlcyAldlwiIH0pfTwvaDQ+XHJcbiAgPC9kaXY+XHJcbjwvZGl2PlxyXG4gIGApO1xyXG59XHJcblxyXG4vLyBjYXRlZ29yeS1wYWdlIHRlbXBsYXRlIFxyXG5jb25zdCBjYXRlZ29yeXBhZ2V0ZW1wbGF0ZSA9IChpbWFnZTogc3RyaW5nLCBpZDogc3RyaW5nLCBwcm9kdWN0bmFtZTogc3RyaW5nLCBwcm9kdWN0cHJpY2U6IGFueSwgZGVzY3JpcHRpb246IHN0cmluZykgPT4ge1xyXG4gIHJldHVybiAoYDxkaXYgY2xhc3M9XCJjb2wteGwtMyBjb2wtNiBjb2wtZ3JpZC1ib3hcIj5cclxuICA8ZGl2IGNsYXNzPVwicHJvZHVjdC1ib3hcIj5cclxuICAgICAgPGRpdiBjbGFzcz1cImltZy13cmFwcGVyXCI+XHJcbiAgICAgICAgICA8ZGl2IGNsYXNzPVwiZnJvbnRcIj5cclxuICAgICAgICAgICAgICA8YSBocmVmPVwiL2pldGNhcnQvcHJvZHVjdHBhZ2VcIiBvbmNsaWNrPVwibG9hZHByZCgnJHtpZH0nLCcvamV0Y2FydC9wcm9kdWN0cGFnZScpXCIgc3R5bGU9XCJjdXJzb3I6cG9pbnRlcjtcIj48aW1nIHNyYz1cIiR7aW1hZ2V9XCIgY2xhc3M9XCJpbWctZmx1aWQgYmx1ci11cCBsYXp5bG9hZCBiZy1pbWdcIiBhbHQ9XCJcIj48L2E+XHJcbiAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgIDxkaXYgY2xhc3M9XCJiYWNrXCI+XHJcbiAgICAgICAgICAgICAgPGEgaHJlZj1cIi9qZXRjYXJ0L3Byb2R1Y3RwYWdlXCIgb25jbGljaz1cImxvYWRwcmQoJyR7aWR9JywnL2pldGNhcnQvcHJvZHVjdHBhZ2UnKVwiIHN0eWxlPVwiY3Vyc29yOnBvaW50ZXI7XCI+PGltZyBzcmM9XCIke2ltYWdlfVwiIGNsYXNzPVwiaW1nLWZsdWlkIGJsdXItdXAgbGF6eWxvYWQgYmctaW1nXCIgYWx0PVwiXCI+PC9hPlxyXG4gICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICA8ZGl2IGNsYXNzPVwiY2FydC1pbmZvIGNhcnQtd3JhcFwiPlxyXG4gICAgICAgICAgICAgIDxidXR0b24gZGF0YS10b2dnbGU9XCJtb2RhbFwiIGRhdGEtdGFyZ2V0PVwiI2FkZHRvY2FydFwiIHRpdGxlPVwiQWRkIHRvIGNhcnRcIj48aVxyXG4gICAgICAgICAgICAgICAgICAgICAgY2xhc3M9XCJ0aS1zaG9wcGluZy1jYXJ0XCI+PC9pPjwvYnV0dG9uPiA8YSBocmVmPVwiamF2YXNjcmlwdDp2b2lkKDApXCIgb25jbGljaz0nYWRkcHJvZHVjdHRvd2lzaGxpc3QodGhpcy5pZCknIGlkPSR7aWR9IHRpdGxlPVwiQWRkIHRvIFdpc2hsaXN0XCI+PGlcclxuICAgICAgICAgICAgICAgICAgICAgIGNsYXNzPVwidGktaGVhcnRcIiBhcmlhLWhpZGRlbj1cInRydWVcIj48L2k+PC9hPiA8YSBocmVmPVwiI1wiIGRhdGEtdG9nZ2xlPVwibW9kYWxcIiBkYXRhLXRhcmdldD1cIiNxdWljay12aWV3XCIgdGl0bGU9XCJRdWljayBWaWV3XCI+PGlcclxuICAgICAgICAgICAgICAgICAgICAgIGNsYXNzPVwidGktc2VhcmNoXCIgYXJpYS1oaWRkZW49XCJ0cnVlXCI+PC9pPjwvYT4gXHJcbiAgICAgICAgICA8L2Rpdj5cclxuICAgICAgPC9kaXY+XHJcbiAgICAgIDxkaXYgY2xhc3M9XCJwcm9kdWN0LWRldGFpbFwiPlxyXG4gICAgICAgICAgPGRpdj5cclxuICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwicmF0aW5nXCI+PGkgY2xhc3M9XCJmYSBmYS1zdGFyXCI+PC9pPiA8aSBjbGFzcz1cImZhIGZhLXN0YXJcIj48L2k+IDxpIGNsYXNzPVwiZmEgZmEtc3RhclwiPjwvaT4gPGkgY2xhc3M9XCJmYSBmYS1zdGFyXCI+PC9pPiA8aSBjbGFzcz1cImZhIGZhLXN0YXJcIj48L2k+PC9kaXY+XHJcbiAgICAgICAgICAgICAgPGEgaHJlZj1cIi9qZXRjYXJ0L3Byb2R1Y3RwYWdlXCIgb25jbGljaz1cImxvYWRwcmQoJyR7aWR9JywnL2pldGNhcnQvcHJvZHVjdHBhZ2UnKVwiIHN0eWxlPVwiY3Vyc29yOnBvaW50ZXI7XCI+XHJcbiAgICAgICAgICAgICAgICAgIDxoNj4ke3Byb2R1Y3RuYW1lfTwvaDY+XHJcbiAgICAgICAgICAgICAgPC9hPlxyXG4gICAgICAgICAgICAgIDxwPlxyXG4gICAgICAgICAgICAgICAgJHtkZXNjcmlwdGlvbn1cclxuICAgICAgICAgICAgICA8L3A+XHJcbiAgICAgICAgICAgICAgPGg0PiR7YWNjb3VudGluZy5mb3JtYXRNb25leShwcm9kdWN0cHJpY2UsIHsgc3ltYm9sOiBcIk5cIiwgZm9ybWF0OiBcIiVzICV2XCIgfSl9PC9oND5cclxuICAgICAgICAgIDwvZGl2PlxyXG4gICAgICA8L2Rpdj5cclxuICA8L2Rpdj5cclxuPC9kaXY+XHJcbmApO1xyXG59O1xyXG4vL2l0ZW0gc2VsZWN0aW9uIGluIHRoZSBjYXRlZ29yeS1wYWdlXHJcblxyXG4vLyAkKCcuY3VzdG9tLWNvbnRyb2wnKS5vbignY2xpY2snLChlOmFueSk9PntcclxuLy8gICBlLnByZXZlbnREZWZhdWx0KCk7XHJcbi8vICAgLy8kKCcjJytlLnRhcmdldC5sYXN0Q2hpbGQuZGF0YSkucHJvcCgnY2hlY2tlZCcsdHJ1ZSkgO1xyXG4vLyAgIC8vIGNvbnNvbGUubG9nKCdpbm5lcnRleHQgJytlLnRhcmdldC5pbm5lclRleHQpIDtcclxuLy8gICAvLyBjb25zb2xlLmxvZygnaW5uZXJodG1sICcrZS50YXJnZXQuaW5uZXJIVE1MKSA7XHJcbi8vICAgLy8gY29uc29sZS5sb2coJyBkYXRhICcrZS50YXJnZXQubGFzdENoaWxkLmRhdGEpIDtcclxuLy8gICAvLyBjb25zb2xlLmxvZygnIGUudGFyZ2V0LmNsYXNzTGlzdFsxXSAnLGUudGFyZ2V0LmNsYXNzTGlzdCkgO1xyXG4vLyAgIC8vIGNvbnNvbGUubG9nKCcgZSAnLGUpIDtcclxuLy8gICBjb25zb2xlLmxvZygnIGUgJyxlLnRhcmdldCkgO1xyXG4vLyB9KTtcclxubGV0IGl0ZW1jcml0ZXJpYXNlYXJjaCA9IG5ldyBpdGVtY2F0ZWdvcnlwYWdlKCk7XHJcblxyXG4vL2l0ZW0gc2VsZWN0aW9uIGluIHRoZSBjYXRlZ29yeS1wYWdlLnRvIHVzZSBhbm90aGVyIGxvZ2ljLTE5LzYvMjAyMlxyXG4vLyAkKCcjaXRlbXNlbGVjdGlvbicpLm9uKCdjbGljaycsKGU6YW55KT0+e1xyXG4vLyAgIGUucHJldmVudERlZmF1bHQoKTtcclxuLy8gICAvL2NvbnNvbGUubG9nKGUpIDtcclxuLy8gIC8vIGNvbnNvbGUubG9nKCdpbm5lcnRleHQgJytlLnRhcmdldC5pbm5lclRleHQpIDtcclxuLy8gIC8vIGNvbnNvbGUubG9nKCdpbm5lcmh0bWwgJytlLnRhcmdldC5pbm5lckhUTUwpIDtcclxuLy8gICAvL2NvbnNvbGUubG9nKCcgZGF0YSAnK2UudGFyZ2V0Lmxhc3RDaGlsZC5kYXRhKSA7XHJcbi8vICAgbGV0IGNvbG91ciAgPSBcIlwiIDtcclxuLy8gICBsZXQgaXRlbWNhdGVnb3J5ICA9ICBcIlwiIDtcclxuLy8gICAgaWYoaXRlbWNyaXRlcmlhc2VhcmNoLmNvbG91ci5pbmNsdWRlcyhlLnRhcmdldC5jbGFzc0xpc3RbMV0pKXsvLyBmb3IgY29sb3Vyc1xyXG4vLyAgICAgICAgY29sb3VyICA9ICBlLnRhcmdldC5jbGFzc0xpc3RbMV0gO1xyXG4vLyAgICAgICAgY29uc29sZS5sb2coJyBjb2xvdXIgJyxjb2xvdXIpIDtcclxuLy8gICAgICAgIGl0ZW1jYXRlZ29yeSAgPSBjb2xvdXIgO1xyXG4vLyAgICAgaXRlbWNyaXRlcmlhc2VhcmNoLnByb2Nlc3NpdGVtKGNvbG91cikgO1xyXG4vLyAgICAgIH1lbHNlIGlmKGUudGFyZ2V0LmlubmVyVGV4dCl7IC8vZm9yIHByaWNlLHR5cGUsYnJhbmQsc2l6ZSxjb2xvdXJcclxuLy8gICAgIC8vaXRlbWNhdGVnb3J5ID0gZS50YXJnZXQuaW5uZXJUZXh0ICA7XHJcbi8vICAgICAvL2NvbnNvbGUubG9nKCcgaXRlbWNhdGVnb3J5ICcsaXRlbWNhdGVnb3J5KSA7XHJcbi8vICAgICBpZighZS50YXJnZXQuaW5uZXJUZXh0LmluY2x1ZGVzKCctJykpe1xyXG4vLyAgICAgICBjb25zb2xlLmxvZygnZW50ZXJlZCBpdGVtcyAnLGUudGFyZ2V0LmlubmVyVGV4dCkgO1xyXG4vLyAgICAgICBpZighZS50YXJnZXQuY29udHJvbC5jaGVja2VkKXtcclxuLy8gICAgICAgICBlLnRhcmdldC5jb250cm9sLmNoZWNrZWQgID0gdHJ1ZSA7XHJcbi8vICAgICAgICAgaXRlbWNhdGVnb3J5ID0gZS50YXJnZXQuaW5uZXJUZXh0ICA7XHJcbi8vICAgICAgICAgY29uc29sZS5sb2coJ2NoZWNrZWQgaXRlbXMgJyxpdGVtY2F0ZWdvcnkpIDtcclxuLy8gICAgICAgLy8gIGl0ZW1jcml0ZXJpYXNlYXJjaC5wcm9jZXNzaXRlbShpdGVtY2F0ZWdvcnkpIDtcclxuLy8gICAgICAgICAgfWVsc2UgaWYoZS50YXJnZXQuY29udHJvbC5jaGVja2VkKXtcclxuLy8gICAgICAgICAgIGUudGFyZ2V0LmNvbnRyb2wuY2hlY2tlZCAgPSBmYWxzZSA7XHJcbi8vICAgICAgICAgICBpdGVtY2F0ZWdvcnkgPSBlLnRhcmdldC5pbm5lclRleHQgIDtcclxuLy8gICAgICAgICAgIGNvbnNvbGUubG9nKCcgdW5jaGVja2VkIGl0ZW1zICcsaXRlbWNhdGVnb3J5KSA7XHJcbi8vICAgICAgICAgICAvL2l0ZW1jcml0ZXJpYXNlYXJjaC5wcm9jZXNzaXRlbShpdGVtY2F0ZWdvcnkpIDtcclxuLy8gICAgICAgICAgICAgfVxyXG4vLyAgICAgICB9ZWxzZSBpZihlLnRhcmdldC5pbm5lclRleHQuaW5jbHVkZXMoJy0nKSl7XHJcbi8vICAgICAgIGl0ZW1jYXRlZ29yeSA9IGUudGFyZ2V0LmlubmVyVGV4dCAgOyAgXHJcbi8vICAgICAgIGNvbnNvbGUubG9nKCcgcHJpY2UgJyxpdGVtY2F0ZWdvcnkpIDsgIFxyXG4vLyAgICAgLy8gIGl0ZW1jcml0ZXJpYXNlYXJjaC5wcm9jZXNzaXRlbShpdGVtY2F0ZWdvcnkpIDsgXHJcbi8vICAgICAgICAgICAgfVxyXG4vLyAgICAgaXRlbWNyaXRlcmlhc2VhcmNoLnByb2Nlc3NpdGVtKGl0ZW1jYXRlZ29yeSkgO1xyXG4vLyAgICAgLy8gY29uc29sZS5sb2coJyBjb2xvdXIgJyxpdGVtY3JpdGVyaWFzZWFyY2gucHJvY2Vzc2NvbG91cikgO1xyXG4vLyAgICAgLy8gY29uc29sZS5sb2coJyBzaXplICcsaXRlbWNyaXRlcmlhc2VhcmNoLnByb2Nlc3NzaXplKSA7XHJcbi8vICAgICAvLyBjb25zb2xlLmxvZygnIGJyYW5kICcsaXRlbWNyaXRlcmlhc2VhcmNoLnByb2Nlc3NicmFuZCkgO1xyXG4vLyAgICAgY29uc29sZS5sb2coJyB0eXBlICcsaXRlbWNyaXRlcmlhc2VhcmNoLnByb2Nlc3N0eXBlKSA7XHJcbi8vICAgIC8vIGNvbnNvbGUubG9nKCcgcHJpY2UgJyxpdGVtY3JpdGVyaWFzZWFyY2gucHJpY2UpIDtcclxuLy8gICAgICAgIH1cclxuLy8gICAgICAvL3NlbmQgZGF0YVxyXG4vLyAgICAgbG9hZGNhdGVnb3J5cGFnZSgpOyAgXHJcbi8vICAvLyAgY29uc29sZS5sb2coJyBjb2xvdXIzICcsZS50YXJnZXQuY2xhc3NMaXN0WzFdKTtcclxuLy8gICAvLyBjb25zb2xlLmxvZygnIGNvbG91ciAnLGUub3JpZ2luYWxFdmVudC5zcmNFbGVtZW50LmRhdGFzZXQpO1xyXG4vLyAgIC8vIGNvbnNvbGUubG9nKCcgY29sb3VyMiAnLGUub3JpZ2luYWxFdmVudC5zcmNFbGVtZW50LmRhdGFzZXQua2V5cyk7XHJcbi8vICAgLy8gbGV0ICBkYXRhICAgPSBKU09OLnBhcnNlKEpTT04uc3RyaW5naWZ5KGUub3JpZ2luYWxFdmVudC5zcmNFbGVtZW50LmRhdGFzZXQpKSA7XHJcbi8vIH0pO1xyXG4vL2Zyb250cGFnZSBwcm9kdWN0IHNlYXJjaCBcclxuJCgnI3Byb2RzZWFyY2gnKS5vbigna2V5dXAnLCAoZTogYW55KSA9PiB7XHJcbiAgZS5wcmV2ZW50RGVmYXVsdCgpO1xyXG4gIC8vIHZhciBzZWFyY2ggID0gIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdwcm9kc2VhcmNoJyk7XHJcbiAgdmFyIGlucHV0VmFsdWUgPSAoZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3Byb2RzZWFyY2gnKSBhcyBIVE1MSW5wdXRFbGVtZW50KS52YWx1ZTtcclxuICB2YXIgbWF0Y2hsaXN0ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ21hdGNoLWxpc3QnKSBhcyBIVE1MRGl2RWxlbWVudDtcclxuICBjb25zb2xlLmxvZygnc2VhcmNoICcsIGlucHV0VmFsdWUpO1xyXG4gIHByb2Nlc3NyZXF1ZXN0MihgJHtiYWNrZW5kdXJsfS9wcm9kdWN0L2xvYWRzZWFyY2hpdGVtP3RoZW5hbWU9JHtpbnB1dFZhbHVlfSZzaXplPSR7aW5wdXRWYWx1ZS5sZW5ndGh9YCwgJ2dldCcsIHtcclxuICB9LCAocjogYW55KSA9PiB7XHJcbiAgICByID0gSlNPTi5wYXJzZShyKTtcclxuICAgIGNvbnNvbGUubG9nKCdyZXMgJywgcik7XHJcbiAgICBsZXQgbWF0Y2hlcyA9IHIuZmlsdGVyKChwOiBhbnkpID0+IHtcclxuICAgICAgY29uc3QgcmVnZXggPSBuZXcgUmVnRXhwKGBeJHtpbnB1dFZhbHVlfWAsICdnaScpOyAvLyBnbG9iYWwgYW5kICBjYXNlIGluc2Vuc2lzdGl2ZVxyXG4gICAgICByZXR1cm4gcC5wcm9kdWN0bmFtZS5tYXRjaChyZWdleCk7IC8vIGlmIGl0cyBtYXRjaFxyXG4gICAgfSk7XHJcbiAgICBpZiAoaW5wdXRWYWx1ZS5sZW5ndGggPT09IDApIHtcclxuICAgICAgbWF0Y2hlcyA9IFtdO1xyXG4gICAgICBtYXRjaGxpc3QuaW5uZXJIVE1MID0gJyc7XHJcbiAgICB9XHJcbiAgICAvLyB0byBvdXRwdXQgdGhlIGh0bWwgb2YgdGhlICBtYXRjaGVzIFxyXG4gICAgKCgpID0+IHtcclxuICAgICAgaWYgKG1hdGNoZXMubGVuZ3RoID4gMCkge1xyXG4gICAgICAgIGNvbnN0IGh0bWwgPSBtYXRjaGVzLm1hcCgobWF0Y2g6IGFueSkgPT4ge1xyXG4gICAgICAgICAgcmV0dXJuIGBcclxuICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiY2FyZCBjYXJkLWJvZHkgbWItMlwiIHN0eWxlPVwiY3Vyc29yOnBvaW50ZXI7XCI+XHJcbiAgICAgICAgICAgICAgPGg0ICBjbGFzcz1cInRleHQtcHJpbWFyeSBtLWF1dG9cIiBvbmNsaWNrPVwibG9hZHByZCgnJHttYXRjaC5pZH0nLCcvamV0Y2FydC9wcm9kdWN0cGFnZScpXCIgc3R5bGU9XCJwYWRkaW5nLXJpZ2h0OjUwcHg7cGFkZGluZy1sZWZ0OjUwcHg7XCI+JHttYXRjaC5wcm9kdWN0bmFtZX08L2g0PiAgICAgICAgICAgXHJcbiAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgYFxyXG4gICAgICAgIH0pLmpvaW4oJycpO1xyXG4gICAgICAgIG1hdGNobGlzdC5pbm5lckhUTUwgPSBodG1sO1xyXG4gICAgICB9XHJcbiAgICB9KSgpO1xyXG4gIH0pO1xyXG59KVxyXG4vL2V4dHJhY3RlZCBtYXJrZXQgZnVuY3Rpb25cclxuY29uc3QgbWFya2V0cGxhY2UgPSAoc3RyYnVpbGRyOiBhbnksIHA6IGFueSkgPT4ge1xyXG4gIGxldCBpbWFnZSA9IGAke2JhY2tlbmR1cmx9L2pldHN0b3JlLyR7cC5pbWFnZXVybH1gO1xyXG4gIHN0cmJ1aWxkci5hcHBlbmQoYDxkaXYgY2xhc3M9XCJjb2wtbWQtM1wiPlxyXG4gICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwicHJvZHVjdC1ib3hcIj5cclxuICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiaW1nLXdyYXBwZXJcIj5cclxuICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwibGFibGUtYmxvY2tcIj48c3BhbiBjbGFzcz1cImxhYmxlM1wiPiR7cC5wcm9kdWN0c3RhdHVzfTwvc3Bhbj5cclxuICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz1cImxhYmxlNFwiPm9uXHJcbiAgICAgICAgICAgICAgICAgICAgICBzYWxlPC9zcGFuPjwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJsYWJsZS1ibG9ja1wiPjxzcGFuIGNsYXNzPVwibGFibGUzXCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgJHtwLnByb2R1Y3RzdGF0dXN9PC9zcGFuPiA8c3BhbiBjbGFzcz1cImxhYmxlNFwiPm9uXHJcbiAgICAgICAgICAgICAgICAgICAgICAgc2FsZTwvc3Bhbj5cclxuICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgIDxhIGhyZWY9XCJqYXZhc2NyaXB0OnZvaWQoMClcIiBvbmNsaWNrPVwibG9hZHByZCgnJHtwLmlkfScsJy9qZXRjYXJ0L3Byb2R1Y3RwYWdlJylcIj5cclxuICAgICAgICAgICAgIDxpbWcgc3JjPVwiJHtpbWFnZX1cIiBjbGFzcz0nYW5pbWF0ZV9fYW5pbWF0ZWQgYW5pbWF0ZV9fYm91bmNlJyB3aWR0aD1cIjE4MHB4XCIgaGVpZ2h0PVwiMTgwcHhcIiBhbHQ9XCJcIj48L2E+ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcclxuICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImNhcnQtaW5mbyBjYXJ0LXdyYXBcIj5cclxuICAgICAgICAgICAgICA8YnV0dG9uIGRhdGEtdG9nZ2xlPVwibW9kYWxcIiBvbmNsaWNrPVwiYWRkdG9jYXJ0KCR7cC5pZH0pXCIgdGl0bGU9XCJBZGQgdG8gY2FydFwiPlxyXG4gICAgICAgICAgICAgIDxpIGNsYXNzPVwidGktc2hvcHBpbmctY2FydFwiPjwvaT48L2J1dHRvbj4gXHJcbiAgICAgICAgICAgICAgPGEgaHJlZj1cImphdmFzY3JpcHQ6dm9pZCgwKVwiIG9uY2xpY2s9XCJhZGR0b3dpc2hsaXN0KCcke3AuaWR9JylcIiB0aXRsZT1cIkFkZCB0byBXaXNobGlzdFwiPlxyXG4gICAgICAgICAgICAgIDxpIGNsYXNzPVwidGktaGVhcnRcIiBhcmlhLWhpZGRlbj1cInRydWVcIj48L2k+PC9hPlxyXG4gICAgICAgICAgICAgICA8YSBocmVmPVwiI1wiIGRhdGEtdG9nZ2xlPVwibW9kYWxcIlxyXG4gICAgICAgICAgICAgICAgZGF0YS10YXJnZXQ9XCIjcXVpY2stdmlld1wiIHRpdGxlPVwiUXVpY2sgVmlld1wiPlxyXG4gICAgICAgICAgICAgICAgPGkgY2xhc3M9XCJ0aS1zZWFyY2hcIiBhcmlhLWhpZGRlbj1cInRydWVcIj48L2k+XHJcbiAgICAgICAgICAgICAgICA8L2E+XHJcbiAgICAgICAgICAgICAgICA8YSBocmVmPVwiL2pldGNhcnQvY29tcGFyZT9uYW1lPSR7ZW5jb2RlVVJJQ29tcG9uZW50KHAucHJvZHVjdG5hbWUpfSRwcmljZT0ke3AucHJvZHVjdHByaWNlfVwiIHRpdGxlPVwiQ29tcGFyZVwiPlxyXG4gICAgICAgICAgICAgICAgPGkgY2xhc3M9XCJ0aS1yZWxvYWRcIiBhcmlhLWhpZGRlbj1cInRydWVcIj48L2k+PC9hPlxyXG4gICAgICAgICAgICAgICAgPC9kaXY+PC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwicHJvZHVjdC1kZXRhaWxcIj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwicmF0aW5nXCI+PGkgY2xhc3M9XCJmYSBmYS1zdGFyXCI+PC9pPiA8aSBjbGFzcz1cImZhIGZhLXN0YXJcIj48L2k+IDxpIGNsYXNzPVwiZmEgZmEtc3RhclwiPjwvaT4gPGkgY2xhc3M9XCJmYSBmYS1zdGFyXCI+PC9pPiA8aSBjbGFzcz1cImZhIGZhLXN0YXJcIj48L2k+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj1cIi9qZXRjYXJ0L3Byb2R1Y3RwYWdlYXBwbGlhbmNlXCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGg2PiR7cC5wcm9kdWN0bmFtZX08L2g2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvYT5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aDQ+TiR7KHBhcnNlRmxvYXQocC5wcm9kdWN0cHJpY2UpLnRvRml4ZWQoMikucmVwbGFjZSgvXFxkKD89KFxcZHszfSkrXFwuKS9nLCAnJCYsJykpfTwvaDQ+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgPC9kaXY+YClcclxufVxyXG5cclxuLy8gb24gY2hhbmdlIHByb2R1Y3Qgc2VhcmNoLmxvYWQgaXRlbXMgYnkgc2VhcmNoXHJcbiQoJy5pdGVtc2VhcmNoJykub24oJ2NoYW5nZScsIChlOiBhbnkpID0+IHtcclxuICBlLnByZXZlbnREZWZhdWx0KCk7XHJcbiAgbGV0IHVzZXJpZCA9ICQoJy5pdGVtc2VhcmNoJykudmFsKCk7XHJcbiAgY29uc29sZS5sb2coJ3VzZXJpZCAnLCAkKCcuaXRlbXNlYXJjaCcpLnRleHQoKSk7XHJcbiAgLy8gYWxlcnQoJC50cmltKHVzZXJpZCkpIDtcclxuICAkLmFqYXgoe1xyXG4gICAgdHlwZTogJ2dldCcsXHJcbiAgICB1cmw6IGAke2JhY2tlbmR1cmx9L3Byb2R1Y3QvbG9hZHNlYXJjaHByb2R1Y3RgLFxyXG4gICAgZGF0YTogYGlkPSR7dXNlcmlkfSZzaXplPTZgLFxyXG4gICAgc3VjY2VzczogZnVuY3Rpb24gKGRhdGE6IGFueSkge1xyXG4gICAgICBjb25zb2xlLmxvZygncmVzdWx0IC4uLicsIGRhdGEpO1xyXG4gICAgICB2YXIgYnVpbGRlciA9IG5ldyBTdHJpbmdCdWlsZGVyKCk7XHJcbiAgICAgIGRhdGEuZm9yRWFjaCgoZWxlbWVudDogYW55KSA9PiB7XHJcbiAgICAgICAgYnVpbGRlci5hcHBlbmQoYFxyXG4gICAgICAgIDxkaXYgY2xhc3M9XCJjb2wteGwtMiBjb2wtbWQtNCBjb2wtc20tNlwiPlxyXG4gICAgICAgIDxkaXYgY2xhc3M9XCJwcm9kdWN0LWJveFwiPlxyXG4gICAgICAgICAgICA8ZGl2IGNsYXNzPVwiaW1nLXdyYXBwZXJcIj5cclxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJmcm9udFwiPlxyXG4gICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9XCIvamV0Y2FydC9wcm9kdWN0cGFnZVwiIG9uY2xpY2s9XCJsb2FkcHJkKCcke2VsZW1lbnQuaWR9JywnL2pldGNhcnQvcHJvZHVjdHBhZ2UnKVwiPlxyXG4gICAgICAgICAgICAgICAgICAgIDxpbWcgc3JjPVwiJHtiYWNrZW5kdXJsfS9qZXRzdG9yZS8ke2VsZW1lbnQuaW1hZ2V1cmx9XCJcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNsYXNzPVwiaW1nLWZsdWlkIGJsdXItdXAgbGF6eWxvYWQgYmctaW1nXCIgYWx0PVwiXCI+PC9hPlxyXG4gICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiYmFja1wiPlxyXG4gICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9XCIvamV0Y2FydC9wcm9kdWN0cGFnZVwiIG9uY2xpY2s9XCJsb2FkcHJkKCcke2VsZW1lbnQuaWR9JywnL2pldGNhcnQvcHJvZHVjdHBhZ2UnKVwiPlxyXG4gICAgICAgICAgICAgICAgICAgIDxpbWcgc3JjPVwiJHtiYWNrZW5kdXJsfS9qZXRzdG9yZS8ke2VsZW1lbnQuaW1hZ2V1cmx9XCJcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNsYXNzPVwiaW1nLWZsdWlkIGJsdXItdXAgbGF6eWxvYWQgYmctaW1nXCIgYWx0PVwiXCI+PC9hPlxyXG4gICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiY2FydC1pbmZvIGNhcnQtd3JhcFwiPlxyXG4gICAgICAgICAgICAgICAgICAgIDxidXR0b24gZGF0YS10b2dnbGU9XCJtb2RhbFwiIG9uY2xpY2s9XCJhZGR0b2NhcnQoJyR7ZWxlbWVudC5pZH0nKVwiIHRpdGxlPVwiQWRkIHRvIGNhcnRcIj48aVxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY2xhc3M9XCJ0aS1zaG9wcGluZy1jYXJ0XCI+PC9pPjwvYnV0dG9uPlxyXG4gICAgICAgICAgPGEgaHJlZj1cImphdmFzY3JpcHQ6dm9pZCgwKVwiIG9uY2xpY2s9XCJhZGR0b2NhcnRmb3J3aXNobGlzdCgnJHtlbGVtZW50LmlkfScpXCIgdGl0bGU9XCJBZGQgdG8gV2lzaGxpc3RcIj48aSBjbGFzcz1cInRpLWhlYXJ0XCIgYXJpYS1oaWRkZW49XCJ0cnVlXCI+PC9pPjwvYT4gXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9XCIjXCJcclxuICAgICAgICAgICAgICAgICAgICAgICAgZGF0YS10b2dnbGU9XCJtb2RhbFwiIGRhdGEtdGFyZ2V0PVwiI3F1aWNrLXZpZXdcIiB0aXRsZT1cIlF1aWNrIFZpZXdcIj48aVxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY2xhc3M9XCJ0aS1zZWFyY2hcIiBhcmlhLWhpZGRlbj1cInRydWVcIj48L2k+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2E+IFxyXG4gICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj1cIi9qZXRjYXJ0L2NvbXBhcmU/bmFtZT0ke2VuY29kZVVSSUNvbXBvbmVudChlbGVtZW50LnByb2R1Y3RuYW1lKX0kcHJpY2U9JHtlbGVtZW50LnByb2R1Y3RwcmljZX1cIlxyXG4gICAgICAgICAgICAgICAgICAgICAgICB0aXRsZT1cIkNvbXBhcmVcIj48aSBjbGFzcz1cInRpLXJlbG9hZFwiIGFyaWEtaGlkZGVuPVwidHJ1ZVwiPjwvaT48L2E+PC9kaXY+XHJcbiAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICA8ZGl2IGNsYXNzPVwicHJvZHVjdC1kZXRhaWxcIj5cclxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJyYXRpbmdcIj48aSBjbGFzcz1cImZhIGZhLXN0YXJcIj48L2k+IDxpIGNsYXNzPVwiZmEgZmEtc3RhclwiPjwvaT4gPGlcclxuICAgICAgICAgICAgICAgICAgICAgICAgY2xhc3M9XCJmYSBmYS1zdGFyXCI+PC9pPiA8aSBjbGFzcz1cImZhIGZhLXN0YXJcIj48L2k+IDxpIGNsYXNzPVwiZmEgZmEtc3RhclwiPjwvaT48L2Rpdj5cclxuICAgICAgICAgICAgICAgIDxhIGhyZWY9XCJwcm9kdWN0LXBhZ2Uobm8tc2lkZWJhcikuaHRtbFwiPlxyXG4gICAgICAgICAgICAgICAgICAgIDxoNj4ke2VsZW1lbnQucHJvZHVjdG5hbWV9PC9oNj5cclxuICAgICAgICAgICAgICAgIDwvYT5cclxuICAgICAgICAgICAgICAgIDxoND5OJHsocGFyc2VGbG9hdChlbGVtZW50LnByb2R1Y3RwcmljZSkudG9GaXhlZCgyKS5yZXBsYWNlKC9cXGQoPz0oXFxkezN9KStcXC4pL2csICckJiwnKSl9PC9oND5cclxuICAgICAgICAgICAgICAgIDxoND48ZGVsPk4keyhwYXJzZUZsb2F0KGVsZW1lbnQucHJvZHVjdG9sZHByaWNlKS50b0ZpeGVkKDIpLnJlcGxhY2UoL1xcZCg/PShcXGR7M30pK1xcLikvZywgJyQmLCcpKX08L2RlbD48L2g0PlxyXG4gICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICBgKTtcclxuICAgICAgfSk7XHJcbiAgICAgICQoJy5zZWFyY2gtcHJvZHVjdCcpLmVtcHR5KCkuaHRtbChidWlsZGVyLnRvU3RyaW5nKCkpO1xyXG4gICAgfVxyXG4gIH0pO1xyXG59KTtcclxuXHJcbiQoZG9jdW1lbnQpLnJlYWR5KCgpID0+IHtcclxuICAvL2NvbnN0IG15Zm9ybTogSFRNTEZvcm1FbGVtZW50ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignI3RvcC1wcm9maWxlJykhO1xyXG4gIGlmIChVUkwpIHtcclxuICAgIGxldCBjdXJyZW50aHJlZiA9IHdpbmRvdy5sb2NhdGlvbi5ocmVmO1xyXG4gICAgbGV0IHVybDogVVJMID0gbmV3IFVSTChjdXJyZW50aHJlZik7XHJcbiAgICAvLyAgY29uc29sZS5sb2coJ3Rlc3QgdXJsICcsKHRoZXByb3RvY29sK3VybC5ob3N0K3VybC5wYXRobmFtZSkpO1xyXG4gICAgcGFnZXNvbmxvYWQoKHRoZXByb3RvY29sICsgdXJsLmhvc3QgKyB1cmwucGF0aG5hbWUpKTtcclxuICB9IGVsc2Uge1xyXG4gICAgYWxlcnQoJ3RoaXMgYnJvd3NlciBzZWVtIHRvIGJlIHRvbyBvbGQnKTtcclxuICB9XHJcbiAgLy8gIHJlbmRlcigoKT0+aHRtbGA8YnV0dG9uIGNsYXNzPVwiYnRuIGJ0bi1wcmltYXJ5XCIgdHlwZT1cImJ1dHRvblwiIEBjbGljaz0ke3Rlc3QoKX0+VXBkYXRlPC9idXR0b24+YCxkb2N1bWVudC5ib2R5KTtcclxufSk7XHJcbi8vbG9hZCBjYXRlZ29yeVxyXG5mdW5jdGlvbiBsb2FkY2F0ZWdvcnlwYWdlKHBhZ2VudW06IGFueSkge1xyXG4gIHBhZ2VudW0gPSBwYWdlbnVtID8gcGFnZW51bSA6IDA7XHJcbiAgZG9jdW1lbnQuY29va2llID0gXCJjdXJyZW50X3BhZ2VcIiArIHBhZ2VudW07XHJcbiAgJC5hamF4KHtcclxuICAgIHR5cGU6ICdnZXQnLFxyXG4gICAgZGF0YXR5cGU6ICdqc29uJyxcclxuICAgIHVybDogYCR7YmFja2VuZHVybH0vcHJvZHVjdC9jYXRlZ29yeWl0ZW1zYCxcclxuICAgIGRhdGE6IGBicmFuZHM9JHtpdGVtY3JpdGVyaWFzZWFyY2gucHJvY2Vzc2JyYW5kfVxyXG4gICAgJnNpemU9JHtpdGVtY3JpdGVyaWFzZWFyY2gucHJvY2Vzc3NpemV9XHJcbiAgICAmdHlwZT0ke2l0ZW1jcml0ZXJpYXNlYXJjaC5wcm9jZXNzdHlwZX1cclxuICAgICZwcmljZT0ke2l0ZW1jcml0ZXJpYXNlYXJjaC5wcmljZX1cclxuICAgICZwYWdlTnVtYmVyPSR7cGFnZW51bX0mcGFnZVNpemU9JHsyMH0mY29sb3VyPSR7aXRlbWNyaXRlcmlhc2VhcmNoLnByb2Nlc3Njb2xvdXJ9YCxcclxuICAgIHN1Y2Nlc3M6IGZ1bmN0aW9uIChkYXRhOiBhbnkpIHtcclxuICAgICAgY29uc29sZS5sb2coJyBkYXRhICcsIGRhdGEpO1xyXG4gICAgfVxyXG4gIH0pO1xyXG59XHJcbi8vbG9hZCBjb2xsZWN0aW9uXHJcbmFzeW5jIGZ1bmN0aW9uIHNlYXJjaGNvbGxlY3Rpb24ocGFnZW51bTogYW55KSB7XHJcbiAgcGFnZW51bSA9IHBhZ2VudW0gPyBwYWdlbnVtIDogMDtcclxuICBkb2N1bWVudC5jb29raWUgPSBcImN1cnJlbnRfcGFnZVwiICsgcGFnZW51bTtcclxuICAkLmFqYXgoe1xyXG4gICAgdHlwZTogJ2dldCcsXHJcbiAgICB1cmw6IGAke2JhY2tlbmR1cmx9L3Byb2R1Y3QvbG9hZGNvbGxlY3Rpb25zYCxcclxuICAgIGRhdGE6IGBwYWdlTnVtYmVyPSR7cGFnZW51bX0mcGFnZVNpemU9JHsyMH1gLFxyXG4gICAgc3VjY2VzczogZnVuY3Rpb24gKGRhdGE6IGFueSkge1xyXG4gICAgICBjb25zb2xlLmxvZygnZGF0YSAyJywgZGF0YSk7XHJcbiAgICAgIGxldCBib2R5aW1hZ2UgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnY29sbGVjdGlvbicpIGFzIEhUTUxEaXZFbGVtZW50O1xyXG4gICAgICAvL2NvbnNvbGUubG9nKCdhcHBlbmRpbmcgdG8gZG9tJykgO1xyXG4gICAgICBib2R5aW1hZ2UuaW5uZXJIVE1MID0gZGF0YTtcclxuICAgIH1cclxuICB9KTtcclxuXHJcbn1cclxuLy8gbG9hZCBwcm9kdWN0IHNlYXJjaFxyXG5hc3luYyBmdW5jdGlvbiBzZWFyY2hGaXRlcjIocGFnZW51bTogYW55KSB7XHJcbiAgcGFnZW51bSA9IHBhZ2VudW0gPyBwYWdlbnVtIDogMDtcclxuICBkb2N1bWVudC5jb29raWUgPSBcImN1cnJlbnRfcGFnZVwiICsgcGFnZW51bTtcclxuICAkLmFqYXgoe1xyXG4gICAgdHlwZTogJ2dldCcsXHJcbiAgICB1cmw6IGAke2JhY2tlbmR1cmx9L3Byb2R1Y3QvYnlzcGVjaWFsYCxcclxuICAgIGRhdGE6IGBwYWdlTnVtYmVyPSR7cGFnZW51bX0mcGFnZVNpemU9JHsyMH1gLFxyXG4gICAgc3VjY2VzczogZnVuY3Rpb24gKGRhdGE6IGFueSkge1xyXG4gICAgICAvLyAgY29uc29sZS5sb2coZGF0YSkgO1xyXG4gICAgICBsZXQgYm9keWltYWdlID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3RhYi0zJykgYXMgSFRNTERpdkVsZW1lbnQ7XHJcbiAgICAgIC8vY29uc29sZS5sb2coJ2FwcGVuZGluZyB0byBkb20nKSA7XHJcbiAgICAgIGJvZHlpbWFnZS5pbm5lckhUTUwgPSBkYXRhO1xyXG4gICAgfVxyXG4gIH0pO1xyXG59XHJcbmFzeW5jIGZ1bmN0aW9uIHNlYXJjaEZlYXR1cmVkRmlsdGVyKHBhZ2VudW06IGFueSkge1xyXG4gIHBhZ2VudW0gPSBwYWdlbnVtID8gcGFnZW51bSA6IDE7XHJcbiAgZG9jdW1lbnQuY29va2llID0gXCJjdXJyZW50X3BhZ2VcIiArIHBhZ2VudW07XHJcbiAgJC5hamF4KHtcclxuICAgIHR5cGU6ICdnZXQnLFxyXG4gICAgdXJsOiBgJHtiYWNrZW5kdXJsfS9wcm9kdWN0L2J5ZmVhdHVyZWRgLFxyXG4gICAgZGF0YTogYHBhZ2VOdW1iZXI9JHtwYWdlbnVtfSZwYWdlU2l6ZT0kezIwfWAsXHJcbiAgICBzdWNjZXNzOiBmdW5jdGlvbiAoZGF0YTogYW55KSB7XHJcbiAgICAgIC8vIGNvbnNvbGUubG9nKGRhdGEpIDtcclxuICAgICAgbGV0IGJvZHlpbWFnZSA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCd0YWItMicpIGFzIEhUTUxEaXZFbGVtZW50O1xyXG4gICAgICAvL2NvbnNvbGUubG9nKCdhcHBlbmRpbmcgdG8gZG9tJykgO1xyXG4gICAgICBib2R5aW1hZ2UuaW5uZXJIVE1MID0gZGF0YTtcclxuICAgIH1cclxuICB9KTtcclxufVxyXG4vL2J5IG5ldyBhcnJpdmFsXHJcbmFzeW5jIGZ1bmN0aW9uIHNlYXJjaE5ld0Fycml2YWxGaWx0ZXIocGFnZW51bTogYW55KSB7XHJcbiAgcGFnZW51bSA9IHBhZ2VudW0gPyBwYWdlbnVtIDogMTtcclxuICBkb2N1bWVudC5jb29raWUgPSBcImN1cnJlbnRfcGFnZVwiICsgcGFnZW51bTtcclxuICAkLmFqYXgoe1xyXG4gICAgdHlwZTogJ2dldCcsXHJcbiAgICB1cmw6IGAke2JhY2tlbmR1cmx9L3Byb2R1Y3QvYnluZXdhcnJpdmFsYCxcclxuICAgIGRhdGE6IGBwYWdlTnVtYmVyPSR7cGFnZW51bX0mcGFnZVNpemU9JHsyMH1gLFxyXG4gICAgc3VjY2VzczogZnVuY3Rpb24gKGRhdGE6IGFueSkge1xyXG4gICAgICAvLyBjb25zb2xlLmxvZyhkYXRhKSA7XHJcbiAgICAgIGxldCBib2R5aW1hZ2UgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgndGFiLTEnKSBhcyBIVE1MRGl2RWxlbWVudDtcclxuICAgICAgLy9jb25zb2xlLmxvZygnYXBwZW5kaW5nIHRvIGRvbScpIDtcclxuICAgICAgYm9keWltYWdlLmlubmVySFRNTCA9IGRhdGE7XHJcbiAgICB9XHJcbiAgfSk7XHJcbn1cclxuXHJcbi8vIGxvYWQgbWFya2V0IHByb2R1Y3RzXHJcbmNvbnN0IHNlYXJjaGFuZGxvYWRtYXJrZXRwcm9kdWN0cyA9IGFzeW5jIChwYWdlbnVtOiBhbnkpID0+IHtcclxuICBwYWdlbnVtID0gcGFnZW51bSA/IHBhZ2VudW0gOiAxO1xyXG4gIGRvY3VtZW50LmNvb2tpZSA9IFwiY3VycmVudF9wYWdlXCIgKyBwYWdlbnVtO1xyXG4gICQuYWpheCh7XHJcbiAgICB0eXBlOiAnZ2V0JyxcclxuICAgIHVybDogYCR7YmFja2VuZHVybH0vcHJvZHVjdC9sb2FkcHJvZHVjdGAsXHJcbiAgICBzdWNjZXNzOiBmdW5jdGlvbiAoZGF0YTogYW55KSB7XHJcbiAgICAgIGxldCBqc29uID0gZGF0YTtcclxuICAgICAgbGV0IGtleXMgPSBPYmplY3Qua2V5cyhkYXRhKTtcclxuICAgICAgY29uc29sZS5sb2coanNvbilcclxuICAgICAgdmFyIHByZGNhdGFsb2d1ZSA9IG5ldyBTdHJpbmdCdWlsZGVyKCk7XHJcbiAgICAgIGZvciAobGV0IGsgb2Yga2V5cykge1xyXG4gICAgICAgIHZhciBzdHJidWlsZHIgPSBuZXcgU3RyaW5nQnVpbGRlcigpO1xyXG4gICAgICAgIHN0cmJ1aWxkci5hcHBlbmQoYDxkaXYgY2xhc3M9XCJyb3cgb2Zmc2V0LTVcIj5cclxuICAgICAgICAgICAgPGRpdiBjbGFzcz1cInRpdGxlMlwiPlxyXG4gICAgICAgICAgPGgyIGNsYXNzPVwidGl0bGUtaW5uZXIyXCI+JHtrfTwvaDI+XHJcbiAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJyb3cgb2Zmc2V0LTFcIj5gKTtcclxuICAgICAgICBmb3IgKGxldCBwIG9mIGpzb25ba10pIHtcclxuICAgICAgICAgIC8vIGNvbnNvbGUubG9nKCcgcCBvZiAnLGssYCR7YmFja2VuZHVybH0vamV0c3RvcmUvJHtwLmltYWdldXJsfWApIDtcclxuICAgICAgICAgIGlmIChwLnByb2R1Y3RzdGF0dXMgPT09ICdyZWZ1cmJpc2hlZCcpIHtcclxuICAgICAgICAgICAgcC5wcm9kdWN0c3RhdHVzID0gJ3JlZic7XHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgICBsZXQgaW1hZ2UgPSBgJHtiYWNrZW5kdXJsfS9qZXRzdG9yZS8ke3AuaW1hZ2V1cmx9YDtcclxuICAgICAgICAgIG1hcmtldHBsYWNlKHN0cmJ1aWxkciwgcClcclxuICAgICAgICB9XHJcbiAgICAgICAgLy8gY29uc29sZS5sb2coJ2dvdCBoZXJlICcpIDtcclxuICAgICAgICBzdHJidWlsZHIuYXBwZW5kKGA8L2Rpdj5gKTtcclxuICAgICAgICBwcmRjYXRhbG9ndWUuYXBwZW5kKCQudHJpbShzdHJidWlsZHIudG9TdHJpbmcoKSkpO1xyXG4gICAgICB9XHJcbiAgICAgIGxldCBib2R5aW1hZ2UgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnbWFya2V0cGxhY2UnKSBhcyBIVE1MRGl2RWxlbWVudDtcclxuICAgICAgLy9jb25zb2xlLmxvZygnYXBwZW5kaW5nIHRvIGRvbScpIDtcclxuICAgICAgYm9keWltYWdlLmlubmVySFRNTCA9IHByZGNhdGFsb2d1ZS50b1N0cmluZygpO1xyXG4gICAgICBzZXRUaW1lb3V0KCgpID0+IHtcclxuICAgICAgICAvL2RlbGF5IGZvciAyMDAwXHJcbiAgICAgICAgY29uc3QgY2F0YWxvZ3VlID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ21hcmtldHBsYWNlJykgYXMgSFRNTERpdkVsZW1lbnQ7XHJcbiAgICAgICAgYW5pbWF0ZUNTUygnLm1hcmtldHBsYWNlJywgJ2ZhZGVPdXRSaWdodEJpZycsICgpID0+IHtcclxuICAgICAgICAgIGFuaW1hdGVpdGVtcyhiYWNrZW5kdXJsLCAnLm1hcmtldHBsYWNlJywgJ2ZhZGVPdXRSaWdodEJpZycsIGNhdGFsb2d1ZSwgJ2dldCcsIGAke2JhY2tlbmR1cmx9L3Byb2R1Y3QvbG9hZHByb2R1Y3RgKTtcclxuICAgICAgICB9KTtcclxuICAgICAgfSwgMzAwMCk7XHJcbiAgICB9XHJcbiAgfSk7XHJcbn1cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuIl0sIm5hbWVzIjpbImRpYWxvZyIsInNlY29uZGlhbG9nIiwiYmFja2VuZHVybCIsImxvZ2ludXJsIiwidGhlcHJvdG9jb2wiLCJpbnZhbGlkYXRlU2Vzc2lvbiIsImludmFsaWRhdGVTZXNzaW9uQW5kVG9rZW4iLCJpbnZhbGlkYXRldG9rZW4yIiwicHJvY2Vzc3JlcXVlc3QyIiwic2V0YWpheCIsImNvbnRlbnR0eXBlIiwiY29udGVudHR5cGV3aXRodG9rZW4iLCJvbk1lc3NhZ2VSZWNlaXZlZCIsIm9uUHJpdmF0ZU1lc3NhZ2UiLCJjcmVhdGV0YWJsZXMyIiwiaXRlbWNhdGVnb3J5cGFnZSIsImFuaW1hdGVDU1MiLCJhbmltYXRlaXRlbXMiLCJhbmltYXRlUHJkQ2F0IiwicHJvY2Vzc2FuaW1hdGVkIiwiYW5pbWF0ZVByb2R1Y3RDYXRlZ29yeVBhZ2UiLCJhbmltYXRlcmVsYXRlZHByZCIsIndzVXJpIiwic29ja2pzdXJsIiwidG9hc3RyIiwib3B0aW9ucyIsImRvbSIsInRhZyIsImF0dHJzIiwiZnJhZ21lbnRzIiwiZG9jdW1lbnQiLCJjcmVhdGVEb2N1bWVudEZyYWdtZW50IiwiZWxlbWVudCIsImNyZWF0ZUVsZW1lbnQiLCJjaGlsZHJlbiIsImZvckVhY2giLCJjaGlsZCIsIkhUTUxFbGVtZW50IiwiYXBwZW5kQ2hpbGQiLCJ0ZXh0bm9kZSIsImNyZWF0ZVRleHROb2RlIiwiY29uc29sZSIsImxvZyIsIk9iamVjdCIsImVudHJpZXMiLCJuYW1lIiwidmFsdWUiLCJzdGFydHNXaXRoIiwidG9Mb3dlckNhc2UiLCJ3aW5kb3ciLCJhZGRFdmVudExpc3RlbmVyIiwic3Vic3RyIiwiYXNzaWduIiwiJCIsIm9uIiwiaW5zZXJ0QWZ0ZXIiLCJteWRpYWxvZ3BvcyIsInF1ZXJ5U2VsZWN0b3IiLCJjbGFzc0xpc3QiLCJhZGQiLCJodG1sIiwiZW1wdHkiLCJsb2dpbiIsImUiLCJwcmV2ZW50RGVmYXVsdCIsImZvcm0iLCJnZXRFbGVtZW50QnlJZCIsImZvcm1kYXRhIiwiRm9ybURhdGEiLCJmZXRjaCIsIm1ldGhvZCIsImNyZWRlbnRpYWxzIiwiaGVhZGVycyIsImJvZHkiLCJKU09OIiwic3RyaW5naWZ5IiwidXNlcm5hbWUiLCJnZXQiLCJwYXNzd29yZCIsInRoZW4iLCJyZXNwb25zZSIsInN0YXR1cyIsIkVycm9yIiwidGV4dCIsInIiLCJsb2NhbFN0b3JhZ2UiLCJzZXRJdGVtIiwiZGVjb2RlZCIsImp3dF9kZWNvZGUiLCJzdWIiLCJ2ZW5kb3JuYW1lIiwiYWNrIiwibm93IiwiRGF0ZSIsInZhbHVlT2YiLCJ0b2tlbmV4cCIsInBhcnNlSW50IiwiZXhwIiwiZ2V0SXRlbSIsInRvVXBwZXJDYXNlIiwibG9jYXRpb24iLCJocmVmIiwiaW5jbHVkZXMiLCJjb250ZW50IiwibGVuZ3RoIiwiU3dhbCIsImZpcmUiLCJpY29uIiwic2hvd0NhbmNlbEJ1dHRvbiIsImFsbG93T3V0c2lkZUNsaWNrIiwicmVzdWx0IiwiaXNDb25maXJtZWQiLCJ3aXNobGlzdGJ1aWxkZXIiLCJTdHJpbmdCdWlsZGVyIiwiZiIsImFwcGVuZCIsImlkIiwiaW1hZ2V1cmwiLCJwcm9kdWN0bmFtZSIsInBhcnNlRmxvYXQiLCJwcm9kdWN0cHJpY2UiLCJ0b0ZpeGVkIiwicmVwbGFjZSIsInNlc3Npb25TdG9yYWdlIiwidG9TdHJpbmciLCJzdG9yZSIsInRvdGFsYm9keSIsIm1hcCIsImVsZW0iLCJwcm9kdWN0cXVhbnRpdHkiLCJidWlsZGVyIiwiZWwiLCJ0b3RhbHByaWNlIiwicmVzIiwicmVkdWNlIiwiYSIsImIiLCJwaG9uZW51bWJlciIsImpzb24iLCJwaG9uZSIsImF1dG9maWxsIiwiY2xvc2UiLCJtb2RhbCIsInNldFRpbWVvdXQiLCJyZW1vdmUiLCJjbGVhciIsImNvdW50cnlhbmRzdGF0ZXMiLCJ0YXJnZXQiLCJkYXRhIiwic3RhdGVzIiwiam9pbiIsInZhbCIsInB1c2giLCJhbGVydGlmeSIsImNvbmZpcm0iLCJwYXJzZSIsImpmb3JtIiwiZXJyb3IiLCJlbWFpbCIsImNvdW50cnkiLCJzdGF0ZSIsInJlc2V0IiwiYWNjb3VudG9wdGlvbiIsImNoZWNrZWQiLCJwYXltZW50Z3JvdXAiLCJnZXRFbGVtZW50c0J5TmFtZSIsInBheW1lbnR3aXRoZGViaXRjYXJkIiwiQXJyYXkiLCJmcm9tIiwib25jbGljayIsImRlc3Ryb3kiLCJpc0VtcHR5T2JqZWN0IiwidG90YWwiLCJ0YWJsZWRhdGEiLCJ0YWJsZVRvSlNPTiIsIm9yZGVyYXJyYXkiLCJteXN0b3JlIiwicHJkIiwib3JkZXJvYmoiLCJwcm9kdWN0IiwicHJkc3RvcmUiLCJwcm9kdWN0aWQiLCJwcmljZSIsIm9yZGlkIiwicXVhbnRpdHkiLCJvcmRzdGF0dXMiLCJ0b3duIiwidGF4IiwiYWRkcmVzcyIsImZpcnN0bmFtZSIsImxhc3RuYW1lIiwicGF5bWVudG1ldGhvZCIsInBheW1lbnRzdGF0dXMiLCJvdmVyYWxsdG90YWwiLCJwb3N0YWxjb2RlIiwidXNlcmlkIiwic2hpcHBpbmciLCJsb2NhbHBpY2t1cCIsInRvdGFsb3JkZXIiLCJvcmRlciIsInVyaWVuY29kZSIsImVuY29kZVVSSUNvbXBvbmVudCIsIm1ha2VQYXltZW50IiwiZ2VuZXJhdGVJZCIsImpzb25mb3JtIiwiZnJvbUVudHJpZXMiLCJjbG9uZSIsImVyciIsIm11dHVhbGx5RXhjbHVkZVdpc2hMaXN0Rm9yQ2FydCIsIndpc2hsaXN0Iiwid2lzaGxpc3RzdG9yZSIsInVuZGVmaW5lZCIsImZpbHRlciIsInN0b3JhZ2VhcnJheSIsIlNldCIsInRva2VuIiwiaW5wdXRudW1iZXIiLCJwcm9wIiwiaXNBcnJheSIsImJ0b2EiLCJ1bmVzY2FwZSIsImZpbGxwcm9kdWN0aW5mbyIsInBhZ2VsaW5rIiwiY2F0ZWdvcnlpZCIsInByb2RkZXNjcmlwdGlvbiIsInNob3J0c3VtbWFyeSIsInNpemUiLCJwcm9kdWN0c3RhdHVzIiwibW9kZWwiLCJ1c2VybWFwIiwiTWFwIiwiZW5jb2RlciIsImlubmVyVGV4dCIsImFsZXJ0Iiwic29ja2V0Iiwic3RvbXBDbGllbnQiLCJpdGVtc2JvdWdodCIsInR4cmVmIiwiYW1vdW50IiwiZGVzY3JpcHRpb24iLCJpbWFnZWxpbmsiLCJ0aXRsZSIsImN1c3RkYXRhIiwiaXRlbXMiLCJzdWJzdHJpbmciLCJjaXR5IiwiRmx1dHRlcndhdmVDaGVja291dCIsInB1YmxpY19rZXkiLCJ0eF9yZWYiLCJjdXJyZW5jeSIsInBheW1lbnRfb3B0aW9ucyIsImNhbGxiYWNrIiwicGF5bWVudCIsInZlcmlmeVRyYW5zYWN0aW9uT25CYWNrZW5kIiwib25jbG9zZSIsImluY29tcGxldGUiLCJjdXN0b21lciIsInBob25lX251bWJlciIsImN1c3RvbWl6YXRpb25zIiwibG9nbyIsInVpZCIsIlVpbnQzMkFycmF5IiwiY3J5cHRvIiwiZ2V0UmFuZG9tVmFsdWVzIiwicGVyZm9ybWFuY2UiLCJBIiwiTWF0aCIsInJhbmRvbSIsImdldFRpbWUiLCJ0cmFuc2FjdGlvbklkIiwidmVyaWZpZWQiLCJzdWJtaXRjb250YWN0MiIsInN1YnNjcmliZXRvZXZlbnQiLCJldmVudFNvdXJjZSIsImV2dHlwZSIsImV2ZW50Iiwic3VjY2VzcyIsImN1cnJlbnRUYXJnZXQiLCJyZWFkeVN0YXRlIiwiRXZlbnRTb3VyY2UiLCJDTE9TRUQiLCJwYWdlc29ubG9hZCIsInVybCIsImNhcnRzdG9yZSIsInRheGVzZGF0YSIsInR5cGUiLCJjc3MiLCJhbGlnbiIsIndpZHRoIiwidmFsaWRhdGUiLCJzZWFyY2hGaXRlcjIiLCJzZWFyY2hOZXdBcnJpdmFsRmlsdGVyIiwic2VhcmNoRmVhdHVyZWRGaWx0ZXIiLCJzZWFyY2hhbmRsb2FkbWFya2V0cHJvZHVjdHMiLCJTb2NrSlMiLCJTdG9tcCIsIm92ZXIiLCJjb25uZWN0Iiwic3Vic2NyaWJlIiwiY2hhdE1lc3NhZ2UiLCJzZW5kZXJOYW1lIiwibWVzc2FnZSIsInNlbmQiLCJyZWNlaXZlck5hbWUiLCJjb3VudHJpZXMiLCJidWlsZGVyMiIsIlVSTCIsImRlY29kZVVSSUNvbXBvbmVudCIsInNlYXJjaFBhcmFtcyIsIlVSTFNlYXJjaFBhcmFtcyIsInNlYXJjaCIsInJlbGF0ZWRwcmQiLCJjYXRhbG9ndWUiLCJrZXlzIiwicHJkY2F0YWxvZ3VlIiwiayIsInN0cmJ1aWxkciIsInAiLCJpbWFnZSIsIm1hcmtldHBsYWNlIiwidHJpbSIsInBhcnNlZFVybCIsIml0ZW0iLCJwcm9kdWN0dHlwZSIsImlubmVySFRNTCIsInJvd2J1aWxkZXIiLCJzZWxlY3QyIiwicGxhY2Vob2xkZXIiLCJtaW5pbXVtSW5wdXRMZW5ndGgiLCJhamF4IiwiZGF0YVR5cGUiLCJwYXJhbXMiLCJ0aGVuYW1lIiwidGVybSIsInBhZ2UiLCJwcm9jZXNzUmVzdWx0cyIsInJlc3VsdHMiLCJvYmoiLCJjb21wYXJlVXJsIiwiY29tcGFyZUl0ZW0iLCJjb21wYXJlUHJpY2UiLCJwcm9kdWN0ZGVzY3JpcHRpb24iLCJjdXN0aWQiLCJzZWFyY2hjb2xsZWN0aW9uIiwiY2F0dXJsIiwiY2F0c2VhcmNoUGFyYW1zIiwiY2F0cHJvZHVjdCIsInByb2R1Y3RicmFuZHMiLCJzcGxpdCIsImJyIiwibWFueXNpemVzIiwicHJvZHVjdHNpemUiLCJjaGFyQXQiLCJteWh0bWwiLCJjYXRlZ29yeXBhZ2V0ZW1wbGF0ZSIsImNvdW50IiwiY291bnQyIiwibmV3cHJkdGVtcGxhdGUiLCJhY2NvdW50aW5nIiwiZm9ybWF0TW9uZXkiLCJzeW1ib2wiLCJmb3JtYXQiLCJpdGVtY3JpdGVyaWFzZWFyY2giLCJpbnB1dFZhbHVlIiwibWF0Y2hsaXN0IiwibWF0Y2hlcyIsInJlZ2V4IiwiUmVnRXhwIiwibWF0Y2giLCJwcm9kdWN0b2xkcHJpY2UiLCJyZWFkeSIsImN1cnJlbnRocmVmIiwiaG9zdCIsInBhdGhuYW1lIiwibG9hZGNhdGVnb3J5cGFnZSIsInBhZ2VudW0iLCJjb29raWUiLCJkYXRhdHlwZSIsInByb2Nlc3NicmFuZCIsInByb2Nlc3NzaXplIiwicHJvY2Vzc3R5cGUiLCJwcm9jZXNzY29sb3VyIiwiYm9keWltYWdlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///24\n')},(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__)=>{"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "default": () => (/* binding */ _typeof)\n/* harmony export */ });\nfunction _typeof(obj) {\n  "@babel/helpers - typeof";\n\n  return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;\n  }, _typeof(obj);\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMjUuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFlO0FBQ2Y7O0FBRUE7QUFDQTtBQUNBLElBQUk7QUFDSjtBQUNBLEdBQUc7QUFDSCIsInNvdXJjZXMiOlsid2VicGFjazovL3dlYmFwcC8uL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS90eXBlb2YuanM/Mjk2NCJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBfdHlwZW9mKG9iaikge1xuICBcIkBiYWJlbC9oZWxwZXJzIC0gdHlwZW9mXCI7XG5cbiAgcmV0dXJuIF90eXBlb2YgPSBcImZ1bmN0aW9uXCIgPT0gdHlwZW9mIFN5bWJvbCAmJiBcInN5bWJvbFwiID09IHR5cGVvZiBTeW1ib2wuaXRlcmF0b3IgPyBmdW5jdGlvbiAob2JqKSB7XG4gICAgcmV0dXJuIHR5cGVvZiBvYmo7XG4gIH0gOiBmdW5jdGlvbiAob2JqKSB7XG4gICAgcmV0dXJuIG9iaiAmJiBcImZ1bmN0aW9uXCIgPT0gdHlwZW9mIFN5bWJvbCAmJiBvYmouY29uc3RydWN0b3IgPT09IFN5bWJvbCAmJiBvYmogIT09IFN5bWJvbC5wcm90b3R5cGUgPyBcInN5bWJvbFwiIDogdHlwZW9mIG9iajtcbiAgfSwgX3R5cGVvZihvYmopO1xufSJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///25\n')},(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"itemcategorypage\": () => (/* binding */ itemcategorypage)\n/* harmony export */ });\n/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(13);\n/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(14);\n\n\nvar itemcategorypage = /*#__PURE__*/function () {\n  function itemcategorypage() {\n    (0,_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, itemcategorypage);\n\n    this.brand = Array();\n    this.colour = Array('white', 'red', 'blue', 'yellow', 'green', 'blue', 'grey', 'green', 'purple');\n    this.type = Array('new', 'old', 'refurbished');\n    this.size = ['s', 'm', 'l', 'xl'];\n    this.price = '';\n    this.processcolour = Array();\n    this.processbrand = Array();\n    this.processtype = Array();\n    this.processsize = Array();\n  }\n\n  (0,_babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(itemcategorypage, [{\n    key: \"processitem\",\n    value: function processitem(search) {\n      //for colour \n      search = encodeURIComponent(search.toLowerCase());\n      console.log(' search ', search);\n\n      if (this.colour.includes(search)) {\n        if (!this.processcolour.includes(search)) {\n          this.processcolour.push(search);\n          console.log(' processitem colour ', this.processcolour);\n        } else if (this.processcolour.includes(search)) {\n          var index = this.processcolour.indexOf(search);\n          this.processcolour.splice(index, 1);\n          this.processcolour.push(search);\n          console.log(' added colour ', this.processcolour);\n        }\n      } // for price \n\n\n      if (search.includes('-')) {\n        console.log('search price ', search, 'split ', search.split('-'));\n        this.price = search;\n      } //for brand\n\n\n      if (this.brand.includes(search)) {\n        if (!this.processbrand.includes(search)) {\n          this.processbrand.push(search);\n          console.log('add brand ');\n        } else if (this.processbrand.includes(search)) {\n          console.log('already brand ');\n\n          var _index = this.processbrand.indexOf(search);\n\n          this.processbrand.splice(_index, 1);\n          this.processbrand.push(search);\n          console.log('already addded brand ');\n        }\n      } // for size \n\n\n      if (this.size.includes(search)) {\n        console.log('entered size ');\n\n        if (!this.processsize.includes(search)) {\n          this.processsize.push(search);\n        } else if (this.processsize.includes(search)) {\n          console.log('already size ');\n\n          var _index2 = this.processsize.indexOf(search);\n\n          this.processsize.splice(_index2, 1);\n          this.processsize.push(search);\n          console.log('already addded size ');\n        }\n      } //for type\n\n\n      if (this.type.includes(search)) {\n        // console.log('under type search ',search) ;\n        if (!this.processtype.includes(search)) {\n          // console.log('adding type ',search) ;\n          this.processtype.push(search);\n        } else if (this.processtype.includes(search)) {\n          console.log('already type ');\n\n          var _index3 = this.processtype.indexOf(search);\n\n          this.processtype.splice(_index3, 1);\n          this.processtype.push(search);\n          console.log('already addded type ');\n        }\n      }\n    }\n  }]);\n\n  return itemcategorypage;\n}();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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QUFZLGVBQVo7O1VBQ0EsSUFBSUcsT0FBSyxHQUFHLEtBQUtULFdBQUwsQ0FBaUJVLE9BQWpCLENBQXlCUixNQUF6QixDQUFaOztVQUNBLEtBQUtGLFdBQUwsQ0FBaUJXLE1BQWpCLENBQXdCRixPQUF4QixFQUE4QixDQUE5QjtVQUNBLEtBQUtULFdBQUwsQ0FBaUJRLElBQWpCLENBQXNCTixNQUF0QjtVQUNBRyxPQUFPLENBQUNDLEdBQVIsQ0FBWSxzQkFBWjtRQUNDO01BQ1A7SUFDSDtFQXpFUDs7RUFBQTtBQUFBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vd2ViYXBwLy4vdHNfc2NyaXB0cy9jYXRlZ29yeXBhZ2UudHM/NGM2OCJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgY2xhc3MgaXRlbWNhdGVnb3J5cGFnZXtcclxuICAgcHVibGljICBicmFuZDpzdHJpbmdbXSA9IEFycmF5KCkgO1xyXG4gICBwdWJsaWMgIGNvbG91cjpzdHJpbmdbXSA9IEFycmF5KCd3aGl0ZScsJ3JlZCcsJ2JsdWUnLCd5ZWxsb3cnLCdncmVlbicsJ2JsdWUnLCdncmV5JywnZ3JlZW4nLCdwdXJwbGUnKSA7XHJcbiAgIHB1YmxpYyB0eXBlOnN0cmluZ1tdID0gQXJyYXkoJ25ldycsJ29sZCcsJ3JlZnVyYmlzaGVkJykgIDtcclxuICAgcHVibGljIHNpemU6c3RyaW5nW10gPSBbJ3MnLCdtJywnbCcsJ3hsJ10gIDtcclxuICAgcHVibGljIHByaWNlOnN0cmluZyA9Jyc7XHJcbiAgIHB1YmxpYyAgcHJvY2Vzc2NvbG91cjpzdHJpbmdbXSA9IEFycmF5KCkgO1xyXG4gICBwdWJsaWMgIHByb2Nlc3NicmFuZDpzdHJpbmdbXSA9IEFycmF5KCkgO1xyXG4gICBwdWJsaWMgIHByb2Nlc3N0eXBlOnN0cmluZ1tdID0gQXJyYXkoKSA7XHJcbiAgIHB1YmxpYyAgcHJvY2Vzc3NpemU6c3RyaW5nW10gPSBBcnJheSgpIDtcclxuICAgY29uc3RydWN0b3IoKXtcclxuXHJcbiAgICB9XHJcbiAgcHJvY2Vzc2l0ZW0oc2VhcmNoOnN0cmluZyl7XHJcbiAgICAgICAvL2ZvciBjb2xvdXIgXHJcbiAgICAgICBzZWFyY2ggID0gZW5jb2RlVVJJQ29tcG9uZW50KHNlYXJjaC50b0xvd2VyQ2FzZSgpKSA7XHJcbiAgICAgICBjb25zb2xlLmxvZygnIHNlYXJjaCAnLHNlYXJjaCkgO1xyXG4gICAgICAgaWYodGhpcy5jb2xvdXIuaW5jbHVkZXMoc2VhcmNoKSl7XHJcbiAgICAgICAgICAgIGlmKCF0aGlzLnByb2Nlc3Njb2xvdXIuaW5jbHVkZXMoc2VhcmNoKSl7XHJcbiAgICAgICAgICAgICAgICB0aGlzLnByb2Nlc3Njb2xvdXIucHVzaChzZWFyY2gpIDtcclxuICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKCcgcHJvY2Vzc2l0ZW0gY29sb3VyICcsdGhpcy5wcm9jZXNzY29sb3VyKSA7XHJcbiAgICAgICAgICAgIH1lbHNlIGlmKHRoaXMucHJvY2Vzc2NvbG91ci5pbmNsdWRlcyhzZWFyY2gpKXtcclxuICAgICAgICAgICAgICAgICBsZXQgaW5kZXggPSB0aGlzLnByb2Nlc3Njb2xvdXIuaW5kZXhPZihzZWFyY2gpIDtcclxuICAgICAgICAgICAgICAgICB0aGlzLnByb2Nlc3Njb2xvdXIuc3BsaWNlKGluZGV4LDEpIDtcclxuICAgICAgICAgICAgICAgICB0aGlzLnByb2Nlc3Njb2xvdXIucHVzaChzZWFyY2gpIDtcclxuICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZygnIGFkZGVkIGNvbG91ciAnLHRoaXMucHJvY2Vzc2NvbG91cikgO1xyXG4gICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfVxyXG4gICAgICAgLy8gZm9yIHByaWNlIFxyXG4gICAgICAgIGlmKHNlYXJjaC5pbmNsdWRlcygnLScpKXtcclxuICAgICAgICAgICAgY29uc29sZS5sb2coJ3NlYXJjaCBwcmljZSAnLHNlYXJjaCwnc3BsaXQgJyxzZWFyY2guc3BsaXQoJy0nKSkgO1xyXG4gICAgICAgICAgICAgdGhpcy5wcmljZSAgPSBzZWFyY2ggO1xyXG4gICAgICAgICAgICAgfVxyXG4gICAgICAgIC8vZm9yIGJyYW5kXHJcbiAgICAgICAgIGlmKHRoaXMuYnJhbmQuaW5jbHVkZXMoc2VhcmNoKSl7XHJcbiAgICAgICAgICAgICBpZighdGhpcy5wcm9jZXNzYnJhbmQuaW5jbHVkZXMoc2VhcmNoKSl7XHJcbiAgICAgICAgICAgICAgICB0aGlzLnByb2Nlc3NicmFuZC5wdXNoKHNlYXJjaCkgO1xyXG4gICAgICAgICAgICAgICAgY29uc29sZS5sb2coJ2FkZCBicmFuZCAnKTtcclxuICAgICAgICAgICAgICAgICB9ZWxzZSBpZih0aGlzLnByb2Nlc3NicmFuZC5pbmNsdWRlcyhzZWFyY2gpKXtcclxuICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZygnYWxyZWFkeSBicmFuZCAnKTtcclxuICAgICAgICAgICAgICAgICAgICBsZXQgaW5kZXggPSB0aGlzLnByb2Nlc3NicmFuZC5pbmRleE9mKHNlYXJjaCkgO1xyXG4gICAgICAgICAgICAgICAgICAgIHRoaXMucHJvY2Vzc2JyYW5kLnNwbGljZShpbmRleCwxKSA7XHJcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5wcm9jZXNzYnJhbmQucHVzaChzZWFyY2gpIDtcclxuICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZygnYWxyZWFkeSBhZGRkZWQgYnJhbmQgJyk7XHJcbiAgICAgICAgICAgICAgICAgICAgfSAgICAgICAgIFxyXG4gICAgICAgICAgICAgfVxyXG4gICAgICAgIC8vIGZvciBzaXplIFxyXG4gICAgICAgIGlmKHRoaXMuc2l6ZS5pbmNsdWRlcyhzZWFyY2gpKXtcclxuICAgICAgICAgICAgY29uc29sZS5sb2coJ2VudGVyZWQgc2l6ZSAnKTtcclxuICAgICAgICAgICAgaWYoIXRoaXMucHJvY2Vzc3NpemUuaW5jbHVkZXMoc2VhcmNoKSl7XHJcbiAgICAgICAgICAgICAgIHRoaXMucHJvY2Vzc3NpemUucHVzaChzZWFyY2gpO1xyXG4gICAgICAgICAgICAgICAgfWVsc2UgaWYodGhpcy5wcm9jZXNzc2l6ZS5pbmNsdWRlcyhzZWFyY2gpKXtcclxuICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZygnYWxyZWFkeSBzaXplICcpO1xyXG4gICAgICAgICAgICAgICAgICAgIGxldCBpbmRleCA9IHRoaXMucHJvY2Vzc3NpemUuaW5kZXhPZihzZWFyY2gpIDtcclxuICAgICAgICAgICAgICAgICAgICB0aGlzLnByb2Nlc3NzaXplLnNwbGljZShpbmRleCwxKSA7XHJcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5wcm9jZXNzc2l6ZS5wdXNoKHNlYXJjaCkgO1xyXG4gICAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKCdhbHJlYWR5IGFkZGRlZCBzaXplICcpO1xyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgIH1cclxuICAgICAgICAvL2ZvciB0eXBlXHJcbiAgICAgICAgIGlmKHRoaXMudHlwZS5pbmNsdWRlcyhzZWFyY2gpKXtcclxuICAgICAgICAgICAvLyBjb25zb2xlLmxvZygndW5kZXIgdHlwZSBzZWFyY2ggJyxzZWFyY2gpIDtcclxuICAgICAgICAgICBpZighdGhpcy5wcm9jZXNzdHlwZS5pbmNsdWRlcyhzZWFyY2gpKXtcclxuICAgICAgICAgICAvLyBjb25zb2xlLmxvZygnYWRkaW5nIHR5cGUgJyxzZWFyY2gpIDtcclxuICAgICAgICAgICAgICB0aGlzLnByb2Nlc3N0eXBlLnB1c2goc2VhcmNoKSA7XHJcbiAgICAgICAgICAgICAgfWVsc2UgaWYodGhpcy5wcm9jZXNzdHlwZS5pbmNsdWRlcyhzZWFyY2gpKXtcclxuICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKCdhbHJlYWR5IHR5cGUgJyk7XHJcbiAgICAgICAgICAgICAgICBsZXQgaW5kZXggPSB0aGlzLnByb2Nlc3N0eXBlLmluZGV4T2Yoc2VhcmNoKSA7XHJcbiAgICAgICAgICAgICAgICB0aGlzLnByb2Nlc3N0eXBlLnNwbGljZShpbmRleCwxKSA7XHJcbiAgICAgICAgICAgICAgICB0aGlzLnByb2Nlc3N0eXBlLnB1c2goc2VhcmNoKSA7XHJcbiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZygnYWxyZWFkeSBhZGRkZWQgdHlwZSAnKTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgfVxyXG4gICAgICB9XHJcbn1cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuIl0sIm5hbWVzIjpbIml0ZW1jYXRlZ29yeXBhZ2UiLCJicmFuZCIsIkFycmF5IiwiY29sb3VyIiwidHlwZSIsInNpemUiLCJwcmljZSIsInByb2Nlc3Njb2xvdXIiLCJwcm9jZXNzYnJhbmQiLCJwcm9jZXNzdHlwZSIsInByb2Nlc3NzaXplIiwic2VhcmNoIiwiZW5jb2RlVVJJQ29tcG9uZW50IiwidG9Mb3dlckNhc2UiLCJjb25zb2xlIiwibG9nIiwiaW5jbHVkZXMiLCJwdXNoIiwiaW5kZXgiLCJpbmRleE9mIiwic3BsaWNlIiwic3BsaXQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///26\n")},(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "animateCSS": () => (/* binding */ animateCSS),\n/* harmony export */   "animatePrdCat": () => (/* binding */ animatePrdCat),\n/* harmony export */   "animateProductCategoryPage": () => (/* binding */ animateProductCategoryPage),\n/* harmony export */   "animateitems": () => (/* binding */ animateitems),\n/* harmony export */   "animaterelatedprd": () => (/* binding */ animaterelatedprd),\n/* harmony export */   "processanimated": () => (/* binding */ processanimated)\n/* harmony export */ });\n/* harmony import */ var _url__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(18);\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it["return"] != null) it["return"](); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\n\nfunction animateProductCategoryPage(element, animationName, callback) {\n  // setInterval(function(){\n  var node = document.querySelector(element); //console.log(\'inside anim css\',node);\n\n  node.classList.add(\'animated\', animationName);\n\n  function handleAnimationEnd() {\n    node.classList.remove(\'animated\', animationName);\n    node.removeEventListener(\'animationend\', handleAnimationEnd);\n\n    if (typeof callback === \'function\') {\n      // animateitems() ;\n      callback();\n    }\n  } // node.classList.add(\'animated\',animationName) ;\n\n\n  node.addEventListener(\'animationend\', handleAnimationEnd); //  },2000);\n} //process the json for amimation\n\nvar processanimated = function processanimated(json, strbuildr, rowbuilder) {\n  var counter = 0;\n\n  if (json.length === 0) {\n    $(\'#catalogue\').empty().html("<div>This product is not in store</div>");\n    throw new Error(\'product not in store .......\');\n  }\n\n  var _iterator = _createForOfIteratorHelper(json),\n      _step;\n\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var p = _step.value;\n      console.log(\' p of \', p.productname, "".concat(_url__WEBPACK_IMPORTED_MODULE_0__.backendurl, "/jetstore/").concat(p.imageurl));\n\n      if (counter === 0) {\n        rowbuilder.append("<div class=\\"row offset-1\\">");\n      }\n\n      var image = "".concat(_url__WEBPACK_IMPORTED_MODULE_0__.backendurl, "/jetstore/").concat(p.imageurl); //  rowbuilder.append(`<div class=\'row\'></div>`) ;\n\n      if (p.productstatus === \'refurbished\') {\n        p.productstatus = \'ref\';\n      }\n\n      rowbuilder.append("<div class=\\"col-md-3\\">\\n                 <div class=\\"product-box\\">\\n                   <div class=\\"img-wrapper\\">\\n                   <div class=\\"lable-block\\"><span class=\\"lable3\\">".concat(p.productstatus, "</span>\\n                    <span class=\\"lable4\\">on\\n                   sale</span></div>\\n         <a href=\\"/jetcart/productpage\\" onclick=\\"loadprd(\'").concat(p.id, "\',\'/jetcart/productpage\')\\">>\\n         <img src=\\"").concat(image, "\\" width=\\"180px\\" height=\\"180px\\" alt=\\"\\"></a>                                      \\n              <div class=\\"cart-info cart-wrap\\">\\n          <button data-toggle=\\"modal\\" onclick=\\"addtocart(\'").concat(p.id, "\')\\" title=\\"Add to cart\\">\\n          <i class=\\"ti-shopping-cart\\"></i></button> <a href=\\"javascript:void(0)\\" onclick=\\"addtowishlist(\'").concat(p.id, "\')\\" title=\\"Add to Wishlist\\">\\n          <i class=\\"ti-heart\\" aria-hidden=\\"true\\"></i></a> <a href=\\"#\\" data-toggle=\\"modal\\"\\n            data-target=\\"#quick-view\\" title=\\"Quick View\\"><i class=\\"ti-search\\" aria-hidden=\\"true\\">\\n            </i></a>\\n            <a href=\\"/jetcart/compare?name=").concat(encodeURIComponent(p.productname), "$price=").concat(p.productprice, "\\" title=\\"Compare\\">\\n            <i class=\\"ti-reload\\" aria-hidden=\\"true\\"></i></a>\\n            </div></div>\\n                           <div class=\\"product-detail\\">\\n                            <div class=\\"rating\\"><i class=\\"fa fa-star\\"></i>\\n                            <i class=\\"fa fa-star\\"></i>\\n                            <i class=\\"fa fa-star\\"></i> \\n                            <i class=\\"fa fa-star\\"></i>\\n                            <i class=\\"fa fa-star\\"></i>\\n                            </div>\\n                            <a href=\\"/jetcart/productpageappliance\\">\\n                            <h6>").concat(p.productname, "</h6>\\n                            </a>\\n                            <h4>N").concat(parseFloat(p.productprice).toFixed(2).replace(/\\d(?=(\\d{3})+\\.)/g, \'$&,\'), "</h4>\\n                            <h4><del>N").concat(parseFloat(p.productprice).toFixed(2).replace(/\\d(?=(\\d{3})+\\.)/g, \'$&,\'), "</del></h4>\\n                            </div>\\n                        </div>\\n         </div>")); // console.log(\'inner loop got here \') ; \n\n      if (counter === 4) {\n        // console.log(\'got here \') ;\n        rowbuilder.append("</div>"); // close  the  row \n\n        console.log(\'closing  the row .....\');\n        strbuildr.append(rowbuilder.toString());\n        rowbuilder = null;\n        counter = 0;\n      }\n\n      counter++;\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n}; //animate product cateory page\n\nfunction animatePrdCat(item) {\n  // console.log(\'item \',item)\n  $.ajax({\n    type: \'get\',\n    url: "".concat(_url__WEBPACK_IMPORTED_MODULE_0__.backendurl, "/product/loadproductcategory/").concat(item),\n    dataType: \'json\',\n    success: function success(html) {\n      // console.log(\'html \',html) ;\n      var strbuildr = new StringBuilder(); // var html2 = JSON.parse(html) ;\n\n      var rowbuilder = new StringBuilder();\n      processanimated(html, strbuildr, rowbuilder); // $(\'#catalogue\').empty().html(strbuildr.toString()); you can also add it here .just check later  \n\n      setTimeout(function () {\n        $(\'#catalogue\').empty().html(strbuildr.toString());\n        animateProductCategoryPage(\'.catalogue\', \'fadeOutRightBig\', function () {\n          // console.log(\'calling anonymous function .....\');\n          animatePrdCat(item);\n        }); //recursion \n      }, 2000);\n    }\n  });\n}\nfunction animateCSS(element, animationName, callback) {\n  // setTimeout(function(){\n  console.log(\'entered my animateCSS .....\', element, animationName);\n  var node = document.querySelector(element);\n  console.log(\'inside anim css\');\n  node.classList.add(\'animated\', animationName);\n  console.log(\'inside anim css classlist\');\n\n  function handleAnimationEnd() {\n    console.log(\'inside handle ......\');\n    node.classList.remove(\'animated\', animationName);\n    node.removeEventListener(\'animationend\', handleAnimationEnd);\n    console.log(\'animated\');\n\n    if (typeof callback === \'function\') {\n      // animateitems() ;\n      console.log(\'calling  the  animate .....\');\n      callback();\n    }\n  }\n\n  console.log(\'calling animation animated\'); // node.classList.add(\'animated\',animationName) ;\n\n  node.addEventListener(\'animationend\', handleAnimationEnd);\n  console.log(\'listener added \'); // },2000);\n}\nfunction animateitems(backendurl, element, animationtype, domdivelement, methodtype, url) {\n  console.log(\'calling again ----- and emptying it ....\'); // domdivelement.innerHTML  = \'\' ;\n\n  $.ajax({\n    url: url,\n    type: methodtype,\n    dataType: \'json\',\n    // data:\'pageNumber=4\'+\'&pageSize=2\',\n    beforeSend: function beforeSend() {\n      console.log(\'sending\');\n    },\n    success: function success(r) {\n      // console.log(\'returning json \', r);\n      var json = r; // console.log(\'appending  json \', json);\n      //  let json = JSON.parse(r); \n\n      var keys = Object.keys(r);\n      var prdcatalogue = new StringBuilder();\n\n      for (var _i = 0, _keys = keys; _i < _keys.length; _i++) {\n        var k = _keys[_i];\n        //  console.log(\' k \', k, json[k]);\n        var strbuildr = new StringBuilder();\n        strbuildr.append("<div class=\\"row offset-5\\"><div class=\\"title2\\">\\n        <h2 class=\\"title-inner2\\">".concat(k, "</h2></div></div><div class=\\"row offset-1\\">"));\n\n        var _iterator2 = _createForOfIteratorHelper(json[k]),\n            _step2;\n\n        try {\n          for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n            var p = _step2.value;\n            // console.log(\' p of \',k,`${backendurl}/jetstore/${p.imageurl}`) ;\n            var image = "".concat(backendurl, "/jetstore/").concat(p.imageurl);\n\n            if (p.productstatus === \'refurbished\') {\n              p.productstatus = \'ref\';\n            }\n\n            strbuildr.append("<div class=\\"col-md-3\\">\\n                     <div class=\\"product-box\\">\\n                       <div class=\\"img-wrapper\\">\\n                       <div class=\\"lable-block\\"><span class=\\"lable3\\">".concat(p.productstatus, "</span> \\n                       <span class=\\"lable4\\">on\\n                       sale</span></div>\\n             <a href=\\"javascript:void(0)\\" onclick=\\"loadprd(\'").concat(p.id, "\',\'/jetcart/productpage\')\\">>\\n             <img src=\\"").concat(image, "\\" width=\\"180px\\" height=\\"180px\\" alt=\\"\\"></a>                                      \\n                  <div class=\\"cart-info cart-wrap\\">\\n              <button data-toggle=\\"modal\\" onclick=\\"addtocart(\'").concat(p.id, "\')\\" title=\\"Add to cart\\">\\n              <i class=\\"ti-shopping-cart\\"></i>\\n              </button> <a href=\\"javascript:void(0)\\" onclick=\\"addtocartforwishlist(\'").concat(p.id, "\')\\" title=\\"Add to Wishlist\\">\\n              <i class=\\"ti-heart\\" aria-hidden=\\"true\\"></i></a> <a href=\\"#\\" data-toggle=\\"modal\\"\\n                data-target=\\"#quick-view\\" title=\\"Quick View\\"><i class=\\"ti-search\\" aria-hidden=\\"true\\">\\n                </i></a>\\n                <a href=\\"/jetcart/compare?name=").concat(encodeURIComponent(p.productname), "$price=").concat(p.productprice, "\\" title=\\"Compare\\">\\n                <i class=\\"ti-reload\\" aria-hidden=\\"true\\"></i></a>\\n                </div></div>\\n                               <div class=\\"product-detail\\">\\n                                <div class=\\"rating\\"><i class=\\"fa fa-star\\"></i> <i class=\\"fa fa-star\\">\\n                                </i> <i class=\\"fa fa-star\\"></i> <i class=\\"fa fa-star\\"></i> <i class=\\"fa fa-star\\">\\n                                </i>\\n                                </div>\\n                                <a href=\\"/jetcart/productpageappliance\\">\\n                                <h6>").concat(p.productname, "</h6>\\n                                </a>\\n                                <h4>N").concat(parseFloat(p.productprice).toFixed(2).replace(/\\d(?=(\\d{3})+\\.)/g, \'$&,\'), "</h4>\\n                            </div>\\n                            </div>\\n             </div>")); //  console.log(\'inner loop got here \') ; \n          } //  console.log(\'got here \') ;\n\n        } catch (err) {\n          _iterator2.e(err);\n        } finally {\n          _iterator2.f();\n        }\n\n        strbuildr.append("</div>");\n        prdcatalogue.append($.trim(strbuildr.toString()));\n      } // console.log(domdivelement) ;\n      // domdivelement.empty().html(prdcatalogue.toString());\n\n\n      domdivelement.innerHTML = prdcatalogue.toString(); //console.log(\'appended to the dom .......\');\n      //console.log(\'calling the method again .......\');\n      // console.log(\'domdivelement .....\',domdivelement);\n\n      setTimeout(function () {\n        // //   //delay for 2000\n        //   //const catalogue  =  document.getElementById(\'catalogue\') as HTMLDivElement;\n        animateCSS(element, animationtype, function () {\n          animateitems(backendurl, element, animationtype, domdivelement, methodtype, url);\n        }); //recursion \n      }, 3000);\n    }\n  });\n} // animate related  products\n\nfunction animaterelatedprd(backendurl, element, animationtype, domdivelement, methodtype, url) {\n  $.ajax({\n    url: url,\n    type: methodtype,\n    dataType: \'json\',\n    // data:\'pageNumber=4\'+\'&pageSize=2\',\n    beforeSend: function beforeSend() {\n      console.log(\'sending\');\n    },\n    success: function success(r) {\n      // console.log(\'returning json \', r);\n      var json = r;\n      console.log(\'json\', json);\n      var relatedprd = new StringBuilder();\n      json.forEach(function (el) {\n        relatedprd.append("<div class=\\"col-xl-2 col-md-4 col-sm-6\\">\\n       <div class=\\"product-box\\">\\n           <div class=\\"img-wrapper\\">\\n               <div class=\\"front\\">\\n                   <a href=\\"/jetcart/productpage\\" onclick=\\"loadprd(\'".concat(el.id, "\',\'/jetcart/productpage\')\\">\\n                   <img src=\\"").concat(backendurl, "/jetstore/").concat(el.imageurl, "\\"\\n                           class=\\"img-fluid blur-up lazyload bg-img\\" alt=\\"\\"></a>\\n               </div>\\n               <div class=\\"back\\">\\n                   <a href=\\"#\\"><img src=\\"").concat(backendurl, "/jetstore/").concat(el.imageurl, "\\"\\n                  class=\\"img-fluid blur-up lazyload bg-img\\" alt=\\"\\"></a>\\n               </div>\\n               <div class=\\"cart-info cart-wrap\\">\\n                   <button data-toggle=\\"modal\\" onclick=\\"addtocart(\'").concat(el.id, "\')\\" title=\\"Add to cart\\"><i\\n                           class=\\"ti-shopping-cart\\"></i></button> \\n             <a href=\\"javascript:void(0)\\" onclick=\\"addtocartforwishlist(\'").concat(el.id, "\')\\"\\n                       title=\\"Add to Wishlist\\"><i class=\\"ti-heart\\" aria-hidden=\\"true\\"></i></a> \\n                       <a href=\\"#\\"\\n                       data-toggle=\\"modal\\" data-target=\\"#quick-view\\" title=\\"Quick View\\"><i\\n                           class=\\"ti-search\\" aria-hidden=\\"true\\"></i></a> \\n           <a href=\\"/jetcart/compare?name=").concat(encodeURIComponent(el.productname), "$price=").concat(el.productprice, "\\"\\n                       title=\\"Compare\\"><i class=\\"ti-reload\\" aria-hidden=\\"true\\"></i></a></div>\\n           </div>\\n           <div class=\\"product-detail\\">\\n               <div class=\\"rating\\"><i class=\\"fa fa-star\\"></i> <i class=\\"fa fa-star\\"></i> <i\\n                       class=\\"fa fa-star\\"></i> <i class=\\"fa fa-star\\"></i> <i class=\\"fa fa-star\\"></i>\\n                       </div>\\n               <a href=\\"product-page(no-sidebar).html\\">\\n                   <h6>").concat(el.categoryid, "</h6>\\n               </a>\\n               <h4>N").concat(parseFloat(el.productprice).toFixed(2).replace(/\\d(?=(\\d{3})+\\.)/g, \'$&,\'), "</h4>\\n               <h4><del>N").concat(parseFloat(el.productprice).toFixed(2).replace(/\\d(?=(\\d{3})+\\.)/g, \'$&,\'), "</del></h4>\\n           </div>\\n       </div>\\n   </div>"));\n      }); //append to dom\n      //   $(\'#search-product\').empty().html(relatedprd.toString());\n\n      domdivelement.innerHTML = relatedprd.toString();\n      setTimeout(function () {\n        //delay for 2000\n        //const catalogue  =  document.getElementById(\'catalogue\') as HTMLDivElement;\n        animateCSS(element, animationtype, function () {\n          animaterelatedprd(backendurl, element, animationtype, domdivelement, methodtype, url);\n        }); //recursion \n      }, 4000);\n    }\n  });\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///27\n')}],__webpack_module_cache__={};function __webpack_require__(I){var c=__webpack_module_cache__[I];if(void 0!==c)return c.exports;var g=__webpack_module_cache__[I]={exports:{}};return __webpack_modules__[I](g,g.exports,__webpack_require__),g.exports}__webpack_require__.n=I=>{var c=I&&I.__esModule?()=>I.default:()=>I;return __webpack_require__.d(c,{a:c}),c},__webpack_require__.d=(I,c)=>{for(var g in c)__webpack_require__.o(c,g)&&!__webpack_require__.o(I,g)&&Object.defineProperty(I,g,{enumerable:!0,get:c[g]})},__webpack_require__.o=(I,c)=>Object.prototype.hasOwnProperty.call(I,c),__webpack_require__.r=I=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(I,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(I,"__esModule",{value:!0})};var __webpack_exports__=__webpack_require__(24)})();